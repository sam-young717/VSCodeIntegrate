<?xml version='1.0' encoding='UTF-8'?><ResultsSession buildId="2025-03-17" climode="true" endTime="2025-03-17T16:40:42-04:00" execEnv="win32_x86_64" hasViols="true" id="1742963947038" lang="en_US" machine="syoung-pc" prjModule="Timer" project="" tag="${scontrol_branch}-win32_x86_64" time="2025-03-17T16:40:40-04:00" toolDispName="C/C++test" toolId="c++test" toolName="DTP Engine for C/C++" toolVer="2024.2.0" user="syoung">
   <TestConfig machine="syoung-pc" name="MISRA C 2004" pseudoUrl="builtin://MISRA C 2004" user="syoung"/>
   <Authors>
      <Author id="dev1" name="syoung"/>
   </Authors>
   <Analyzers>
      <Analyzer id="com.parasoft.xtest.scope.analyzer" name="Scope Analyzer" ver="10.7.1.20241108"/>
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.code" name="Parasoft C/C++ Code Analyzer" ver="10.7.1.20241114B2528"/>
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.pattern" name="Parasoft C/C++ Static Analyzer" ver="10.7.1.20241114B2528"/>
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.flow" name="Parasoft C/C++ Flow Analyzer" ver="10.7.1.20241023B5124"/>
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.global" name="Parasoft C/C++ Global Static Analyzer" ver="10.7.1.20241114B2528"/>
   </Analyzers>
   <VersionInfos>
      <StorageInfo ownerId="" resultId="ISetupResult" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricsViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IExecutionViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IDupCodeViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IFlowAnalysisViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IFunctionalViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IChangeImpactViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="ICodingStandardsViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IUnitTestViolation" ver="1" ver10x="1"/>
   </VersionInfos>
   <Goals tsks="50">
      
   </Goals>
   <Scope>
      <Repositories/>
      <Locations>
         <Loc auth="syoung" hash="-249486341" locRef="1" projId="Timer" projPath="/Timer" project="Timer" resProjPath="clock.c" totLns="30" uri="file:/C:/Users/syoung/Documents/CppTest/cpptest/examples/Timer/clock.c"/>
         <Loc auth="syoung" hash="65740504" locRef="2" projId="Timer" projPath="/Timer" project="Timer" resProjPath="driver.c" totLns="76" uri="file:/C:/Users/syoung/Documents/CppTest/cpptest/examples/Timer/driver.c"/>
         <Loc auth="syoung" hash="-275311578" locRef="3" projId="Timer" projPath="/Timer" project="Timer" resProjPath="timer.c" totLns="155" uri="file:/C:/Users/syoung/Documents/CppTest/cpptest/examples/Timer/timer.c"/>
         <Loc auth="syoung" hash="844867668" locRef="4" projId="Timer" projPath="/Timer" project="Timer" resProjPath="stdinout.c" totLns="55" uri="file:/C:/Users/syoung/Documents/CppTest/cpptest/examples/Timer/stdinout.c"/>
         <Loc auth="syoung" hash="-1204881763" locRef="5" projId="Timer" projPath="/Timer" project="Timer" resProjPath="clock.h" totLns="14" uri="file:/C:/Users/syoung/Documents/CppTest/cpptest/examples/Timer/clock.h"/>
         <Loc auth="syoung" hash="1651539479" locRef="6" projId="Timer" projPath="/Timer" project="Timer" resProjPath="consts.h" totLns="9" uri="file:/C:/Users/syoung/Documents/CppTest/cpptest/examples/Timer/consts.h"/>
         <Loc auth="syoung" hash="-311568100" locRef="7" projId="Timer" projPath="/Timer" project="Timer" resProjPath="timer.h" totLns="36" uri="file:/C:/Users/syoung/Documents/CppTest/cpptest/examples/Timer/timer.h"/>
         <Loc auth="syoung" hash="-311681184" locRef="8" projId="Timer" projPath="/Timer" project="Timer" resProjPath="inout.h" totLns="15" uri="file:/C:/Users/syoung/Documents/CppTest/cpptest/examples/Timer/inout.h"/>
      </Locations>
   </Scope>
   
  <SetupProblems/>

   <CodingStandards ownerId="com.parasoft.xtest.checkers.api.standards" time="0:00:00">
      <Projects>
         <Project bdCheckedFiles="0" bdTotalFiles="0" checkedFiles="8" checkedLns="390" id="Timer" name="Timer" qfixErrs="0" suppErrs="0" totErrs="169" totFiles="8" totLns="390"/>
      </Projects>
      
      
      <Rules>
         <CategoriesList>
            <Category authTot="169;" authUrg="50;" desc="MISRA C 2004" name="MISRA2004" rules="224" total="169"/>
         </CategoriesList>
         <RulesList>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Don't write code that depends on the order of evaluation of function arguments" id="MISRA2004-12_2_b" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="4;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions between signed and unsigned integer types" id="MISRA2004-10_1_a" sev="3" total="4"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be no implicit conversions from integral to floating type" id="MISRA2004-10_1_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions of complex expressions" id="MISRA2004-10_1_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions from wider to narrower types" id="MISRA2004-10_1_d" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions of function return expressions" id="MISRA2004-10_1_e" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions of complex expressions" id="MISRA2004-10_1_f" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions of function arguments" id="MISRA2004-10_1_g" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions of complex expressions" id="MISRA2004-10_1_i" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions from floating to integral type" id="MISRA2004-10_2_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions from wider to narrower floating type" id="MISRA2004-10_2_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions from narrower to wider floating type" id="MISRA2004-10_2_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions of floating point numbers from wider to narrower floating type" id="MISRA2004-10_2_d" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The value of a complex expression of integer type shall only be cast to a type  of the same signedness that is no wider than the underlying type of the expression" id="MISRA2004-10_3" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The value of a complex expression of floating type should not be cast to a wider floating type" id="MISRA2004-10_4" origId="CODSTA-198" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The value of a complex expression of floating type should not be cast to an integer type" id="MISRA2004-10_4_b" origId="CODSTA-198_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="If the bitwise operators ~ and &lt;&lt; are applied to an operand of underlying type unsigned char or unsigned short, the result shall be immediately cast to the underlying type of the operand" id="MISRA2004-10_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Conversions shall not be performed between a pointer to a function and any type other than an integral type" id="MISRA2004-11_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Conversions shall not be performed between a pointer to object and any type other than an integral type, another pointer to object type or a pointer to void" id="MISRA2004-11_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Conversions shall not be performed between a pointer to object and any type other than an integral type, another pointer to object type or a pointer to void" id="MISRA2004-11_2_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Conversions shall not be performed between a pointer to object and any type other than an integral type, another pointer to object type or a pointer to void" id="MISRA2004-11_2_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A cast should not convert a pointer type to an integral type" id="MISRA2004-11_3_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A cast should not convert an integral type to a pointer type" id="MISRA2004-11_3_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A cast should not be performed between a pointer to object type and a different pointer to object type" id="MISRA2004-11_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A cast shall not remove any 'const' or 'volatile' qualification from the type of a pointer or reference" id="MISRA2004-11_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The comma operator shall not be used" id="MISRA2004-12_10" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The underlying bit representations of floating-point values shall not be used" id="MISRA2004-12_12" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="1;" authUrg="0;" cat="MISRA2004" desc="The increment (++) and decrement (--) operators should not be mixed with other operators in an expression" id="MISRA2004-12_13" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Use parenthesis for the right-hand operand of an assignment operator when it contains an assignment expression" id="MISRA2004-12_1_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Limited dependence should be placed on C's operator precedence rules in expressions" id="MISRA2004-12_1_d" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Use parentheses unless all operators in the expression are the same" id="MISRA2004-12_1_e" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The value of an expression shall be the same under any order of evaluation that the standard permits" id="MISRA2004-12_2_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Don't write code that depends on the order of evaluation of function designator and function arguments" id="MISRA2004-12_2_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Don't write code that depends on the order of evaluation of expression that involves a function call" id="MISRA2004-12_2_d" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Between sequence points an object shall have its stored value modified at most once by the evaluation of an expression" id="MISRA2004-12_2_e" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Do not use more than one volatile between two adjacent sequence points" id="MISRA2004-12_2_f" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Don't write code that depends on the order of evaluation of function calls" id="MISRA2004-12_2_g" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The operand of the sizeof operator shall not contain any expression which has side effects" id="MISRA2004-12_3" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Object designated by a volatile lvalue should not be accessed in the operand of the sizeof operator" id="MISRA2004-12_3_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The function call that causes the side effect shall not be the operand of the sizeof operator" id="MISRA2004-12_3_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The right-hand operand of a logical &amp;&amp; or || operator shall not contain side effects" id="MISRA2004-12_4_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The operands of a logical &amp;&amp; or || shall be primary-expressions" id="MISRA2004-12_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The operands of logical operators (&amp;&amp;, || and !) should be effectively Boolean" id="MISRA2004-12_6_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Expressions that are effectively Boolean should not be used as operands to operators other than (&amp;&amp;, ||, !, =, ==, !=, ?:)" id="MISRA2004-12_6_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Bitwise operators shall not be applied to operands whose underlying type is signed" id="MISRA2004-12_7" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The right-hand operand of a shift operator shall lie between zero and one less than the width in bits of the underlying type of the left-hand operand" id="MISRA2004-12_8" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The unary minus operator shall not be applied to an expression whose underlying type is unsigned" id="MISRA2004-12_9" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Assignment operators shall not be used in expressions that yield a Boolean value" id="MISRA2004-13_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="2;" authUrg="0;" cat="MISRA2004" desc="Tests of a value against zero should be made explicit, unless the operand is effectively Boolean" id="MISRA2004-13_2" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Floating-point expressions shall not be tested for equality or inequality" id="MISRA2004-13_3" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The controlling expression of a for statement shall not contain any objects of floating type" id="MISRA2004-13_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The three expressions of a for statement shall be concerned only with loop control" id="MISRA2004-13_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Do not modify for loop counter within a body of the loop" id="MISRA2004-13_6" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_aa" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_ab" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_ac" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_ad" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_ae" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_af" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_ag" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_ah" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_ai" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_aj" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_ak" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_d" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_j" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_k" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_l" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_m" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_n" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_s" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_t" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_u" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_v" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_w" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_x" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_y" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_z" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="All 'if...else-if' constructs shall be terminated with an 'else' clause" id="MISRA2004-14_10" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be no unreachable code in &quot;else&quot; block" id="MISRA2004-14_1_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be no unreachable code after 'return', 'break', 'continue', 'goto', 'throw' statements, and after calls to functions with the 'noreturn' attribute" id="MISRA2004-14_1_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be no unreachable code in &quot;if/else/while/for&quot; block" id="MISRA2004-14_1_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be no unreachable code in switch statement" id="MISRA2004-14_1_d" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be no unreachable code in 'for' loop" id="MISRA2004-14_1_e" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be no unreachable code after 'if' or 'switch' statement" id="MISRA2004-14_1_f" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be no unreachable code after &quot;if&quot; or &quot;switch&quot; statement inside while/for/do...while loop" id="MISRA2004-14_1_g" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="All non-null statements shall either have at least one side-effect however executed or cause control flow to change" id="MISRA2004-14_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A null statement shall occur on a line by itself or be followed by a comment" id="MISRA2004-14_3" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The goto statement shall not be used" id="MISRA2004-14_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The continue statement shall not be used" id="MISRA2004-14_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="For any iteration statement there shall be at most one break statement used for loop termination" id="MISRA2004-14_6" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="3;" authUrg="0;" cat="MISRA2004" desc="A function shall have a single point of exit at the end of the function" id="MISRA2004-14_7" sev="3" total="3"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The statement forming the body of a 'switch', 'while', 'do...while' or 'for' statement shall be a compound statement" id="MISRA2004-14_8" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="'if' and 'else' should be followed by a compound statement" id="MISRA2004-14_9" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A break statement should be placed only at the end of switch clause" id="MISRA2004-15_0_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A switch statement shall only contain switch labels and switch clauses, and no other code" id="MISRA2004-15_0_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A switch label shall only be used when the most closely-enclosing compound statement is the body of a switch statement" id="MISRA2004-15_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="An unconditional break statement shall terminate every non-empty case clause" id="MISRA2004-15_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="An unconditional break statement shall terminate every non-empty default clause" id="MISRA2004-15_2_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The final clause of a switch statement shall be the default clause" id="MISRA2004-15_3" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A switch expression shall not represent a value that is effectively Boolean" id="MISRA2004-15_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A switch expression shall not represent a value that is effectively Boolean" id="MISRA2004-15_4_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Every switch statement shall have at least one case clause" id="MISRA2004-15_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Functions shall not be defined with a variable number of arguments" id="MISRA2004-16_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="33;" authUrg="8;" cat="MISRA2004" desc="If a function returns error information, then that error information shall be tested" id="MISRA2004-16_10" sev="3" total="33"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Functions shall not call themselves, either directly or indirectly" id="MISRA2004-16_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="5;" authUrg="2;" cat="MISRA2004" desc="Identifiers shall be given for all of the parameters in a function prototype declaration" id="MISRA2004-16_3" sev="3" total="5"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The identifiers used in the declaration and definition of a function shall be identical" id="MISRA2004-16_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="17;" authUrg="4;" cat="MISRA2004" desc="Functions with no parameters shall be declared with parameter type void" id="MISRA2004-16_5" sev="3" total="17"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The number of arguments passed to a function shall match the number of parameters" id="MISRA2004-16_6" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="1;" authUrg="0;" cat="MISRA2004" desc="A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object" id="MISRA2004-16_7" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Declare a type of parameter as typedef to pointer to const if the pointer is not used to modify the addressed object" id="MISRA2004-16_7_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="All exit paths from a function with non-void return type shall have an explicit return statement with an expression" id="MISRA2004-16_8" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="All exit paths from a function, except main(), with non-void return type shall have an explicit return statement with an expression" id="MISRA2004-16_8_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A function identifier shall only be used with either a preceding '&amp;', or with a parenthesised parameter list, which may be empty" id="MISRA2004-16_9" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Do not apply arithmetic to pointers that don't address an array or array element" id="MISRA2004-17_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Pointer subtraction shall only be applied to pointers that address elements of the same array" id="MISRA2004-17_2" origId="CODSTA-13_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc=">, >=, &lt;, &lt;= shall not be applied to pointer types except where they point to the same array" id="MISRA2004-17_3" origId="CODSTA-13" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Array indexing shall be the only allowed form of pointer arithmetic" id="MISRA2004-17_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The declaration of objects should contain no more than 2 levels of pointer indirection" id="MISRA2004-17_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The address of an object with automatic storage shall not be returned from a function" id="MISRA2004-17_6_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The address of an object with automatic storage shall not be assigned to another object that may persist after the first object has ceased to exist" id="MISRA2004-17_6_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="All structure and union types shall be complete at the end of a translation unit" id="MISRA2004-18_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="An object shall not be assigned to an overlapping object" id="MISRA2004-18_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="An object shall not be assigned to an overlapping object" id="MISRA2004-18_2_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Unions shall not be used" id="MISRA2004-18_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="#include statements in a file should only be preceded by other preprocessor directives or comments" id="MISRA2004-19_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##" id="MISRA2004-19_10" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Do not use in preprocessor directives #if and #elif macros not defined in translation unit" id="MISRA2004-19_11_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be at most one occurrence of the # or ## preprocessor operators in a single macro definition" id="MISRA2004-19_12" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The # and ## preprocessor operators should not be used" id="MISRA2004-19_13" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The defined preprocessor operator shall only be used in one of the two standard forms" id="MISRA2004-19_14" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Precautions shall be taken in order to prevent the contents of a header file being included twice" id="MISRA2004-19_15" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Preprocessing directives shall be syntactically meaningful even when excluded by the preprocessor" id="MISRA2004-19_16" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="All #else, #elif and #endif preprocessor directives shall reside in the same file as the #if or #ifdef directive to which they are related" id="MISRA2004-19_17" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Non-standard characters should not occur in header file names in #include directives" id="MISRA2004-19_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The #include directive shall be followed by either a &lt;filename> or &quot;filename&quot; sequence" id="MISRA2004-19_3" origId="MISRA-089" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid keywords and basic types in macros" id="MISRA2004-19_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Macros shall not be #define'd or #undef'd within a block" id="MISRA2004-19_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="#undef shall not be used" id="MISRA2004-19_6" origId="PREPROC-25" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A function should be used in preference to a function-like macro" id="MISRA2004-19_7" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A function-like macro shall not be invoked without all of its arguments" id="MISRA2004-19_8" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Arguments to a function-like macro shall not contain tokens that look like preprocessing directives" id="MISRA2004-19_9" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="1;" authUrg="0;" cat="MISRA2004" desc="The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used" id="MISRA2004-20_10" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The 'abort()' function from the 'stdlib.h' or 'cstdlib' library shall not be used" id="MISRA2004-20_11" origId="PB-75" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The 'exit()' function from the 'stdlib.h' or 'cstdlib' library shall not be used" id="MISRA2004-20_11_b" origId="PB-75_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The 'getenv()' function from the 'stdlib.h' or 'cstdlib' library shall not be used" id="MISRA2004-20_11_c" origId="SECURITY-52" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The 'system()' function from the 'stdlib.h' or 'cstdlib' library should not be used" id="MISRA2004-20_11_d" origId="SECURITY-48_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="2;" authUrg="1;" cat="MISRA2004" desc="The standard header files &lt;time.h> or &lt;ctime> shall not be used" id="MISRA2004-20_12" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="10;" authUrg="2;" cat="MISRA2004" desc="The time handling functions and macros of the library &lt;time.h> shall not be used" id="MISRA2004-20_12_b" sev="3" total="10"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="7;" authUrg="3;" cat="MISRA2004" desc="The types defined in the library &lt;time.h> shall not be used" id="MISRA2004-20_12_c" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="4;" authUrg="3;" cat="MISRA2004" desc="Do not #define or #undef identifiers with names which start with underscore" id="MISRA2004-20_1_a" sev="3" total="4"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Do not redefine reserved words" id="MISRA2004-20_1_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined (C90 code)" id="MISRA2004-20_1_c" origId="CODSTA-92_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Do not #define nor #undef identifier 'defined'" id="MISRA2004-20_1_e" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The names of standard library macros, objects and functions shall not be reused" id="MISRA2004-20_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The names of standard library macros, objects and functions shall not be reused (C90)" id="MISRA2004-20_2_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The names of standard library macros, objects and functions shall not be reused (C99)" id="MISRA2004-20_2_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="8;" authUrg="0;" cat="MISRA2004" desc="The validity of values passed to library functions shall be checked" id="MISRA2004-20_3" sev="3" total="8"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="2;" authUrg="0;" cat="MISRA2004" desc="Dynamic heap memory allocation shall not be used" id="MISRA2004-20_4" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The error indicator 'errno' shall not be used" id="MISRA2004-20_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The macro offsetof, in library stddef.h, shall not be used" id="MISRA2004-20_6" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The facilities provided by &lt;setjmp.h> should not be used" id="MISRA2004-20_7" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The standard header files &lt;setjmp.h> or &lt;csetjmp> shall not be used" id="MISRA2004-20_7_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The standard header files &lt;signal.h> or &lt;csignal> shall not be used" id="MISRA2004-20_8" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The signal handling facilities of &lt;signal.h> shall not be used" id="MISRA2004-20_8_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="4;" authUrg="1;" cat="MISRA2004" desc="The input/output library stdio.h shall not be used" id="MISRA2004-20_9" sev="3" total="4"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Assembly language shall be encapsulated and isolated" id="MISRA2004-2_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Source code shall only use /* ... */ style comments" id="MISRA2004-2_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The character sequence /* shall not be used within a C-style comment" id="MISRA2004-2_3" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="All uses of the #pragma directive shall be documented and explained" id="MISRA2004-3_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Do not mix bit-fields and other data within the same structure" id="MISRA2004-3_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Only those escape sequences that are defined in the ISO C standard shall be used" id="MISRA2004-4_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Trigraphs shall not be used" id="MISRA2004-4_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="User-specified C external identifiers should differ in the first 31 characters" id="MISRA2004-5_1_a" origId="PORT-35_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="User-specified C internal identifiers should differ from external identifiers in the first 31 characters" id="MISRA2004-5_1_b" origId="PORT-35_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="User-specified C internal identifiers declared in the same scope should differ in the first 31 characters" id="MISRA2004-5_1_c" origId="PORT-35_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Identifier declared in a local or function prototype scope shall not hide an identifier declared in a global or namespace scope" id="MISRA2004-5_2_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Identifiers declared in an inner local scope should not hide identifiers declared in an outer local scope" id="MISRA2004-5_2_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Do not reuse typedef names" id="MISRA2004-5_3_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Do not reuse typedef names as a typedef name" id="MISRA2004-5_3_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A tag name shall not be reused for other purpose within the program" id="MISRA2004-5_4_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A tag name shall not be reused to define a different tag" id="MISRA2004-5_4_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The name of typedef should not be the same as the name of type that is typedef'd" id="MISRA2004-5_4_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The plain char type shall be used only for the storage and use of character values" id="MISRA2004-6_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="signed and unsigned char type shall be used only for the storage and use of numeric values" id="MISRA2004-6_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="typedefs to basic types should contain some digits in their name" id="MISRA2004-6_3" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="22;" authUrg="3;" cat="MISRA2004" desc="typedefs should be used in place of the basic types" id="MISRA2004-6_3_b" sev="3" total="22"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Bit fields shall only be defined to be of type unsigned int or signed int" id="MISRA2004-6_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Named bit-fields with signed integer type shall have a length of more than one bit" id="MISRA2004-6_5" origId="CODSTA-71" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Unnamed bit-fields with signed integer type shall have a length of more than one bit" id="MISRA2004-6_5_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Octal constants (other than zero) shall not be used" id="MISRA2004-7_1_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Octal escape sequences shall not be used" id="MISRA2004-7_1_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The static storage class specifier shall be used in definitions and declarations of objects and functions that have internal linkage" id="MISRA2004-8_11" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="When an array with external linkage is declared, its size should be explicitly specified" id="MISRA2004-8_12" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="24;" authUrg="12;" cat="MISRA2004" desc="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" id="MISRA2004-8_1_a" origId="MISRA-071_a" sev="3" total="24"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="15;" authUrg="9;" cat="MISRA2004" desc="Functions shall always have visible prototype at the function call" id="MISRA2004-8_1_b" origId="MISRA-071_b" sev="3" total="15"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Whenever a function is declared or defined, its type shall be explicitly stated" id="MISRA2004-8_2_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Whenever an object is declared or defined, its type shall be explicitly stated" id="MISRA2004-8_2_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Use identical types in declaration and definition" id="MISRA2004-8_3_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Use identical types in declaration and definition" id="MISRA2004-8_3_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="If objects or functions are declared more than once their types shall be compatible" id="MISRA2004-8_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be no definitions of objects or functions in a header file" id="MISRA2004-8_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Always declare functions at file scope" id="MISRA2004-8_6" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Objects shall be defined at block scope if they are only accessed from within a single function" id="MISRA2004-8_7" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="All automatic variables shall have been assigned a value before being used" id="MISRA2004-9_1" origId="MISRA-030" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The initializer for an aggregate or union shall be enclosed in braces" id="MISRA2004-9_2" origId="INIT-16" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Arrays shall not be partially initialized" id="MISRA2004-9_2_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The non-zero initialization of structures requires an explicit initializer for each element" id="MISRA2004-9_2_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="In an enumerator list, the &quot;=&quot; construct shall not be used to explicitly initialise members other than the first, unless all items are explicitly initialised" id="MISRA2004-9_3" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Sections of code should not be &quot;commented out&quot;" id="MISRA2004-2_4" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Sections of code should not be &quot;commented out&quot; using Doxygen comments" id="MISRA2004-2_4_b" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="No object or function identifier with static storage duration should be reused" id="MISRA2004-5_5_a" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="No object or function identifier with static storage duration should be reused" id="MISRA2004-5_5_b" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure and union member names" id="MISRA2004-5_6" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="No identifier name should be reused" id="MISRA2004-5_7" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="4;" authUrg="2;" cat="MISRA2004" desc="Objects or functions with external linkage shall be declared in a header file" id="MISRA2004-8_10" origId="MISRA-023" sev="4" total="4"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A 'U' suffix shall be applied to all constants of unsigned type" id="MISRA2004-10_6" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Limited dependence should be placed on C's operator precedence rules in expressions" id="MISRA2004-12_1_b" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="No parentheses are required for the operand of a unary operator" id="MISRA2004-12_1_c" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Limited dependence should be placed on C's operator precedence rules in expressions" id="MISRA2004-12_1_f" sev="5" total="0"/>
         </RulesList>
         <SeverityList>
            <Severity authTot="165;" authUrg="48;" id="3" total="165"/>
            <Severity authTot="4;" authUrg="2;" id="4" total="4"/>
         </SeverityList>
      </Rules>
      
  <Supps/>

      
  <StdViols>
    <StdViol msg="&lt;stdio.h> library shall not be used" ln="5" locFile="/Timer/clock.c" locStartln="5" sev="3" auth="syoung" locRef="1" rule="MISRA2004-20_9" lnHash="1233725276" rule.header="The input/output library stdio.h shall not be used" tool="c++test" lineHash="1233725276" unbViolId="7c17e7cb-95a5-32a3-bd6c-c50cce2e60ca" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5e5c2dc2-638f-3883-954c-301668b16ec2" locEndPos="1" locType="sr" urgent="true" hash="-249486341" locEndLn="5" goals="1,"/>
    <StdViol msg="Prototype of function 'display_time' does not precede function definition" ln="13" locFile="/Timer/clock.c" locStartln="13" sev="3" auth="syoung" locRef="1" rule="MISRA2004-8_1_a" lnHash="-523314505" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-523314505" unbViolId="a166bf0a-6f9a-3d87-b8ce-692a74c01de2" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="52a29561-4861-348f-8831-6bd2ef83e448" locEndPos="6" locType="sr" urgent="true" hash="-249486341" locEndLn="13" goals="1,"/>
    <StdViol msg="Declare function 'display_time' with parameter type void" ln="13" locFile="/Timer/clock.c" locStartln="13" sev="3" auth="syoung" locRef="1" rule="MISRA2004-16_5" lnHash="-523314505" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="-523314505" unbViolId="4ceee813-f0c5-3b7e-af4f-baf61703ae78" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="87cb6aaf-1315-388c-9956-74f1b86a27eb" locEndPos="6" locType="sr" urgent="true" hash="-249486341" locEndLn="13" goals="1,"/>
    <StdViol msg="The 'time_t' identifier should not be used" ln="16" locFile="/Timer/clock.c" locStartln="16" sev="3" auth="syoung" locRef="1" rule="MISRA2004-20_12_c" lnHash="-1564703446" rule.header="The types defined in the library &lt;time.h> shall not be used" tool="c++test" lineHash="-1564703446" unbViolId="35a7be7f-1175-3792-857d-f75a9bec7c55" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="301c66a2-99cc-3ed1-b390-eaeb223b7fcd" locEndPos="5" locType="sr" urgent="true" hash="-249486341" locEndLn="16" goals="1,"/>
    <StdViol msg="Usage of 'time' function is not allowed" ln="16" locFile="/Timer/clock.c" locStartln="16" sev="3" auth="syoung" locRef="1" rule="MISRA2004-20_12_b" lnHash="-1564703446" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="-1564703446" unbViolId="dcc97e3d-4728-3509-b64e-8eff8d344d5c" locStartPos="22" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="1896221f-ea7e-384c-b5c4-fc518ca27137" locEndPos="23" locType="sr" urgent="true" hash="-249486341" locEndLn="16" goals="1,"/>
    <StdViol msg="Usage of 'ctime' function is not allowed" ln="17" locFile="/Timer/clock.c" locStartln="17" sev="3" auth="syoung" locRef="1" rule="MISRA2004-20_12_b" lnHash="-237631284" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="-237631284" unbViolId="3b123f61-46c8-3d19-b68b-fc5b9e36be98" locStartPos="14" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="da6a94a7-ebb2-35f9-a933-35ba10a87ac4" locEndPos="15" locType="sr" urgent="true" hash="-249486341" locEndLn="17" goals="1,"/>
    <StdViol msg="Unused function's &quot;sprintf&quot; return value" ln="19" locFile="/Timer/clock.c" locStartln="19" sev="3" auth="syoung" locRef="1" rule="MISRA2004-16_10" lnHash="369521280" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="369521280" unbViolId="9ec36caa-a4e9-3ae3-af61-d5e241634666" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="ed8c6ae3-e2ff-3bd8-b324-e2ad359c141b" locEndPos="5" locType="sr" urgent="true" hash="-249486341" locEndLn="19" goals="1,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="20" locFile="/Timer/clock.c" locStartln="20" sev="3" auth="syoung" locRef="1" rule="MISRA2004-16_10" lnHash="-1350296736" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1350296736" unbViolId="cc6cf1c8-5816-3487-a0fc-026fdf0c30f1" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="4174ebe6-abb2-339d-b7fb-0843076eb7c8" locEndPos="5" locType="sr" urgent="true" hash="-249486341" locEndLn="20" goals="1,"/>
    <StdViol msg="The 'time_t' identifier should not be used" ln="27" locFile="/Timer/clock.c" locStartln="27" sev="3" auth="syoung" locRef="1" rule="MISRA2004-20_12_c" lnHash="-1989025327" rule.header="The types defined in the library &lt;time.h> shall not be used" tool="c++test" lineHash="-1989025327" unbViolId="e94d318b-b87b-313b-93dc-9d43c87f822f" locStartPos="14" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="b7772ed9-1212-3b40-b48c-d8f51fbd680f" locEndPos="15" locType="sr" urgent="true" hash="-249486341" locEndLn="27" goals="1,"/>
    <StdViol msg="&lt;stdio.h> library shall not be used" ln="6" locFile="/Timer/driver.c" locStartln="6" sev="3" auth="syoung" locRef="2" rule="MISRA2004-20_9" lnHash="1233725276" rule.header="The input/output library stdio.h shall not be used" tool="c++test" lineHash="1233725276" unbViolId="d71be808-da1e-3f9f-89c3-2b0c8e8c1822" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="ee9f58b5-eb0f-323d-aba0-f121bc9683f2" locEndPos="1" locType="sr" hash="65740504" locEndLn="6" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="13" locFile="/Timer/driver.c" locStartln="13" sev="3" auth="syoung" locRef="2" rule="MISRA2004-6_3_b" lnHash="-1050535651" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="-1050535651" unbViolId="16a00b2a-9b7c-3b3b-9d66-3e52ecd50ee1" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="b7feacfe-9d1f-3a29-ac86-f2ab8e09f9f1" locEndPos="1" locType="sr" hash="65740504" locEndLn="13" goals="0,"/>
    <StdViol msg="Function 'print_menu_get_action' has external linkage and is not declared in the header" ln="13" locFile="/Timer/driver.c" locStartln="13" sev="4" auth="syoung" locRef="2" rule="MISRA2004-8_10" lnHash="-1050535651" rule.header="Objects or functions with external linkage shall be declared in a header file" tool="c++test" lineHash="-1050535651" unbViolId="37db4543-d8df-3e7a-afe3-098c96878abd" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="341fb906-dfda-3690-bf41-3bf298f195ce" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="13" goals="1,"/>
    <StdViol msg="Prototype of function 'print_menu_get_action' does not precede function definition" ln="13" locFile="/Timer/driver.c" locStartln="13" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="-1050535651" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-1050535651" unbViolId="faec1658-9bd8-3ca5-85cc-44c07471a9ef" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="19442fa8-08e8-37e8-8d67-7e7a5d7dcb45" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="13" goals="1,"/>
    <StdViol msg="Declare function 'print_menu_get_action' with parameter type void" ln="13" locFile="/Timer/driver.c" locStartln="13" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_5" lnHash="-1050535651" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="-1050535651" unbViolId="b524feab-4f79-348e-b5cf-10a5b9e5abb9" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="b4e3867f-3702-3c21-86a1-926724dfb916" locEndPos="5" locType="sr" hash="65740504" locEndLn="13" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="15" locFile="/Timer/driver.c" locStartln="15" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="923795973" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="923795973" unbViolId="87d254c5-3815-3b71-acbf-4b7d65e6e4d4" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="42e15c1e-b757-3ef2-91b6-1759719d1531" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="15" goals="1,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="16" locFile="/Timer/driver.c" locStartln="16" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="378303775" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="378303775" unbViolId="a69efee3-229f-310a-95f1-6ec48735883f" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="0ae55d5a-79ea-3a7a-b18c-776e1809aff8" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="16" goals="1,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="17" locFile="/Timer/driver.c" locStartln="17" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="461595667" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="461595667" unbViolId="815f50c0-6477-3cc1-9696-ead43b0bdbb6" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="c5f9057b-02a4-35f1-b4a0-d3380172c514" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="17" goals="1,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="18" locFile="/Timer/driver.c" locStartln="18" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="-1874811899" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1874811899" unbViolId="200d2b5f-9dbc-3210-b8bb-8fee3f63b85c" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5f0a3331-ec1b-3bf1-92e4-d19e5c41893b" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="18" goals="1,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="19" locFile="/Timer/driver.c" locStartln="19" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="1674314502" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="1674314502" unbViolId="e3e71e0e-2aa4-3b8b-820d-a534dfd4ba22" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="38a670be-79e4-3593-bb0c-fc91af149ffd" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="19" goals="1,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="20" locFile="/Timer/driver.c" locStartln="20" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="-94421320" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-94421320" unbViolId="ebcd01eb-a635-3be8-8a2f-c389dcf00dda" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="174eab35-1072-34f9-abcf-4823209bacae" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="20" goals="1,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="21" locFile="/Timer/driver.c" locStartln="21" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="834318816" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="834318816" unbViolId="3bc9c299-c0e3-3ce7-8327-9f7c98db26a8" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="f91a4c66-ba35-35be-8a76-77117c9ec987" locEndPos="5" locType="sr" hash="65740504" locEndLn="21" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="22" locFile="/Timer/driver.c" locStartln="22" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="1075694496" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="1075694496" unbViolId="cc575e28-2b92-340b-a56b-4421ad406289" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="a437d3e4-7b2a-3b6b-8abc-269b380deef9" locEndPos="5" locType="sr" hash="65740504" locEndLn="22" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="23" locFile="/Timer/driver.c" locStartln="23" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="-1874811899" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1874811899" unbViolId="70a5e4e7-cefe-3a76-a7bf-48ffb91ebc75" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="e7ba938f-e0d0-39d8-befa-f30f54fa0646" locEndPos="5" locType="sr" hash="65740504" locEndLn="23" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="24" locFile="/Timer/driver.c" locStartln="24" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="-1018687565" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1018687565" unbViolId="67114a0f-1a94-3316-b1dc-b1346774ecfb" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="3529f51e-bae1-3e7d-b3e1-eef0bebb4755" locEndPos="5" locType="sr" hash="65740504" locEndLn="24" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="25" locFile="/Timer/driver.c" locStartln="25" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="-1874811899" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1874811899" unbViolId="6c592562-42a7-388f-a6a5-d5273656513f" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="0d09573e-e75a-3d8d-91bc-9ab4f9bb2ee0" locEndPos="5" locType="sr" hash="65740504" locEndLn="25" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="26" locFile="/Timer/driver.c" locStartln="26" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="-1234703117" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1234703117" unbViolId="a519774b-7f78-3a66-b0e9-7497f2475a1e" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="464fcefa-ea30-39bc-86b7-3212c621b8ad" locEndPos="5" locType="sr" hash="65740504" locEndLn="26" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="28" locFile="/Timer/driver.c" locStartln="28" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="-859906268" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-859906268" unbViolId="3018ef59-44e8-310c-97df-42f9b0c0412a" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="601bb4b5-e06a-39fe-b645-ce42b0cb39d7" locEndPos="5" locType="sr" hash="65740504" locEndLn="28" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="29" locFile="/Timer/driver.c" locStartln="29" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="-495843510" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-495843510" unbViolId="8331ae56-1748-394d-a5c8-b292c3695b7b" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="ae74ab77-9184-3371-8113-73dd67a063c0" locEndPos="13" locType="sr" urgent="true" hash="65740504" locEndLn="29" goals="1,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="29" locFile="/Timer/driver.c" locStartln="29" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_b" lnHash="-495843510" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="-495843510" unbViolId="7e74d6b9-7e27-3e7b-8e00-15cedb67a739" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="64f236e4-0fce-3644-a7d3-0dbbfb67f5b7" locEndPos="13" locType="sr" urgent="true" hash="65740504" locEndLn="29" goals="1,"/>
    <StdViol msg="Function 'main_loop' has external linkage and is not declared in the header" ln="32" locFile="/Timer/driver.c" locStartln="32" sev="4" auth="syoung" locRef="2" rule="MISRA2004-8_10" lnHash="2093791071" rule.header="Objects or functions with external linkage shall be declared in a header file" tool="c++test" lineHash="2093791071" unbViolId="49cc39e9-8799-3412-bc6c-2463a1cabe50" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="21d51a35-5b4d-3650-b29d-aca73e18567d" locEndPos="6" locType="sr" urgent="true" hash="65740504" locEndLn="32" goals="1,"/>
    <StdViol msg="Prototype of function 'main_loop' does not precede function definition" ln="32" locFile="/Timer/driver.c" locStartln="32" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="2093791071" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="2093791071" unbViolId="5912af38-98c4-3f93-900f-b36e1c0322cf" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="33b2ef09-d012-327c-9ff5-22f1ff2e9d27" locEndPos="6" locType="sr" urgent="true" hash="65740504" locEndLn="32" goals="1,"/>
    <StdViol msg="Declare function 'main_loop' with parameter type void" ln="32" locFile="/Timer/driver.c" locStartln="32" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_5" lnHash="2093791071" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="2093791071" unbViolId="df1a28c2-52ad-3634-abc0-6d71f9b3e276" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="b5ab610c-5ec4-3bf2-a84a-f633923ece3c" locEndPos="6" locType="sr" hash="65740504" locEndLn="32" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="35" locFile="/Timer/driver.c" locStartln="35" sev="3" auth="syoung" locRef="2" rule="MISRA2004-6_3_b" lnHash="1236489322" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1236489322" unbViolId="34dd530a-8377-3fce-93bc-2acce29872ad" locStartPos="8" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="288d32c2-3610-3eb9-b054-c40c54eed885" locEndPos="9" locType="sr" hash="65740504" locEndLn="35" goals="0,"/>
    <StdViol msg="Prototype of function 'print_menu_get_action' does not precede function call" ln="35" locFile="/Timer/driver.c" locStartln="35" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="1236489322" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="1236489322" unbViolId="d4878ed8-223a-3457-8f1c-9ca645a33b16" locStartPos="21" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5f50d8ef-b095-3206-824e-c480d152bfe0" locEndPos="22" locType="sr" urgent="true" hash="65740504" locEndLn="35" goals="1,"/>
    <StdViol msg="Prototype of function 'print_menu_get_action' does not precede function call" ln="35" locFile="/Timer/driver.c" locStartln="35" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_b" lnHash="1236489322" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="1236489322" unbViolId="969ab9c6-f014-3bd5-b4d9-0f781e9f3c3e" locStartPos="21" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="70992ceb-3f84-3a8b-8275-7a88a4b49bc2" locEndPos="22" locType="sr" urgent="true" hash="65740504" locEndLn="35" goals="1,"/>
    <StdViol msg="Prototype of function 'add_timer' does not precede function call" ln="40" locFile="/Timer/driver.c" locStartln="40" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="-1326866858" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-1326866858" unbViolId="5867400b-4797-3f9a-99c0-03de5c3b6464" locStartPos="18" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="0ebfbd8a-577a-3856-8e80-ad4f44d99b02" locEndPos="19" locType="sr" urgent="true" hash="65740504" locEndLn="40" goals="1,"/>
    <StdViol msg="Prototype of function 'add_timer' does not precede function call" ln="40" locFile="/Timer/driver.c" locStartln="40" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_b" lnHash="-1326866858" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="-1326866858" unbViolId="1513248f-523d-3239-84d4-535254f08437" locStartPos="18" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="49e796f2-aac6-3b4e-a54e-f5da354b5712" locEndPos="19" locType="sr" urgent="true" hash="65740504" locEndLn="40" goals="1,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="42" locFile="/Timer/driver.c" locStartln="42" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="420014112" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="420014112" unbViolId="84a837e4-5acd-39c6-b0a3-93eb810759fb" locStartPos="16" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="267e5f7f-e058-323b-a029-5d4e9e62e4ac" locEndPos="17" locType="sr" hash="65740504" locEndLn="42" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="44" locFile="/Timer/driver.c" locStartln="44" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="1318983287" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="1318983287" unbViolId="3326a56b-54ed-3369-9792-a5504b5f9432" locStartPos="16" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5db910c6-7cc3-3f97-9a44-8b7c25fde9ba" locEndPos="17" locType="sr" hash="65740504" locEndLn="44" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="48" locFile="/Timer/driver.c" locStartln="48" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="482597223" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="482597223" unbViolId="e198b4a6-52b1-39e2-b84f-43ec09b5a0d1" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="018af125-1da2-3b98-a70d-20e05399300a" locEndPos="13" locType="sr" hash="65740504" locEndLn="48" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="49" locFile="/Timer/driver.c" locStartln="49" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="-429052551" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-429052551" unbViolId="3604e06b-a4d0-35e2-9223-ab2dc743237d" locStartPos="32" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="1a68a0bb-84fd-3918-89a0-9006d345a813" locEndPos="33" locType="sr" urgent="true" hash="65740504" locEndLn="49" goals="1,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="49" locFile="/Timer/driver.c" locStartln="49" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_b" lnHash="-429052551" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="-429052551" unbViolId="31697d9f-5cbf-3231-9be5-777928dc34e3" locStartPos="32" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="e4880659-bc5f-3647-b5e6-86ede88edffe" locEndPos="33" locType="sr" urgent="true" hash="65740504" locEndLn="49" goals="1,"/>
    <StdViol msg="Prototype of function 'list_timers' does not precede function call" ln="52" locFile="/Timer/driver.c" locStartln="52" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="1582224491" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="1582224491" unbViolId="227b601b-a114-3ca1-8100-4bb5e24662ce" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="1784f28c-02c6-376a-b9b8-62e62ed42c0f" locEndPos="13" locType="sr" urgent="true" hash="65740504" locEndLn="52" goals="1,"/>
    <StdViol msg="Prototype of function 'list_timers' does not precede function call" ln="52" locFile="/Timer/driver.c" locStartln="52" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_b" lnHash="1582224491" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="1582224491" unbViolId="87bf6bff-7061-303d-b78e-1b4f4b4139b5" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="24ea6d1e-8669-3890-b5df-f8b74094ece8" locEndPos="13" locType="sr" urgent="true" hash="65740504" locEndLn="52" goals="1,"/>
    <StdViol msg="Prototype of function 'display_time' does not precede function call" ln="55" locFile="/Timer/driver.c" locStartln="55" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="-1947009296" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-1947009296" unbViolId="7d0df224-9c6b-3cff-b5e4-cb99e7301656" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="9c2a747a-64ae-3e3c-95a4-82d33e1a828b" locEndPos="13" locType="sr" urgent="true" hash="65740504" locEndLn="55" goals="1,"/>
    <StdViol msg="Prototype of function 'display_time' does not precede function call" ln="55" locFile="/Timer/driver.c" locStartln="55" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_b" lnHash="-1947009296" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="-1947009296" unbViolId="be31c3e4-ab96-3673-88a2-741ca53f7259" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="6be0b8f8-cf1e-307c-af2a-34efd6d3e4f7" locEndPos="13" locType="sr" urgent="true" hash="65740504" locEndLn="55" goals="1,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="59" locFile="/Timer/driver.c" locStartln="59" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="-1303736882" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1303736882" unbViolId="3d78abfc-132d-3ab0-b2ad-d21981e6d5ac" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="ac057d4c-e101-378f-b435-f2c2385e4d2e" locEndPos="13" locType="sr" hash="65740504" locEndLn="59" goals="0,"/>
    <StdViol msg="'return' statement should be at the end of the 'main_loop' function" ln="60" locFile="/Timer/driver.c" locStartln="60" sev="3" auth="syoung" locRef="2" rule="MISRA2004-14_7" lnHash="-1196601077" rule.header="A function shall have a single point of exit at the end of the function" tool="c++test" lineHash="-1196601077" unbViolId="2f759b5d-8314-3912-ad10-7f2f7d4b17af" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="92c38110-78c9-307e-a967-9862f5a861c9" locEndPos="13" locType="sr" hash="65740504" locEndLn="60" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="63" locFile="/Timer/driver.c" locStartln="63" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="94038296" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="94038296" unbViolId="af6ea188-b6e7-3025-b13a-e202e6ea663e" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="1e85ae91-7c7a-3e58-a6a2-319f5e32b9fa" locEndPos="13" locType="sr" hash="65740504" locEndLn="63" goals="0,"/>
    <StdViol msg="Declare function 'main' with parameter type void" ln="69" locFile="/Timer/driver.c" locStartln="69" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_5" lnHash="1440699851" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="1440699851" unbViolId="03109135-7f7a-3587-9aa8-eae9c786570d" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="dbab8fe5-9286-35d2-839a-fa12cd05f4d8" locEndPos="5" locType="sr" hash="65740504" locEndLn="69" goals="0,"/>
    <StdViol msg="Prototype of function 'init_timer' does not precede function call" ln="71" locFile="/Timer/driver.c" locStartln="71" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="932563601" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="932563601" unbViolId="7bca076c-6e50-3704-ab48-040be6ffaf4c" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="35400b7a-4d89-35dc-a7a0-88a4dd84fc38" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="71" goals="1,"/>
    <StdViol msg="Prototype of function 'init_timer' does not precede function call" ln="71" locFile="/Timer/driver.c" locStartln="71" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_b" lnHash="932563601" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="932563601" unbViolId="90ad37ef-99a9-3099-bdb4-50e9b3ba4342" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="e4af72fd-c022-3421-b42c-92a1ef84b3aa" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="71" goals="1,"/>
    <StdViol msg="Prototype of function 'main_loop' does not precede function call" ln="72" locFile="/Timer/driver.c" locStartln="72" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="-660983347" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-660983347" unbViolId="618a25c6-db2d-3843-9033-2ca223645175" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="ff69cdfa-d1b2-321a-92f9-4bac1dc7d58f" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="72" goals="1,"/>
    <StdViol msg="Prototype of function 'main_loop' does not precede function call" ln="72" locFile="/Timer/driver.c" locStartln="72" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_b" lnHash="-660983347" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="-660983347" unbViolId="6e3d3006-6d0a-31d9-880b-5d193acc68b3" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5c9ff700-7c67-327c-8781-37e0722e9fb1" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="72" goals="1,"/>
    <StdViol msg="Prototype of function 'uninit_timer' does not precede function call" ln="73" locFile="/Timer/driver.c" locStartln="73" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="699424085" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="699424085" unbViolId="90942af8-6132-3d8b-bb7b-1f60a10ed829" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="b065af7c-4296-3692-9486-f4937447592b" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="73" goals="1,"/>
    <StdViol msg="Prototype of function 'uninit_timer' does not precede function call" ln="73" locFile="/Timer/driver.c" locStartln="73" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_b" lnHash="699424085" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="699424085" unbViolId="af2fc934-9022-3b78-80fb-086109825df9" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="83e1d40f-47ab-32c2-8d59-3e9869cfc4a1" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="73" goals="1,"/>
    <StdViol msg="&lt;stdio.h> library shall not be used" ln="6" locFile="/Timer/timer.c" locStartln="6" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_9" lnHash="1233725276" rule.header="The input/output library stdio.h shall not be used" tool="c++test" lineHash="1233725276" unbViolId="ed0f58e8-c3d3-33fe-9d8c-6539e0b31aa5" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="78e8298f-fed8-349f-b17b-729d6bb9bd0d" locEndPos="1" locType="sr" hash="-275311578" locEndLn="6" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="17" locFile="/Timer/timer.c" locStartln="17" sev="3" auth="syoung" locRef="3" rule="MISRA2004-6_3_b" lnHash="1227318948" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1227318948" unbViolId="6ddfc6e6-3594-3679-8e0d-3f35e2fa2fd1" locStartPos="6" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="f4215b70-aaa2-3fb4-a3ca-ad635d4906d1" locEndPos="7" locType="sr" hash="-275311578" locEndLn="17" goals="0,"/>
    <StdViol msg="Global variable 'max_records' has external linkage and is not declared in the header" ln="17" locFile="/Timer/timer.c" locStartln="17" sev="4" auth="syoung" locRef="3" rule="MISRA2004-8_10" lnHash="1227318948" rule.header="Objects or functions with external linkage shall be declared in a header file" tool="c++test" lineHash="1227318948" unbViolId="c5380666-c792-3a38-8aca-2f2a244c9b0f" locStartPos="10" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="14ed2d81-5bec-3ffe-89bc-0b8dab41e320" locEndPos="11" locType="sr" hash="-275311578" locEndLn="17" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="18" locFile="/Timer/timer.c" locStartln="18" sev="3" auth="syoung" locRef="3" rule="MISRA2004-6_3_b" lnHash="1846901926" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1846901926" unbViolId="f0ee94c5-e843-3078-a521-5f7e972257ef" locStartPos="7" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="67a7c6b3-1a7a-3ceb-85c3-058e43e159ae" locEndPos="8" locType="sr" hash="-275311578" locEndLn="18" goals="0,"/>
    <StdViol msg="Prototype of function 'init_timer' does not precede function definition" ln="20" locFile="/Timer/timer.c" locStartln="20" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="-1542456861" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-1542456861" unbViolId="44d719ab-ebee-319f-a5a9-2536af39056a" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="d36785d1-f5e3-30b7-bd79-c4ff3255170f" locEndPos="6" locType="sr" hash="-275311578" locEndLn="20" goals="0,"/>
    <StdViol msg="Declare function 'init_timer' with parameter type void" ln="20" locFile="/Timer/timer.c" locStartln="20" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_5" lnHash="-1542456861" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="-1542456861" unbViolId="e86416f6-affb-3daf-99eb-17da848d5b5c" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="2f6d4771-a5a5-36ba-a5e7-e0e232223e29" locEndPos="6" locType="sr" hash="-275311578" locEndLn="20" goals="0,"/>
    <StdViol msg="Implicit conversion between signed and unsigned type shall not be used" ln="22" locFile="/Timer/timer.c" locStartln="22" sev="3" auth="syoung" locRef="3" rule="MISRA2004-10_1_a" lnHash="-1074791283" rule.header="Avoid implicit conversions between signed and unsigned integer types" tool="c++test" lineHash="-1074791283" unbViolId="4553d72e-8cc3-3b3e-826b-b6b575db3100" locStartPos="29" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="06c144c0-85bc-3064-a16b-8d82c1a62af5" locEndPos="30" locType="sr" hash="-275311578" locEndLn="22" goals="0,"/>
    <StdViol msg="Prototype of function 'uninit_timer' does not precede function definition" ln="25" locFile="/Timer/timer.c" locStartln="25" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="-301312004" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-301312004" unbViolId="91ad330a-bcae-3e77-b5e4-fe586bae104f" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="39ace4aa-b558-3657-bcdb-aaa29612e7fc" locEndPos="6" locType="sr" hash="-275311578" locEndLn="25" goals="0,"/>
    <StdViol msg="Declare function 'uninit_timer' with parameter type void" ln="25" locFile="/Timer/timer.c" locStartln="25" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_5" lnHash="-301312004" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="-301312004" unbViolId="95e61d71-aabd-3619-ba34-37b66aa38245" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="e0eddabe-3f27-3f7a-b531-fae91792330c" locEndPos="6" locType="sr" hash="-275311578" locEndLn="25" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="28" locFile="/Timer/timer.c" locStartln="28" sev="3" auth="syoung" locRef="3" rule="MISRA2004-6_3_b" lnHash="1679375043" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1679375043" unbViolId="f1466a8b-8a82-3a85-a4bb-d103cba18e6f" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="ca43eb0d-185e-30e3-ac3d-e305988e01e2" locEndPos="5" locType="sr" hash="-275311578" locEndLn="28" goals="0,"/>
    <StdViol msg="Function 'query_user' has external linkage and is not declared in the header" ln="38" locFile="/Timer/timer.c" locStartln="38" sev="4" auth="syoung" locRef="3" rule="MISRA2004-8_10" lnHash="1780718607" rule.header="Objects or functions with external linkage shall be declared in a header file" tool="c++test" lineHash="1780718607" unbViolId="82ca0dca-f0f3-38ee-8465-e46e3e6219b2" locStartPos="21" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="d0279616-925c-3b2c-9a91-86c1f489e443" locEndPos="22" locType="sr" hash="-275311578" locEndLn="38" goals="0,"/>
    <StdViol msg="Prototype of function 'query_user' does not precede function definition" ln="38" locFile="/Timer/timer.c" locStartln="38" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="1780718607" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="1780718607" unbViolId="4bf5e4eb-4557-34bf-a620-f66cd1f038ea" locStartPos="21" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="f1defeea-502b-3c4d-8d0f-0d3c27b703b8" locEndPos="22" locType="sr" hash="-275311578" locEndLn="38" goals="0,"/>
    <StdViol msg="Declare function 'query_user' with parameter type void" ln="38" locFile="/Timer/timer.c" locStartln="38" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_5" lnHash="1780718607" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="1780718607" unbViolId="10e99c60-ab81-3869-ac57-9273c8459fe6" locStartPos="21" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="28fc9ad1-2d5a-3c45-bd50-3255c5e34705" locEndPos="22" locType="sr" hash="-275311578" locEndLn="38" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="40" locFile="/Timer/timer.c" locStartln="40" sev="3" auth="syoung" locRef="3" rule="MISRA2004-6_3_b" lnHash="621530644" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="621530644" unbViolId="8a34cb4a-0d57-3a6c-b6a9-5b7da8c51c9a" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="95dc7bcc-bdda-38bd-a1ce-a27f292bd8ab" locEndPos="5" locType="sr" hash="-275311578" locEndLn="40" goals="0,"/>
    <StdViol msg="The 'time_t' identifier should not be used" ln="42" locFile="/Timer/timer.c" locStartln="42" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_c" lnHash="1079331828" rule.header="The types defined in the library &lt;time.h> shall not be used" tool="c++test" lineHash="1079331828" unbViolId="b25f9cad-2108-3d2b-9508-fccd6a2b2854" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="2276d950-65da-32fe-adc3-c125869bd641" locEndPos="5" locType="sr" hash="-275311578" locEndLn="42" goals="0,"/>
    <StdViol msg="The 'tm' identifier should not be used" ln="43" locFile="/Timer/timer.c" locStartln="43" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_c" lnHash="1350390768" rule.header="The types defined in the library &lt;time.h> shall not be used" tool="c++test" lineHash="1350390768" unbViolId="4100c195-a6e4-372a-aa5b-8b0388cf3842" locStartPos="11" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="90e5c4e8-4a8b-3026-b704-08be42add2cf" locEndPos="12" locType="sr" hash="-275311578" locEndLn="43" goals="0,"/>
    <StdViol msg="Usage of 'time' function is not allowed" ln="45" locFile="/Timer/timer.c" locStartln="45" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_b" lnHash="1705568950" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="1705568950" unbViolId="6aff3868-2443-32a8-adc5-435595fa9f16" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="cb44042d-5b63-35c6-a813-1c3ae4289a42" locEndPos="13" locType="sr" hash="-275311578" locEndLn="45" goals="0,"/>
    <StdViol msg="Usage of 'localtime' function is not allowed" ln="46" locFile="/Timer/timer.c" locStartln="46" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_b" lnHash="-1526808077" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="-1526808077" unbViolId="d4e7f038-95c4-3b67-a616-8f04aa40f2f1" locStartPos="13" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="32caf68f-3cc4-3317-bf1e-44744b420e2a" locEndPos="14" locType="sr" hash="-275311578" locEndLn="46" goals="0,"/>
    <StdViol msg="'malloc' function should not be used" ln="48" locFile="/Timer/timer.c" locStartln="48" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_4" lnHash="-527707354" rule.header="Dynamic heap memory allocation shall not be used" tool="c++test" lineHash="-527707354" unbViolId="c1cd8ac4-4b83-3a83-b4f5-45a2dc7f3697" locStartPos="39" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="45ca9c7f-ad85-312c-9285-a3bdf3731d1d" locEndPos="40" locType="sr" hash="-275311578" locEndLn="48" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="52" locFile="/Timer/timer.c" locStartln="52" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="-337297020" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-337297020" unbViolId="30a65a1c-45a8-34b9-8b85-d12c0bb52e66" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5677956d-7456-3a74-8d41-ece52abe1a88" locEndPos="5" locType="sr" hash="-275311578" locEndLn="52" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="53" locFile="/Timer/timer.c" locStartln="53" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="1051372518" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="1051372518" unbViolId="af12a461-c2ef-3acb-a383-549e63cef6e0" locStartPos="22" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="c697f128-6292-3625-8a4a-9eff00a8eff3" locEndPos="23" locType="sr" hash="-275311578" locEndLn="53" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="53" locFile="/Timer/timer.c" locStartln="53" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_b" lnHash="1051372518" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="1051372518" unbViolId="f19f6b75-8c49-3618-b069-6d41786de3fd" locStartPos="22" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="95710f11-ea55-342f-ab76-97cd17c55d24" locEndPos="23" locType="sr" hash="-275311578" locEndLn="53" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="54" locFile="/Timer/timer.c" locStartln="54" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="-1456902895" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1456902895" unbViolId="a194174c-03bd-34fd-b7f4-9cbaafd33773" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="730562b0-6eac-3867-91ab-0e4d04dbf1a7" locEndPos="5" locType="sr" hash="-275311578" locEndLn="54" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="55" locFile="/Timer/timer.c" locStartln="55" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="-1585297472" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-1585297472" unbViolId="018a3a8e-fb1a-3113-b590-c40104adab39" locStartPos="21" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="dd4e3600-c9de-32cb-8246-97701c4e8900" locEndPos="22" locType="sr" hash="-275311578" locEndLn="55" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="55" locFile="/Timer/timer.c" locStartln="55" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_b" lnHash="-1585297472" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="-1585297472" unbViolId="badc9d44-5d09-3d04-b8b6-7aff15c9b788" locStartPos="21" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="d5d00d31-9594-309a-852f-dbb6161d878b" locEndPos="22" locType="sr" hash="-275311578" locEndLn="55" goals="0,"/>
    <StdViol msg="Usage of 'mktime' function is not allowed" ln="57" locFile="/Timer/timer.c" locStartln="57" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_b" lnHash="-731975428" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="-731975428" unbViolId="e5d41797-790f-30a8-aec7-6f82a3ef1a25" locStartPos="28" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="7cd98587-dcde-38d1-a70f-67b6fcfdf686" locEndPos="29" locType="sr" hash="-275311578" locEndLn="57" goals="0,"/>
    <StdViol msg="Values &quot;tm_tmp&quot; passed to library function &quot;mktime&quot; without being checked" ln="57" locFile="/Timer/timer.c" locStartln="57" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_3" lnHash="-731975428" rule.header="The validity of values passed to library functions shall be checked" tool="c++test" lineHash="-731975428" unbViolId="1b77e31a-1a75-3220-ac06-1cf15af237ec" locStartPos="28" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="f26d1303-2da3-3d82-8ed9-5405a05a0f42" locEndPos="29" locType="sr" hash="-275311578" locEndLn="57" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="60" locFile="/Timer/timer.c" locStartln="60" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="17156239" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="17156239" unbViolId="40bffbe4-8c78-3b17-83d8-55694158c3b5" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="a123f507-887b-3187-be14-ef40d63075d6" locEndPos="5" locType="sr" hash="-275311578" locEndLn="60" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="61" locFile="/Timer/timer.c" locStartln="61" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="1051372518" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="1051372518" unbViolId="656031b0-7e86-3db9-879d-019ecf13b6f3" locStartPos="22" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="9ee45dae-a4ef-3c04-95ac-e7a879fe31d7" locEndPos="23" locType="sr" hash="-275311578" locEndLn="61" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="61" locFile="/Timer/timer.c" locStartln="61" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_b" lnHash="1051372518" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="1051372518" unbViolId="4a60d2c7-7bbf-38f5-8872-c6f1dd3b17c5" locStartPos="22" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="a9f61a79-b3c5-3313-8aa2-edbf36d46047" locEndPos="23" locType="sr" hash="-275311578" locEndLn="61" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="62" locFile="/Timer/timer.c" locStartln="62" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="-129737380" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-129737380" unbViolId="ccf0ee89-37f4-3bf8-9416-e0cb465c8c05" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="596b9782-c132-3e4c-b446-2aa25f9ae85a" locEndPos="5" locType="sr" hash="-275311578" locEndLn="62" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="63" locFile="/Timer/timer.c" locStartln="63" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="-1585297472" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-1585297472" unbViolId="e8c08090-6575-3cb1-a875-79493a4e1811" locStartPos="21" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="bfc28ee8-16dd-3c48-97a8-8e56cb012e4a" locEndPos="22" locType="sr" hash="-275311578" locEndLn="63" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="63" locFile="/Timer/timer.c" locStartln="63" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_b" lnHash="-1585297472" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="-1585297472" unbViolId="20e5ae22-e60c-36ae-b624-f1d9a1004941" locStartPos="21" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="4576d330-2171-3b23-9281-301b04ef107f" locEndPos="22" locType="sr" hash="-275311578" locEndLn="63" goals="0,"/>
    <StdViol msg="Usage of 'mktime' function is not allowed" ln="65" locFile="/Timer/timer.c" locStartln="65" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_b" lnHash="-1409060683" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="-1409060683" unbViolId="91add443-fb00-3399-a10a-91eb4179068c" locStartPos="26" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="7dcde2b5-90ee-378d-a73c-5c622da78858" locEndPos="27" locType="sr" hash="-275311578" locEndLn="65" goals="0,"/>
    <StdViol msg="Values &quot;tm_tmp&quot; passed to library function &quot;mktime&quot; without being checked" ln="65" locFile="/Timer/timer.c" locStartln="65" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_3" lnHash="-1409060683" rule.header="The validity of values passed to library functions shall be checked" tool="c++test" lineHash="-1409060683" unbViolId="4b95fb23-f666-3e78-a8bc-a1cbb54b78a7" locStartPos="26" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="e81c0f51-adc8-3c7a-b952-a728326e6b7a" locEndPos="27" locType="sr" hash="-275311578" locEndLn="65" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="68" locFile="/Timer/timer.c" locStartln="68" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="-397800787" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-397800787" unbViolId="f2799f82-e268-372a-9d56-dcdb0a3d803d" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="55744d2f-9100-321e-90c0-028e1d2de9af" locEndPos="5" locType="sr" hash="-275311578" locEndLn="68" goals="0,"/>
    <StdViol msg="Implicit conversion between signed and unsigned type shall not be used" ln="69" locFile="/Timer/timer.c" locStartln="69" sev="3" auth="syoung" locRef="3" rule="MISRA2004-10_1_a" lnHash="1021803899" rule.header="Avoid implicit conversions between signed and unsigned integer types" tool="c++test" lineHash="1021803899" unbViolId="8fe0a8ba-6180-3721-8544-46f81e1d72c9" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="6d0303b9-1567-3cee-a8b1-44640a6a09ec" locEndPos="5" locType="sr" hash="-275311578" locEndLn="69" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="69" locFile="/Timer/timer.c" locStartln="69" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="1021803899" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="1021803899" unbViolId="ef2b01b4-d581-3672-b287-da468f33e134" locStartPos="26" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="88e28196-80a0-3336-9541-b8b9b8280ef2" locEndPos="27" locType="sr" hash="-275311578" locEndLn="69" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="69" locFile="/Timer/timer.c" locStartln="69" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_b" lnHash="1021803899" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="1021803899" unbViolId="cabc40e6-36cb-396e-899e-87c62676d0d4" locStartPos="26" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="9da95783-4976-301e-8bf1-f0d7de452a57" locEndPos="27" locType="sr" hash="-275311578" locEndLn="69" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="74" locFile="/Timer/timer.c" locStartln="74" sev="3" auth="syoung" locRef="3" rule="MISRA2004-6_3_b" lnHash="-231664969" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="-231664969" unbViolId="666440c0-dbaf-3aae-8cb6-5b3cb7efd918" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="181309aa-0278-3e73-84df-8610c5afa30f" locEndPos="1" locType="sr" hash="-275311578" locEndLn="74" goals="0,"/>
    <StdViol msg="Prototype of function 'add_timer' does not precede function definition" ln="74" locFile="/Timer/timer.c" locStartln="74" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="-231664969" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-231664969" unbViolId="8463a7bb-92d0-37ab-abba-fb5dee3fb566" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="e52a31f1-68fe-32e4-8020-d494cd2658fb" locEndPos="5" locType="sr" hash="-275311578" locEndLn="74" goals="0,"/>
    <StdViol msg="Declare function 'add_timer' with parameter type void" ln="74" locFile="/Timer/timer.c" locStartln="74" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_5" lnHash="-231664969" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="-231664969" unbViolId="bc816689-318d-351c-9800-2498b66912d4" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="604e1602-121b-3d43-a66a-723fb6bf0180" locEndPos="5" locType="sr" hash="-275311578" locEndLn="74" goals="0,"/>
    <StdViol msg="Prototype of function 'query_user' does not precede function call" ln="78" locFile="/Timer/timer.c" locStartln="78" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="-174357818" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-174357818" unbViolId="e710f04a-e14a-3e24-b4e2-0f47c6bc17b2" locStartPos="13" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="9f9d410e-f780-35d5-aeee-574f1c218395" locEndPos="14" locType="sr" hash="-275311578" locEndLn="78" goals="0,"/>
    <StdViol msg="Prototype of function 'query_user' does not precede function call" ln="78" locFile="/Timer/timer.c" locStartln="78" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_b" lnHash="-174357818" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="-174357818" unbViolId="bfe59ba4-cf98-3443-845b-70eb151574b7" locStartPos="13" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="7c408b49-4a48-37a2-ac16-9f48bfda3857" locEndPos="14" locType="sr" hash="-275311578" locEndLn="78" goals="0,"/>
    <StdViol msg="Test of a value against zero should be made explicit" ln="80" locFile="/Timer/timer.c" locStartln="80" sev="3" auth="syoung" locRef="3" rule="MISRA2004-13_2" lnHash="-1502932978" rule.header="Tests of a value against zero should be made explicit, unless the operand is effectively Boolean" tool="c++test" lineHash="-1502932978" unbViolId="f7feeea7-c8f9-31f5-8579-7f932ec1eb5a" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="868bac34-d5c7-3953-96dd-83ef3f7625d5" locEndPos="5" locType="sr" hash="-275311578" locEndLn="80" goals="0,"/>
    <StdViol msg="Provide only one exit point in 'add_timer' function" ln="83" locFile="/Timer/timer.c" locStartln="83" sev="3" auth="syoung" locRef="3" rule="MISRA2004-14_7" lnHash="-992348185" rule.header="A function shall have a single point of exit at the end of the function" tool="c++test" lineHash="-992348185" unbViolId="e589c654-a745-330d-b81e-601daa3f0fb0" locStartPos="8" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="15a78acf-fd6f-3395-9c9d-d797e90be973" locEndPos="9" locType="sr" hash="-275311578" locEndLn="83" goals="0,"/>
    <StdViol msg="Provide only one exit point in 'add_timer' function" ln="85" locFile="/Timer/timer.c" locStartln="85" sev="3" auth="syoung" locRef="3" rule="MISRA2004-14_7" lnHash="-1256396037" rule.header="A function shall have a single point of exit at the end of the function" tool="c++test" lineHash="-1256396037" unbViolId="0497eb9d-01ab-3084-bd17-521ea887dd61" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="a493157e-60d2-313e-9c3e-c2264e95d852" locEndPos="5" locType="sr" hash="-275311578" locEndLn="85" goals="0,"/>
    <StdViol msg="Do not use the '++' operator with other operators in the expression" ln="98" locFile="/Timer/timer.c" locStartln="98" sev="3" auth="syoung" locRef="3" rule="MISRA2004-12_13" lnHash="-1933903777" rule.header="The increment (++) and decrement (--) operators should not be mixed with other operators in an expression" tool="c++test" lineHash="-1933903777" unbViolId="a5f52725-9ea4-3629-afc4-fc810dd040a1" locStartPos="22" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="15b0771e-4a09-3f88-98ff-f61d78a63b4b" locEndPos="23" locType="sr" hash="-275311578" locEndLn="98" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="100" locFile="/Timer/timer.c" locStartln="100" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="-1597326853" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1597326853" unbViolId="8badea97-4902-3934-8dd6-6370def241b2" locStartPos="8" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="fbbf7ece-c26a-3135-a10f-93fb3a32f3b5" locEndPos="9" locType="sr" hash="-275311578" locEndLn="100" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="108" locFile="/Timer/timer.c" locStartln="108" sev="3" auth="syoung" locRef="3" rule="MISRA2004-6_3_b" lnHash="997006354" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="997006354" unbViolId="b78c33a9-d768-3c52-a295-0cce9f9375b8" locStartPos="25" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="2b2665fa-a6b1-3149-879c-6a75430eeba0" locEndPos="26" locType="sr" hash="-275311578" locEndLn="108" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="111" locFile="/Timer/timer.c" locStartln="111" sev="3" auth="syoung" locRef="3" rule="MISRA2004-6_3_b" lnHash="1679375043" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1679375043" unbViolId="4305e96e-2b39-3182-aa7c-7c837d63de38" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="524a6a5b-b48a-3e2a-8216-6ba6595bbc1a" locEndPos="5" locType="sr" hash="-275311578" locEndLn="111" goals="0,"/>
    <StdViol msg="'free' function should not be used" ln="123" locFile="/Timer/timer.c" locStartln="123" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_4" lnHash="-813884052" rule.header="Dynamic heap memory allocation shall not be used" tool="c++test" lineHash="-813884052" unbViolId="bf21af38-51d8-3832-a5d7-21a22c34edcf" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="0bc68d2b-b750-3346-83c3-a0e3aaa96862" locEndPos="5" locType="sr" hash="-275311578" locEndLn="123" goals="0,"/>
    <StdViol msg="Values &quot;tr&quot; passed to library function &quot;free&quot; without being checked" ln="123" locFile="/Timer/timer.c" locStartln="123" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_3" lnHash="-813884052" rule.header="The validity of values passed to library functions shall be checked" tool="c++test" lineHash="-813884052" unbViolId="16b5f204-03b4-3b30-ba34-666b7eb619a2" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="e0ae9593-e371-3b93-a148-9229b4afc25a" locEndPos="5" locType="sr" hash="-275311578" locEndLn="123" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="126" locFile="/Timer/timer.c" locStartln="126" sev="3" auth="syoung" locRef="3" rule="MISRA2004-6_3_b" lnHash="1296456001" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1296456001" unbViolId="10289aea-4ee4-3549-a670-e87091582eb2" locStartPos="25" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="3094f596-7602-39ec-81e3-7499d064d6b1" locEndPos="26" locType="sr" hash="-275311578" locEndLn="126" goals="0,"/>
    <StdViol msg="Usage of 'strftime' function is not allowed" ln="133" locFile="/Timer/timer.c" locStartln="133" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_b" lnHash="-23883783" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="-23883783" unbViolId="9b1ce384-5132-3402-998f-01880872829e" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="d3499fb3-81e9-3cb6-a068-6c5127dcb36a" locEndPos="5" locType="sr" hash="-275311578" locEndLn="133" goals="0,"/>
    <StdViol msg="Unused function's &quot;strftime&quot; return value" ln="133" locFile="/Timer/timer.c" locStartln="133" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="-23883783" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-23883783" unbViolId="769090d2-3f0d-370b-8fe9-efdb1e51693b" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="bd2231c0-0231-3a0f-a4fd-3ce53001ad13" locEndPos="5" locType="sr" hash="-275311578" locEndLn="133" goals="0,"/>
    <StdViol msg="Result of &quot;localtime&quot; passed to library function &quot;strftime&quot; without being checked" ln="133" locFile="/Timer/timer.c" locStartln="133" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_3" lnHash="-23883783" rule.header="The validity of values passed to library functions shall be checked" tool="c++test" lineHash="-23883783" unbViolId="9180a2a3-ffc5-33af-bda3-a19917964ee4" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5837a817-a8a4-31d7-b80e-544d5093c4f0" locEndPos="5" locType="sr" hash="-275311578" locEndLn="133" goals="0,"/>
    <StdViol msg="Values &quot;start&quot; passed to library function &quot;strftime&quot; without being checked" ln="133" locFile="/Timer/timer.c" locStartln="133" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_3" lnHash="-23883783" rule.header="The validity of values passed to library functions shall be checked" tool="c++test" lineHash="-23883783" unbViolId="8911e8f1-da1d-3d51-9e3f-5ef06f82e41e" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="af5ec81e-f330-325e-92dd-041a22e21486" locEndPos="5" locType="sr" hash="-275311578" locEndLn="133" goals="0,"/>
    <StdViol msg="Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used" ln="133" locFile="/Timer/timer.c" locStartln="133" sev="3" auth="syoung" locRef="3" rule="MISRA2004-10_1_a" lnHash="-23883783" rule.header="Avoid implicit conversions between signed and unsigned integer types" tool="c++test" lineHash="-23883783" unbViolId="3c4dc244-7cf0-3576-aca1-e09517089cf3" locStartPos="20" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="73763ba0-65d3-30ed-871a-058d758bb17b" locEndPos="21" locType="sr" hash="-275311578" locEndLn="133" goals="0,"/>
    <StdViol msg="Usage of 'localtime' function is not allowed" ln="133" locFile="/Timer/timer.c" locStartln="133" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_b" lnHash="-23883783" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="-23883783" unbViolId="b06c1029-3853-3d83-bc6a-4555888e5180" locStartPos="37" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="1c26fe28-3137-3253-8ceb-c708ddfbe770" locEndPos="38" locType="sr" hash="-275311578" locEndLn="133" goals="0,"/>
    <StdViol msg="Usage of 'strftime' function is not allowed" ln="134" locFile="/Timer/timer.c" locStartln="134" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_b" lnHash="-1644342585" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="-1644342585" unbViolId="b2af06f0-9d6c-3e1f-bbe6-f3c69d631940" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="c89a5d0e-4f9c-3320-bc46-6cd34959002d" locEndPos="5" locType="sr" hash="-275311578" locEndLn="134" goals="0,"/>
    <StdViol msg="Unused function's &quot;strftime&quot; return value" ln="134" locFile="/Timer/timer.c" locStartln="134" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="-1644342585" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1644342585" unbViolId="17c58672-59ae-3b05-96a1-8b4c214b7833" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="7929b528-b346-3fc4-8d0f-0917fe2c8e0a" locEndPos="5" locType="sr" hash="-275311578" locEndLn="134" goals="0,"/>
    <StdViol msg="Result of &quot;localtime&quot; passed to library function &quot;strftime&quot; without being checked" ln="134" locFile="/Timer/timer.c" locStartln="134" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_3" lnHash="-1644342585" rule.header="The validity of values passed to library functions shall be checked" tool="c++test" lineHash="-1644342585" unbViolId="3488ec5c-d2d0-38de-80fa-cc7eeb5c5e6d" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="57cb6a12-adbb-31db-b2ea-ac386128a6eb" locEndPos="5" locType="sr" hash="-275311578" locEndLn="134" goals="0,"/>
    <StdViol msg="Values &quot;end&quot; passed to library function &quot;strftime&quot; without being checked" ln="134" locFile="/Timer/timer.c" locStartln="134" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_3" lnHash="-1644342585" rule.header="The validity of values passed to library functions shall be checked" tool="c++test" lineHash="-1644342585" unbViolId="854844b1-3ad1-3b39-89aa-4d90f31806a4" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="31002552-6d94-37b4-8903-62cec2658598" locEndPos="5" locType="sr" hash="-275311578" locEndLn="134" goals="0,"/>
    <StdViol msg="Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used" ln="134" locFile="/Timer/timer.c" locStartln="134" sev="3" auth="syoung" locRef="3" rule="MISRA2004-10_1_a" lnHash="-1644342585" rule.header="Avoid implicit conversions between signed and unsigned integer types" tool="c++test" lineHash="-1644342585" unbViolId="d6e6df59-276f-3bc7-bbad-261c9b726b9d" locStartPos="18" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="180d4bdd-8069-3c08-a33e-d2019a3b1f2f" locEndPos="19" locType="sr" hash="-275311578" locEndLn="134" goals="0,"/>
    <StdViol msg="Usage of 'localtime' function is not allowed" ln="134" locFile="/Timer/timer.c" locStartln="134" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_b" lnHash="-1644342585" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="-1644342585" unbViolId="feb5ba83-4ae7-34f2-be80-90a97d81e1eb" locStartPos="35" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="a964a265-b3b1-3cd5-a595-ac44b473560d" locEndPos="36" locType="sr" hash="-275311578" locEndLn="134" goals="0,"/>
    <StdViol msg="Test of a value against zero should be made explicit" ln="136" locFile="/Timer/timer.c" locStartln="136" sev="3" auth="syoung" locRef="3" rule="MISRA2004-13_2" lnHash="130267201" rule.header="Tests of a value against zero should be made explicit, unless the operand is effectively Boolean" tool="c++test" lineHash="130267201" unbViolId="edbd95fe-5b4d-38ff-aa5a-0bcb71d59153" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="cfcc9ca1-801f-3424-a1a8-53c2f70bdcbb" locEndPos="5" locType="sr" hash="-275311578" locEndLn="136" goals="0,"/>
    <StdViol msg="Unused function's &quot;sprintf&quot; return value" ln="137" locFile="/Timer/timer.c" locStartln="137" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="201551585" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="201551585" unbViolId="22dd5efd-666c-3c3a-b5eb-ae12b66c8e09" locStartPos="8" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="7d2a4ca0-f0b6-3210-9f16-2b78f64b3b48" locEndPos="9" locType="sr" hash="-275311578" locEndLn="137" goals="0,"/>
    <StdViol msg="Prototype of function 'list_timers' does not precede function definition" ln="142" locFile="/Timer/timer.c" locStartln="142" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="1408249924" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="1408249924" unbViolId="cfd1c8fa-aa6a-3ed1-bfdb-e062ba41a0e8" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="7e8ccd1f-49d7-3d0a-ab6c-db6cf5fad53b" locEndPos="6" locType="sr" hash="-275311578" locEndLn="142" goals="0,"/>
    <StdViol msg="Declare function 'list_timers' with parameter type void" ln="142" locFile="/Timer/timer.c" locStartln="142" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_5" lnHash="1408249924" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="1408249924" unbViolId="61b76ca7-6655-32bd-b1aa-0e18c8a25304" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="7a6a1209-cf49-3159-b0bb-a720a40abd5b" locEndPos="6" locType="sr" hash="-275311578" locEndLn="142" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="145" locFile="/Timer/timer.c" locStartln="145" sev="3" auth="syoung" locRef="3" rule="MISRA2004-6_3_b" lnHash="1679375043" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1679375043" unbViolId="37a6554f-0ac3-3737-b2e3-71808a6a2fc7" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="acd7990e-9537-3074-8f05-ccf64770757a" locEndPos="5" locType="sr" hash="-275311578" locEndLn="145" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="146" locFile="/Timer/timer.c" locStartln="146" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="1628413856" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="1628413856" unbViolId="6b339d0f-39e6-38a7-a111-7c26f36712e7" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="d60b33ce-4d1b-34c6-a8ee-2737464704f0" locEndPos="5" locType="sr" hash="-275311578" locEndLn="146" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="147" locFile="/Timer/timer.c" locStartln="147" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="1760988551" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="1760988551" unbViolId="02e9ce64-0b88-3a94-8723-f6345ca84e31" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="44ed967d-8d17-37ff-84b9-07dccd0e2a86" locEndPos="5" locType="sr" hash="-275311578" locEndLn="147" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="151" locFile="/Timer/timer.c" locStartln="151" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="924656480" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="924656480" unbViolId="ae37d362-37d8-31a4-aa3c-1cfbcc94640d" locStartPos="8" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="a61a4a81-8afd-3d7d-be2c-ae66a29e81e0" locEndPos="9" locType="sr" hash="-275311578" locEndLn="151" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="153" locFile="/Timer/timer.c" locStartln="153" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="-332149005" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-332149005" unbViolId="2d45438b-7a51-396c-889f-9b5cc4a6c6a0" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="a06915d9-9023-3ee1-a774-477355e16567" locEndPos="5" locType="sr" hash="-275311578" locEndLn="153" goals="0,"/>
    <StdViol msg="&lt;stdio.h> library shall not be used" ln="10" locFile="/Timer/stdinout.c" locStartln="10" sev="3" auth="syoung" locRef="4" rule="MISRA2004-20_9" lnHash="1233725276" rule.header="The input/output library stdio.h shall not be used" tool="c++test" lineHash="1233725276" unbViolId="7e7f3f67-cfe4-335b-bb24-6b2dbdae2fca" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="de145f1b-7ba1-35b2-bad9-46d77374c413" locEndPos="1" locType="sr" hash="844867668" locEndLn="10" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="16" locFile="/Timer/stdinout.c" locStartln="16" sev="3" auth="syoung" locRef="4" rule="MISRA2004-6_3_b" lnHash="2073209951" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="2073209951" unbViolId="680a3103-2b37-32ba-878b-e38dd7f7779c" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="1df65ad3-ba9d-34a5-8ef8-68afc195bed9" locEndPos="1" locType="sr" hash="844867668" locEndLn="16" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function definition" ln="16" locFile="/Timer/stdinout.c" locStartln="16" sev="3" auth="syoung" locRef="4" rule="MISRA2004-8_1_a" lnHash="2073209951" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="2073209951" unbViolId="2f561f4b-f062-3af0-b063-04135646cdea" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="2e63c9db-f7bd-3d68-99ce-cb3d5397868d" locEndPos="5" locType="sr" hash="844867668" locEndLn="16" goals="0,"/>
    <StdViol msg="Declare function 'get_input_digit' with parameter type void" ln="16" locFile="/Timer/stdinout.c" locStartln="16" sev="3" auth="syoung" locRef="4" rule="MISRA2004-16_5" lnHash="2073209951" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="2073209951" unbViolId="9aa91b85-dae2-31cc-9caf-7850c0cf093c" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="22a117a9-6c36-3522-b4e3-6acd2ec484ce" locEndPos="5" locType="sr" hash="844867668" locEndLn="16" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="19" locFile="/Timer/stdinout.c" locStartln="19" sev="3" auth="syoung" locRef="4" rule="MISRA2004-6_3_b" lnHash="1679375043" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1679375043" unbViolId="4ba98d25-4c0b-3cca-ba12-0315e5fa2800" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="f074ba83-9618-3557-9591-dbe5c8adc1c5" locEndPos="5" locType="sr" hash="844867668" locEndLn="19" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="35" locFile="/Timer/stdinout.c" locStartln="35" sev="3" auth="syoung" locRef="4" rule="MISRA2004-6_3_b" lnHash="-1448247265" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="-1448247265" unbViolId="df60dbfb-1ae4-3030-bfa0-2a3408008802" locStartPos="11" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="0e1bbdea-c5ea-3d7a-8796-cb025c90b583" locEndPos="12" locType="sr" hash="844867668" locEndLn="35" goals="0,"/>
    <StdViol msg="Do not use the 'atoi' function" ln="46" locFile="/Timer/stdinout.c" locStartln="46" sev="3" auth="syoung" locRef="4" rule="MISRA2004-20_10" lnHash="1849933771" rule.header="The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used" tool="c++test" lineHash="1849933771" unbViolId="54d6a986-54d8-323b-8b64-79f7da16f33a" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="a229006a-9ed3-3df3-9f77-2a5f5b3ec12d" locEndPos="13" locType="sr" hash="844867668" locEndLn="46" goals="0,"/>
    <StdViol msg="Values &quot;buf&quot; passed to library function &quot;atoi&quot; without being checked" ln="46" locFile="/Timer/stdinout.c" locStartln="46" sev="3" auth="syoung" locRef="4" rule="MISRA2004-20_3" lnHash="1849933771" rule.header="The validity of values passed to library functions shall be checked" tool="c++test" lineHash="1849933771" unbViolId="fbe5cc00-67b2-3c51-8e7b-e2ed61275bf5" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="549833e3-f3d2-3566-885f-f954089901d9" locEndPos="13" locType="sr" hash="844867668" locEndLn="46" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="52" locFile="/Timer/stdinout.c" locStartln="52" sev="3" auth="syoung" locRef="4" rule="MISRA2004-6_3_b" lnHash="-1042560936" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="-1042560936" unbViolId="3707d4f0-a43c-3c25-9bf6-55b54fb2c7a1" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="3fc8c4c9-bf12-3f33-8e0c-37df6ce30f19" locEndPos="1" locType="sr" hash="844867668" locEndLn="52" goals="0,"/>
    <StdViol msg="Pass parameter &quot;str&quot; with const specifier" ln="52" locFile="/Timer/stdinout.c" locStartln="52" sev="3" auth="syoung" locRef="4" rule="MISRA2004-16_7" lnHash="-1042560936" rule.header="A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object" tool="c++test" lineHash="-1042560936" unbViolId="2047f318-bd09-362b-aca9-8a21c4510b31" locStartPos="23" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="d4903cf2-6044-3f1f-a673-18b07707eb7f" locEndPos="24" locType="sr" hash="844867668" locEndLn="52" goals="0,"/>
    <StdViol msg="Do not use reserved identifiers : _clock_h_" ln="3" locFile="/Timer/clock.h" locStartln="3" sev="3" auth="syoung" locRef="5" rule="MISRA2004-20_1_a" lnHash="1162366501" rule.header="Do not #define or #undef identifiers with names which start with underscore" tool="c++test" lineHash="1162366501" unbViolId="b365e544-5e6a-3353-8256-5efe258d98c3" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="19f2d910-77f3-36c9-82cf-63045e001f4d" locEndPos="1" locType="sr" urgent="true" hash="-1204881763" locEndLn="3" goals="1,"/>
    <StdViol msg="Do not include the &lt;time.h> header file" ln="5" locFile="/Timer/clock.h" locStartln="5" sev="3" auth="syoung" locRef="5" rule="MISRA2004-20_12" lnHash="-1042055562" rule.header="The standard header files &lt;time.h> or &lt;ctime> shall not be used" tool="c++test" lineHash="-1042055562" unbViolId="661af1dc-3a50-38a2-ade5-82e9d7b5c0c7" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="3ad83733-648d-39ee-95f0-abb3dd346ae8" locEndPos="1" locType="sr" urgent="true" hash="-1204881763" locEndLn="5" goals="1,"/>
    <StdViol msg="Declare function 'display_time' with parameter type void" ln="8" locFile="/Timer/clock.h" locStartln="8" sev="3" auth="syoung" locRef="5" rule="MISRA2004-16_5" lnHash="957119588" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="957119588" unbViolId="22ed49f5-0a35-3b57-b0d0-e19415b936e8" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="216ef42c-84eb-302e-b624-55d4150f7f49" locEndPos="6" locType="sr" urgent="true" hash="-1204881763" locEndLn="8" goals="1,"/>
    <StdViol msg="Names shall be given for all the parameters in function 'set_time'" ln="11" locFile="/Timer/clock.h" locStartln="11" sev="3" auth="syoung" locRef="5" rule="MISRA2004-16_3" lnHash="-701432954" rule.header="Identifiers shall be given for all of the parameters in a function prototype declaration" tool="c++test" lineHash="-701432954" unbViolId="24556823-40ad-315a-a538-28a12efa4e1d" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="1d4c10bd-ab8f-3176-9be8-0a22caba0c28" locEndPos="6" locType="sr" urgent="true" hash="-1204881763" locEndLn="11" goals="1,"/>
    <StdViol msg="The 'time_t' identifier should not be used" ln="11" locFile="/Timer/clock.h" locStartln="11" sev="3" auth="syoung" locRef="5" rule="MISRA2004-20_12_c" lnHash="-701432954" rule.header="The types defined in the library &lt;time.h> shall not be used" tool="c++test" lineHash="-701432954" unbViolId="cffb8b22-3754-3146-b9e0-f17cfa5eb91a" locStartPos="14" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="b0a88786-1149-354f-82e7-ae9645b0617e" locEndPos="15" locType="sr" urgent="true" hash="-1204881763" locEndLn="11" goals="1,"/>
    <StdViol msg="Do not use reserved identifiers : _consts_h_" ln="3" locFile="/Timer/consts.h" locStartln="3" sev="3" auth="syoung" locRef="6" rule="MISRA2004-20_1_a" lnHash="-2108418455" rule.header="Do not #define or #undef identifiers with names which start with underscore" tool="c++test" lineHash="-2108418455" unbViolId="128af59f-1ce9-3ed9-ad7e-1c55fb787ace" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="b2312e65-8af5-355b-b966-50b0173f5eaf" locEndPos="1" locType="sr" urgent="true" hash="1651539479" locEndLn="3" goals="1,"/>
    <StdViol msg="Do not use reserved identifiers : _timer_h_" ln="3" locFile="/Timer/timer.h" locStartln="3" sev="3" auth="syoung" locRef="7" rule="MISRA2004-20_1_a" lnHash="-1992342642" rule.header="Do not #define or #undef identifiers with names which start with underscore" tool="c++test" lineHash="-1992342642" unbViolId="fcb06fd1-3dc6-3e8a-a636-48cc329b097c" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="406bbf01-b23d-38e5-a7dd-2866011a0dff" locEndPos="1" locType="sr" hash="-311568100" locEndLn="3" goals="0,"/>
    <StdViol msg="Do not include the &lt;time.h> header file" ln="5" locFile="/Timer/timer.h" locStartln="5" sev="3" auth="syoung" locRef="7" rule="MISRA2004-20_12" lnHash="-1042055562" rule.header="The standard header files &lt;time.h> or &lt;ctime> shall not be used" tool="c++test" lineHash="-1042055562" unbViolId="fb90e712-bad0-3efe-ab00-f53b0bb22741" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="cf5529df-b4fe-337b-bdb7-e368959e5a91" locEndPos="1" locType="sr" hash="-311568100" locEndLn="5" goals="0,"/>
    <StdViol msg="The 'time_t' identifier should not be used" ln="11" locFile="/Timer/timer.h" locStartln="11" sev="3" auth="syoung" locRef="7" rule="MISRA2004-20_12_c" lnHash="2125380426" rule.header="The types defined in the library &lt;time.h> shall not be used" tool="c++test" lineHash="2125380426" unbViolId="58696206-f797-33c9-aaf8-5c0049299bae" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="a1672641-d759-3b3b-b952-b141cf042999" locEndPos="5" locType="sr" hash="-311568100" locEndLn="11" goals="0,"/>
    <StdViol msg="The 'time_t' identifier should not be used" ln="12" locFile="/Timer/timer.h" locStartln="12" sev="3" auth="syoung" locRef="7" rule="MISRA2004-20_12_c" lnHash="1676941809" rule.header="The types defined in the library &lt;time.h> shall not be used" tool="c++test" lineHash="1676941809" unbViolId="59050187-2a38-37f8-be4d-9a95f0752838" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="47c6f6c2-f5f3-3065-9ca6-27e72037b3d1" locEndPos="5" locType="sr" hash="-311568100" locEndLn="12" goals="0,"/>
    <StdViol msg="The basic numerical type 'unsigned' should not be used" ln="13" locFile="/Timer/timer.h" locStartln="13" sev="3" auth="syoung" locRef="7" rule="MISRA2004-6_3_b" lnHash="-391931805" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="-391931805" unbViolId="66408c71-987b-395f-849b-12a595edd847" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="1aedbff0-d69e-37ad-b2b0-90d001346cb8" locEndPos="5" locType="sr" hash="-311568100" locEndLn="13" goals="0,"/>
    <StdViol msg="Declare function 'init_timer' with parameter type void" ln="17" locFile="/Timer/timer.h" locStartln="17" sev="3" auth="syoung" locRef="7" rule="MISRA2004-16_5" lnHash="-571522376" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="-571522376" unbViolId="3a693386-8b22-3175-b048-59312fbf80d8" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="accd669f-23a1-360e-88cf-1446ee35679b" locEndPos="6" locType="sr" hash="-311568100" locEndLn="17" goals="0,"/>
    <StdViol msg="Declare function 'uninit_timer' with parameter type void" ln="18" locFile="/Timer/timer.h" locStartln="18" sev="3" auth="syoung" locRef="7" rule="MISRA2004-16_5" lnHash="-750737473" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="-750737473" unbViolId="014aeb21-d810-3f22-88b4-12e0957282e5" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="9795074a-4b27-3990-98e1-ffc3d3bbff2c" locEndPos="6" locType="sr" hash="-311568100" locEndLn="18" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="21" locFile="/Timer/timer.h" locStartln="21" sev="3" auth="syoung" locRef="7" rule="MISRA2004-6_3_b" lnHash="1408320612" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1408320612" unbViolId="bce71ff3-5ef4-31f4-b7e2-5617fcc95ac4" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="45bb0a20-a3e9-3f91-b31c-9b26061a0ab1" locEndPos="1" locType="sr" hash="-311568100" locEndLn="21" goals="0,"/>
    <StdViol msg="Declare function 'add_timer' with parameter type void" ln="21" locFile="/Timer/timer.h" locStartln="21" sev="3" auth="syoung" locRef="7" rule="MISRA2004-16_5" lnHash="1408320612" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="1408320612" unbViolId="c31506ca-d695-3dcc-b4d6-6010cfe0a2e1" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="d4aeeda5-2847-32cf-9f31-636dbf273349" locEndPos="5" locType="sr" hash="-311568100" locEndLn="21" goals="0,"/>
    <StdViol msg="Names shall be given for all the parameters in function 'add_timer_record'" ln="24" locFile="/Timer/timer.h" locStartln="24" sev="3" auth="syoung" locRef="7" rule="MISRA2004-16_3" lnHash="431182393" rule.header="Identifiers shall be given for all of the parameters in a function prototype declaration" tool="c++test" lineHash="431182393" unbViolId="1e84e769-60d1-347d-88c9-860acc1599bd" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="99991ae0-973a-3fc4-854f-60b8b33d76d5" locEndPos="6" locType="sr" hash="-311568100" locEndLn="24" goals="0,"/>
    <StdViol msg="Names shall be given for all the parameters in function 'delete_timer_record'" ln="27" locFile="/Timer/timer.h" locStartln="27" sev="3" auth="syoung" locRef="7" rule="MISRA2004-16_3" lnHash="1493922828" rule.header="Identifiers shall be given for all of the parameters in a function prototype declaration" tool="c++test" lineHash="1493922828" unbViolId="292b70d4-6830-3b42-8323-aeeab493889d" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="deb22a9d-3c8a-3539-a203-a1bb7261eb61" locEndPos="6" locType="sr" hash="-311568100" locEndLn="27" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="27" locFile="/Timer/timer.h" locStartln="27" sev="3" auth="syoung" locRef="7" rule="MISRA2004-6_3_b" lnHash="1493922828" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1493922828" unbViolId="52c361a3-7d25-3524-83e5-0662a2d8da73" locStartPos="25" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="d280b3f6-1d0b-38d9-b7f8-8c7cbda568bc" locEndPos="26" locType="sr" hash="-311568100" locEndLn="27" goals="0,"/>
    <StdViol msg="Names shall be given for all the parameters in function 'format_timer_record'" ln="30" locFile="/Timer/timer.h" locStartln="30" sev="3" auth="syoung" locRef="7" rule="MISRA2004-16_3" lnHash="-70128892" rule.header="Identifiers shall be given for all of the parameters in a function prototype declaration" tool="c++test" lineHash="-70128892" unbViolId="051e5443-b1e7-39b2-a57e-90835e4f81ae" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="43010632-7220-30ee-a7dd-8f706db01525" locEndPos="6" locType="sr" hash="-311568100" locEndLn="30" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="30" locFile="/Timer/timer.h" locStartln="30" sev="3" auth="syoung" locRef="7" rule="MISRA2004-6_3_b" lnHash="-70128892" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="-70128892" unbViolId="96c53d12-6cfd-3b41-8ded-0164dc7a32dd" locStartPos="25" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="101d0c5a-6010-3952-8503-f13b6fbc572d" locEndPos="26" locType="sr" hash="-311568100" locEndLn="30" goals="0,"/>
    <StdViol msg="Declare function 'list_timers' with parameter type void" ln="33" locFile="/Timer/timer.h" locStartln="33" sev="3" auth="syoung" locRef="7" rule="MISRA2004-16_5" lnHash="706074743" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="706074743" unbViolId="9367ede2-367a-383c-acc3-140093528d6c" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="d35c6a70-721c-34f4-900d-f34ce4d3b40a" locEndPos="6" locType="sr" hash="-311568100" locEndLn="33" goals="0,"/>
    <StdViol msg="Do not use reserved identifiers : _input_h_" ln="3" locFile="/Timer/inout.h" locStartln="3" sev="3" auth="syoung" locRef="8" rule="MISRA2004-20_1_a" lnHash="554854633" rule.header="Do not #define or #undef identifiers with names which start with underscore" tool="c++test" lineHash="554854633" unbViolId="7cfbf178-cf7e-3bd2-b497-860e36bdde16" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="6025ebec-a4b7-38c5-a941-dab3d6c12bad" locEndPos="1" locType="sr" urgent="true" hash="-311681184" locEndLn="3" goals="1,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="6" locFile="/Timer/inout.h" locStartln="6" sev="3" auth="syoung" locRef="8" rule="MISRA2004-6_3_b" lnHash="-155000900" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="-155000900" unbViolId="d1c44859-bbf6-37ff-9498-51604eaf1adb" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="95ec4ad7-2eab-3bd7-a312-ce96a7f9ed48" locEndPos="1" locType="sr" urgent="true" hash="-311681184" locEndLn="6" goals="1,"/>
    <StdViol msg="Declare function 'get_input_digit' with parameter type void" ln="6" locFile="/Timer/inout.h" locStartln="6" sev="3" auth="syoung" locRef="8" rule="MISRA2004-16_5" lnHash="-155000900" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="-155000900" unbViolId="a33ede76-9176-3b86-a53f-ae4294117538" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="0092a56a-9265-3966-af53-ec06a73dd463" locEndPos="5" locType="sr" urgent="true" hash="-311681184" locEndLn="6" goals="1,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="9" locFile="/Timer/inout.h" locStartln="9" sev="3" auth="syoung" locRef="8" rule="MISRA2004-6_3_b" lnHash="-1729353454" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="-1729353454" unbViolId="5307edd3-e3bc-3803-a9d8-3b1e04b812e1" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="6bded286-2ade-3e36-ad2a-d4ed246fcb49" locEndPos="1" locType="sr" urgent="true" hash="-311681184" locEndLn="9" goals="1,"/>
    <StdViol msg="Names shall be given for all the parameters in function 'print_string'" ln="9" locFile="/Timer/inout.h" locStartln="9" sev="3" auth="syoung" locRef="8" rule="MISRA2004-16_3" lnHash="-1729353454" rule.header="Identifiers shall be given for all of the parameters in a function prototype declaration" tool="c++test" lineHash="-1729353454" unbViolId="90f9dc6d-16de-3ce7-821e-cc2c76c43841" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="f85190a8-5465-349d-a75d-1750922f0457" locEndPos="5" locType="sr" urgent="true" hash="-311681184" locEndLn="9" goals="1,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="12" locFile="/Timer/inout.h" locStartln="12" sev="3" auth="syoung" locRef="8" rule="MISRA2004-6_3_b" lnHash="-1128300596" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="-1128300596" unbViolId="8e0a6f67-112a-3725-a913-12e41dc93c4d" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="96e024ce-16eb-3f5b-9e84-420ad79b8d2a" locEndPos="1" locType="sr" urgent="true" hash="-311681184" locEndLn="12" goals="1,"/>
    <StdViol msg="Declare function 'print_string_array' with parameter type void" ln="12" locFile="/Timer/inout.h" locStartln="12" sev="3" auth="syoung" locRef="8" rule="MISRA2004-16_5" lnHash="-1128300596" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="-1128300596" unbViolId="59b50723-d0ce-38eb-869c-c84502957807" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="bffed92b-2c4d-3a01-b7bc-1112ba5fc4a8" locEndPos="5" locType="sr" urgent="true" hash="-311681184" locEndLn="12" goals="1,"/>
  </StdViols>

      <TestedFilesDetails>
         <Total name="Total (Suppressed)" supp="0" total="169">
            <Project id="Timer" name="Timer" supp="0" total="169">
               <Res loc="/Timer/clock.c" locRef="1" locType="sr" name="clock.c" supp="0" total="9"/>
               <Res loc="/Timer/driver.c" locRef="2" locType="sr" name="driver.c" supp="0" total="47"/>
               <Res loc="/Timer/timer.c" locRef="3" locType="sr" name="timer.c" supp="0" total="75"/>
               <Res loc="/Timer/stdinout.c" locRef="4" locType="sr" name="stdinout.c" supp="0" total="10"/>
               <Res loc="/Timer/clock.h" locRef="5" locType="sr" name="clock.h" supp="0" total="5"/>
               <Res loc="/Timer/consts.h" locRef="6" locType="sr" name="consts.h" supp="0" total="1"/>
               <Res loc="/Timer/timer.h" locRef="7" locType="sr" name="timer.h" supp="0" total="15"/>
               <Res loc="/Timer/inout.h" locRef="8" locType="sr" name="inout.h" supp="0" total="7"/>
            </Project>
         </Total>
      </TestedFilesDetails>
   </CodingStandards>
   <Statistics>
      
   </Statistics>
</ResultsSession>