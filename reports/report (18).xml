<?xml version='1.0' encoding='UTF-8'?><ResultsSession buildId="2025-03-31" climode="true" endTime="2025-03-31T14:58:15-04:00" execEnv="linux_x86_64" hasViols="true" id="1742214319415" lang="en" machine="syoung-pc" prjModule="VSCodeIntegrate" project="" tag="${scontrol_branch}-linux_x86_64" time="2025-03-31T14:58:09-04:00" toolDispName="C/C++test" toolId="c++test" toolName="DTP Engine for C/C++" toolVer="2024.2.0" user="syoung">
   <TestConfig machine="syoung-pc" name="MISRA C 2004" pseudoUrl="builtin://MISRA C 2004" user="syoung"/>
   <Authors>
      <Author id="dev1" name="syoung"/>
   </Authors>
   <Analyzers>
      <Analyzer id="com.parasoft.xtest.scope.analyzer" name="Scope Analyzer" ver="10.7.1.20241108"/>
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.code" name="Parasoft C/C++ Code Analyzer" ver="10.7.1.20241114B2528"/>
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.pattern" name="Parasoft C/C++ Static Analyzer" ver="10.7.1.20241114B2528"/>
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.flow" name="Parasoft C/C++ Flow Analyzer" ver="10.7.1.20241023B5124"/>
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.global" name="Parasoft C/C++ Global Static Analyzer" ver="10.7.1.20241114B2528"/>
   </Analyzers>
   <VersionInfos>
      <StorageInfo ownerId="" resultId="ISetupResult" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricsViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IExecutionViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IDupCodeViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IFlowAnalysisViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IFunctionalViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IChangeImpactViolation" ver="1" ver10x="1"/>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="ICodingStandardsViolation" ver="2" ver10x="1"/>
      <StorageInfo ownerId="" resultId="IUnitTestViolation" ver="1" ver10x="1"/>
   </VersionInfos>
   <Goals tsks="50">
      
      <History>
         <Graph id="gls">
            <Categories>
               <Category color="red" name="Total" pos="0"/>
            </Categories>
            <Total secSer="1" title="" xTitle="Date" yTitle="Tasks" yTitle2="Total Tasks">
               <X>03-20-25,03-24-25,03-31-25,</X>
               <Y>50,50,50,</Y>
               <Delta>0,</Delta>
            </Total>
         </Graph>
      </History>
   
   </Goals>
   <Scope>
      <Repositories/>
      <Locations>
         <Loc auth="syoung" hash="-249486341" locRef="1" projId="VSCodeIntegrate" projPath="/VSCodeIntegrate" project="VSCodeIntegrate" resProjPath="clock.c" totLns="30" uri="file:/mnt/c/Users/syoung/Documents/RepoLinux/VSCodeIntegrate/clock.c"/>
         <Loc auth="syoung" hash="65740504" locRef="2" projId="VSCodeIntegrate" projPath="/VSCodeIntegrate" project="VSCodeIntegrate" resProjPath="driver.c" totLns="76" uri="file:/mnt/c/Users/syoung/Documents/RepoLinux/VSCodeIntegrate/driver.c"/>
         <Loc auth="syoung" hash="-275311578" locRef="3" projId="VSCodeIntegrate" projPath="/VSCodeIntegrate" project="VSCodeIntegrate" resProjPath="timer.c" totLns="155" uri="file:/mnt/c/Users/syoung/Documents/RepoLinux/VSCodeIntegrate/timer.c"/>
         <Loc auth="syoung" hash="844867668" locRef="4" projId="VSCodeIntegrate" projPath="/VSCodeIntegrate" project="VSCodeIntegrate" resProjPath="stdinout.c" totLns="55" uri="file:/mnt/c/Users/syoung/Documents/RepoLinux/VSCodeIntegrate/stdinout.c"/>
         <Loc auth="syoung" hash="1651539479" locRef="5" projId="VSCodeIntegrate" projPath="/VSCodeIntegrate" project="VSCodeIntegrate" resProjPath="consts.h" totLns="9" uri="file:/mnt/c/Users/syoung/Documents/RepoLinux/VSCodeIntegrate/consts.h"/>
         <Loc auth="syoung" hash="-311681184" locRef="6" projId="VSCodeIntegrate" projPath="/VSCodeIntegrate" project="VSCodeIntegrate" resProjPath="inout.h" totLns="15" uri="file:/mnt/c/Users/syoung/Documents/RepoLinux/VSCodeIntegrate/inout.h"/>
         <Loc auth="syoung" hash="-1204881763" locRef="7" projId="VSCodeIntegrate" projPath="/VSCodeIntegrate" project="VSCodeIntegrate" resProjPath="clock.h" totLns="14" uri="file:/mnt/c/Users/syoung/Documents/RepoLinux/VSCodeIntegrate/clock.h"/>
         <Loc auth="syoung" hash="-311568100" locRef="8" projId="VSCodeIntegrate" projPath="/VSCodeIntegrate" project="VSCodeIntegrate" resProjPath="timer.h" totLns="36" uri="file:/mnt/c/Users/syoung/Documents/RepoLinux/VSCodeIntegrate/timer.h"/>
      </Locations>
   </Scope>
   
  <SetupProblems/>

   <CodingStandards ownerId="com.parasoft.xtest.checkers.api.standards" time="0:00:01">
      <Projects>
         <Project bdCheckedFiles="0" bdTotalFiles="0" checkedFiles="8" checkedLns="390" id="VSCodeIntegrate" name="VSCodeIntegrate" qfixErrs="0" suppErrs="0" totErrs="167" totFiles="8" totLns="390"/>
      </Projects>
      
      <History>
         <Graph id="lns">
            <Categories>
               <Category color="blue" name="Total Lines" pos="0"/>
               <Category color="green" name="Checked Lines" pos="1"/>
               <Category authPos="0" color="red" name="Tasks" pos="2"/>
            </Categories>
            <Total secSer="1" title="" xTitle="Date" yTitle="Lines" yTitle2="Tasks">
               <X>03-20-25,03-24-25,03-31-25,</X>
               <Y>390,390,390,390,390,390,167,167,167,</Y>
               <Delta>0,0,0,</Delta>
            </Total>
            <Authors title="" xTitle="Date" yTitle="Total Tasks">
               <Author name="syoung">
                  <X>03-20-25,03-24-25,03-31-25,</X>
                  <Y>167,167,167,</Y>
                  <Delta>0,</Delta>
               </Author>
            </Authors>
         </Graph>
      </History>
   
      
      <Rules>
         <CategoriesList>
            <Category authTot="167;" authUrg="50;" desc="MISRA C 2004" name="MISRA2004" rules="224" total="167"/>
         </CategoriesList>
         <RulesList>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Don't write code that depends on the order of evaluation of function arguments" id="MISRA2004-12_2_b" sev="1" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="4;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions between signed and unsigned integer types" id="MISRA2004-10_1_a" sev="3" total="4"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be no implicit conversions from integral to floating type" id="MISRA2004-10_1_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions of complex expressions" id="MISRA2004-10_1_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions from wider to narrower types" id="MISRA2004-10_1_d" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions of function return expressions" id="MISRA2004-10_1_e" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions of complex expressions" id="MISRA2004-10_1_f" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions of function arguments" id="MISRA2004-10_1_g" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions of complex expressions" id="MISRA2004-10_1_i" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions from floating to integral type" id="MISRA2004-10_2_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions from wider to narrower floating type" id="MISRA2004-10_2_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions from narrower to wider floating type" id="MISRA2004-10_2_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid implicit conversions of floating point numbers from wider to narrower floating type" id="MISRA2004-10_2_d" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The value of a complex expression of integer type shall only be cast to a type  of the same signedness that is no wider than the underlying type of the expression" id="MISRA2004-10_3" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The value of a complex expression of floating type should not be cast to a wider floating type" id="MISRA2004-10_4" origId="CODSTA-198" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The value of a complex expression of floating type should not be cast to an integer type" id="MISRA2004-10_4_b" origId="CODSTA-198_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="If the bitwise operators ~ and &lt;&lt; are applied to an operand of underlying type unsigned char or unsigned short, the result shall be immediately cast to the underlying type of the operand" id="MISRA2004-10_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Conversions shall not be performed between a pointer to a function and any type other than an integral type" id="MISRA2004-11_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Conversions shall not be performed between a pointer to object and any type other than an integral type, another pointer to object type or a pointer to void" id="MISRA2004-11_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Conversions shall not be performed between a pointer to object and any type other than an integral type, another pointer to object type or a pointer to void" id="MISRA2004-11_2_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Conversions shall not be performed between a pointer to object and any type other than an integral type, another pointer to object type or a pointer to void" id="MISRA2004-11_2_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A cast should not convert a pointer type to an integral type" id="MISRA2004-11_3_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A cast should not convert an integral type to a pointer type" id="MISRA2004-11_3_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A cast should not be performed between a pointer to object type and a different pointer to object type" id="MISRA2004-11_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A cast shall not remove any 'const' or 'volatile' qualification from the type of a pointer or reference" id="MISRA2004-11_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The comma operator shall not be used" id="MISRA2004-12_10" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The underlying bit representations of floating-point values shall not be used" id="MISRA2004-12_12" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="1;" authUrg="0;" cat="MISRA2004" desc="The increment (++) and decrement (--) operators should not be mixed with other operators in an expression" id="MISRA2004-12_13" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Use parenthesis for the right-hand operand of an assignment operator when it contains an assignment expression" id="MISRA2004-12_1_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Limited dependence should be placed on C's operator precedence rules in expressions" id="MISRA2004-12_1_d" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Use parentheses unless all operators in the expression are the same" id="MISRA2004-12_1_e" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The value of an expression shall be the same under any order of evaluation that the standard permits" id="MISRA2004-12_2_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Don't write code that depends on the order of evaluation of function designator and function arguments" id="MISRA2004-12_2_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Don't write code that depends on the order of evaluation of expression that involves a function call" id="MISRA2004-12_2_d" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Between sequence points an object shall have its stored value modified at most once by the evaluation of an expression" id="MISRA2004-12_2_e" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Do not use more than one volatile between two adjacent sequence points" id="MISRA2004-12_2_f" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Don't write code that depends on the order of evaluation of function calls" id="MISRA2004-12_2_g" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The operand of the sizeof operator shall not contain any expression which has side effects" id="MISRA2004-12_3" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Object designated by a volatile lvalue should not be accessed in the operand of the sizeof operator" id="MISRA2004-12_3_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The function call that causes the side effect shall not be the operand of the sizeof operator" id="MISRA2004-12_3_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The right-hand operand of a logical &amp;&amp; or || operator shall not contain side effects" id="MISRA2004-12_4_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The operands of a logical &amp;&amp; or || shall be primary-expressions" id="MISRA2004-12_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The operands of logical operators (&amp;&amp;, || and !) should be effectively Boolean" id="MISRA2004-12_6_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Expressions that are effectively Boolean should not be used as operands to operators other than (&amp;&amp;, ||, !, =, ==, !=, ?:)" id="MISRA2004-12_6_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Bitwise operators shall not be applied to operands whose underlying type is signed" id="MISRA2004-12_7" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The right-hand operand of a shift operator shall lie between zero and one less than the width in bits of the underlying type of the left-hand operand" id="MISRA2004-12_8" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The unary minus operator shall not be applied to an expression whose underlying type is unsigned" id="MISRA2004-12_9" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Assignment operators shall not be used in expressions that yield a Boolean value" id="MISRA2004-13_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="2;" authUrg="0;" cat="MISRA2004" desc="Tests of a value against zero should be made explicit, unless the operand is effectively Boolean" id="MISRA2004-13_2" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Floating-point expressions shall not be tested for equality or inequality" id="MISRA2004-13_3" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The controlling expression of a for statement shall not contain any objects of floating type" id="MISRA2004-13_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The three expressions of a for statement shall be concerned only with loop control" id="MISRA2004-13_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Do not modify for loop counter within a body of the loop" id="MISRA2004-13_6" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_aa" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_ab" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_ac" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_ad" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_ae" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_af" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_ag" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_ah" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_ai" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_aj" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_ak" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_d" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_j" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_k" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_l" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_m" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_n" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_s" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_t" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_u" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_v" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_w" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_x" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_y" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Boolean operations whose results are invariant shall not be permitted" id="MISRA2004-13_7_z" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="All 'if...else-if' constructs shall be terminated with an 'else' clause" id="MISRA2004-14_10" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be no unreachable code in &quot;else&quot; block" id="MISRA2004-14_1_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be no unreachable code after 'return', 'break', 'continue', 'goto', 'throw' statements, and after calls to functions with the 'noreturn' attribute" id="MISRA2004-14_1_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be no unreachable code in &quot;if/else/while/for&quot; block" id="MISRA2004-14_1_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be no unreachable code in switch statement" id="MISRA2004-14_1_d" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be no unreachable code in 'for' loop" id="MISRA2004-14_1_e" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be no unreachable code after 'if' or 'switch' statement" id="MISRA2004-14_1_f" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be no unreachable code after &quot;if&quot; or &quot;switch&quot; statement inside while/for/do...while loop" id="MISRA2004-14_1_g" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="All non-null statements shall either have at least one side-effect however executed or cause control flow to change" id="MISRA2004-14_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A null statement shall occur on a line by itself or be followed by a comment" id="MISRA2004-14_3" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The goto statement shall not be used" id="MISRA2004-14_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The continue statement shall not be used" id="MISRA2004-14_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="For any iteration statement there shall be at most one break statement used for loop termination" id="MISRA2004-14_6" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="3;" authUrg="0;" cat="MISRA2004" desc="A function shall have a single point of exit at the end of the function" id="MISRA2004-14_7" sev="3" total="3"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The statement forming the body of a 'switch', 'while', 'do...while' or 'for' statement shall be a compound statement" id="MISRA2004-14_8" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="'if' and 'else' should be followed by a compound statement" id="MISRA2004-14_9" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A break statement should be placed only at the end of switch clause" id="MISRA2004-15_0_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A switch statement shall only contain switch labels and switch clauses, and no other code" id="MISRA2004-15_0_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A switch label shall only be used when the most closely-enclosing compound statement is the body of a switch statement" id="MISRA2004-15_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="An unconditional break statement shall terminate every non-empty case clause" id="MISRA2004-15_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="An unconditional break statement shall terminate every non-empty default clause" id="MISRA2004-15_2_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The final clause of a switch statement shall be the default clause" id="MISRA2004-15_3" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A switch expression shall not represent a value that is effectively Boolean" id="MISRA2004-15_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A switch expression shall not represent a value that is effectively Boolean" id="MISRA2004-15_4_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Every switch statement shall have at least one case clause" id="MISRA2004-15_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Functions shall not be defined with a variable number of arguments" id="MISRA2004-16_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="31;" authUrg="8;" cat="MISRA2004" desc="If a function returns error information, then that error information shall be tested" id="MISRA2004-16_10" sev="3" total="31"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Functions shall not call themselves, either directly or indirectly" id="MISRA2004-16_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="5;" authUrg="2;" cat="MISRA2004" desc="Identifiers shall be given for all of the parameters in a function prototype declaration" id="MISRA2004-16_3" sev="3" total="5"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The identifiers used in the declaration and definition of a function shall be identical" id="MISRA2004-16_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="17;" authUrg="4;" cat="MISRA2004" desc="Functions with no parameters shall be declared with parameter type void" id="MISRA2004-16_5" sev="3" total="17"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The number of arguments passed to a function shall match the number of parameters" id="MISRA2004-16_6" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="1;" authUrg="0;" cat="MISRA2004" desc="A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object" id="MISRA2004-16_7" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Declare a type of parameter as typedef to pointer to const if the pointer is not used to modify the addressed object" id="MISRA2004-16_7_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="All exit paths from a function with non-void return type shall have an explicit return statement with an expression" id="MISRA2004-16_8" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="All exit paths from a function, except main(), with non-void return type shall have an explicit return statement with an expression" id="MISRA2004-16_8_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A function identifier shall only be used with either a preceding '&amp;', or with a parenthesised parameter list, which may be empty" id="MISRA2004-16_9" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Do not apply arithmetic to pointers that don't address an array or array element" id="MISRA2004-17_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Pointer subtraction shall only be applied to pointers that address elements of the same array" id="MISRA2004-17_2" origId="CODSTA-13_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc=">, >=, &lt;, &lt;= shall not be applied to pointer types except where they point to the same array" id="MISRA2004-17_3" origId="CODSTA-13" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Array indexing shall be the only allowed form of pointer arithmetic" id="MISRA2004-17_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The declaration of objects should contain no more than 2 levels of pointer indirection" id="MISRA2004-17_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The address of an object with automatic storage shall not be returned from a function" id="MISRA2004-17_6_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The address of an object with automatic storage shall not be assigned to another object that may persist after the first object has ceased to exist" id="MISRA2004-17_6_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="All structure and union types shall be complete at the end of a translation unit" id="MISRA2004-18_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="An object shall not be assigned to an overlapping object" id="MISRA2004-18_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="An object shall not be assigned to an overlapping object" id="MISRA2004-18_2_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Unions shall not be used" id="MISRA2004-18_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="#include statements in a file should only be preceded by other preprocessor directives or comments" id="MISRA2004-19_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##" id="MISRA2004-19_10" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Do not use in preprocessor directives #if and #elif macros not defined in translation unit" id="MISRA2004-19_11_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be at most one occurrence of the # or ## preprocessor operators in a single macro definition" id="MISRA2004-19_12" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The # and ## preprocessor operators should not be used" id="MISRA2004-19_13" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The defined preprocessor operator shall only be used in one of the two standard forms" id="MISRA2004-19_14" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Precautions shall be taken in order to prevent the contents of a header file being included twice" id="MISRA2004-19_15" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Preprocessing directives shall be syntactically meaningful even when excluded by the preprocessor" id="MISRA2004-19_16" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="All #else, #elif and #endif preprocessor directives shall reside in the same file as the #if or #ifdef directive to which they are related" id="MISRA2004-19_17" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Non-standard characters should not occur in header file names in #include directives" id="MISRA2004-19_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The #include directive shall be followed by either a &lt;filename> or &quot;filename&quot; sequence" id="MISRA2004-19_3" origId="MISRA-089" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Avoid keywords and basic types in macros" id="MISRA2004-19_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Macros shall not be #define'd or #undef'd within a block" id="MISRA2004-19_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="#undef shall not be used" id="MISRA2004-19_6" origId="PREPROC-25" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A function should be used in preference to a function-like macro" id="MISRA2004-19_7" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A function-like macro shall not be invoked without all of its arguments" id="MISRA2004-19_8" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Arguments to a function-like macro shall not contain tokens that look like preprocessing directives" id="MISRA2004-19_9" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="1;" authUrg="0;" cat="MISRA2004" desc="The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used" id="MISRA2004-20_10" sev="3" total="1"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The 'abort()' function from the 'stdlib.h' or 'cstdlib' library shall not be used" id="MISRA2004-20_11" origId="PB-75" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The 'exit()' function from the 'stdlib.h' or 'cstdlib' library shall not be used" id="MISRA2004-20_11_b" origId="PB-75_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The 'getenv()' function from the 'stdlib.h' or 'cstdlib' library shall not be used" id="MISRA2004-20_11_c" origId="SECURITY-52" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The 'system()' function from the 'stdlib.h' or 'cstdlib' library should not be used" id="MISRA2004-20_11_d" origId="SECURITY-48_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="2;" authUrg="1;" cat="MISRA2004" desc="The standard header files &lt;time.h> or &lt;ctime> shall not be used" id="MISRA2004-20_12" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="10;" authUrg="2;" cat="MISRA2004" desc="The time handling functions and macros of the library &lt;time.h> shall not be used" id="MISRA2004-20_12_b" sev="3" total="10"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="7;" authUrg="3;" cat="MISRA2004" desc="The types defined in the library &lt;time.h> shall not be used" id="MISRA2004-20_12_c" sev="3" total="7"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="4;" authUrg="3;" cat="MISRA2004" desc="Do not #define or #undef identifiers with names which start with underscore" id="MISRA2004-20_1_a" sev="3" total="4"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Do not redefine reserved words" id="MISRA2004-20_1_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Reserved identifiers, macros and functions in the standard library, shall not be defined, redefined or undefined (C90 code)" id="MISRA2004-20_1_c" origId="CODSTA-92_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Do not #define nor #undef identifier 'defined'" id="MISRA2004-20_1_e" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The names of standard library macros, objects and functions shall not be reused" id="MISRA2004-20_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The names of standard library macros, objects and functions shall not be reused (C90)" id="MISRA2004-20_2_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The names of standard library macros, objects and functions shall not be reused (C99)" id="MISRA2004-20_2_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="8;" authUrg="0;" cat="MISRA2004" desc="The validity of values passed to library functions shall be checked" id="MISRA2004-20_3" sev="3" total="8"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="2;" authUrg="0;" cat="MISRA2004" desc="Dynamic heap memory allocation shall not be used" id="MISRA2004-20_4" sev="3" total="2"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The error indicator 'errno' shall not be used" id="MISRA2004-20_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The macro offsetof, in library stddef.h, shall not be used" id="MISRA2004-20_6" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The facilities provided by &lt;setjmp.h> should not be used" id="MISRA2004-20_7" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The standard header files &lt;setjmp.h> or &lt;csetjmp> shall not be used" id="MISRA2004-20_7_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The standard header files &lt;signal.h> or &lt;csignal> shall not be used" id="MISRA2004-20_8" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The signal handling facilities of &lt;signal.h> shall not be used" id="MISRA2004-20_8_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="4;" authUrg="1;" cat="MISRA2004" desc="The input/output library stdio.h shall not be used" id="MISRA2004-20_9" sev="3" total="4"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Assembly language shall be encapsulated and isolated" id="MISRA2004-2_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Source code shall only use /* ... */ style comments" id="MISRA2004-2_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The character sequence /* shall not be used within a C-style comment" id="MISRA2004-2_3" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="All uses of the #pragma directive shall be documented and explained" id="MISRA2004-3_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Do not mix bit-fields and other data within the same structure" id="MISRA2004-3_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Only those escape sequences that are defined in the ISO C standard shall be used" id="MISRA2004-4_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Trigraphs shall not be used" id="MISRA2004-4_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="User-specified C external identifiers should differ in the first 31 characters" id="MISRA2004-5_1_a" origId="PORT-35_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="User-specified C internal identifiers should differ from external identifiers in the first 31 characters" id="MISRA2004-5_1_b" origId="PORT-35_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="User-specified C internal identifiers declared in the same scope should differ in the first 31 characters" id="MISRA2004-5_1_c" origId="PORT-35_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Identifier declared in a local or function prototype scope shall not hide an identifier declared in a global or namespace scope" id="MISRA2004-5_2_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Identifiers declared in an inner local scope should not hide identifiers declared in an outer local scope" id="MISRA2004-5_2_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Do not reuse typedef names" id="MISRA2004-5_3_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Do not reuse typedef names as a typedef name" id="MISRA2004-5_3_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A tag name shall not be reused for other purpose within the program" id="MISRA2004-5_4_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A tag name shall not be reused to define a different tag" id="MISRA2004-5_4_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The name of typedef should not be the same as the name of type that is typedef'd" id="MISRA2004-5_4_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The plain char type shall be used only for the storage and use of character values" id="MISRA2004-6_1" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="signed and unsigned char type shall be used only for the storage and use of numeric values" id="MISRA2004-6_2" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="typedefs to basic types should contain some digits in their name" id="MISRA2004-6_3" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="22;" authUrg="3;" cat="MISRA2004" desc="typedefs should be used in place of the basic types" id="MISRA2004-6_3_b" sev="3" total="22"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Bit fields shall only be defined to be of type unsigned int or signed int" id="MISRA2004-6_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Named bit-fields with signed integer type shall have a length of more than one bit" id="MISRA2004-6_5" origId="CODSTA-71" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Unnamed bit-fields with signed integer type shall have a length of more than one bit" id="MISRA2004-6_5_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Octal constants (other than zero) shall not be used" id="MISRA2004-7_1_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Octal escape sequences shall not be used" id="MISRA2004-7_1_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The static storage class specifier shall be used in definitions and declarations of objects and functions that have internal linkage" id="MISRA2004-8_11" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="When an array with external linkage is declared, its size should be explicitly specified" id="MISRA2004-8_12" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="24;" authUrg="12;" cat="MISRA2004" desc="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" id="MISRA2004-8_1_a" origId="MISRA-071_a" sev="3" total="24"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="15;" authUrg="9;" cat="MISRA2004" desc="Functions shall always have visible prototype at the function call" id="MISRA2004-8_1_b" origId="MISRA-071_b" sev="3" total="15"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Whenever a function is declared or defined, its type shall be explicitly stated" id="MISRA2004-8_2_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Whenever an object is declared or defined, its type shall be explicitly stated" id="MISRA2004-8_2_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Use identical types in declaration and definition" id="MISRA2004-8_3_a" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Use identical types in declaration and definition" id="MISRA2004-8_3_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="If objects or functions are declared more than once their types shall be compatible" id="MISRA2004-8_4" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="There shall be no definitions of objects or functions in a header file" id="MISRA2004-8_5" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Always declare functions at file scope" id="MISRA2004-8_6" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Objects shall be defined at block scope if they are only accessed from within a single function" id="MISRA2004-8_7" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="All automatic variables shall have been assigned a value before being used" id="MISRA2004-9_1" origId="MISRA-030" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The initializer for an aggregate or union shall be enclosed in braces" id="MISRA2004-9_2" origId="INIT-16" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Arrays shall not be partially initialized" id="MISRA2004-9_2_b" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The non-zero initialization of structures requires an explicit initializer for each element" id="MISRA2004-9_2_c" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="In an enumerator list, the &quot;=&quot; construct shall not be used to explicitly initialise members other than the first, unless all items are explicitly initialised" id="MISRA2004-9_3" sev="3" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Sections of code should not be &quot;commented out&quot;" id="MISRA2004-2_4" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Sections of code should not be &quot;commented out&quot; using Doxygen comments" id="MISRA2004-2_4_b" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="No object or function identifier with static storage duration should be reused" id="MISRA2004-5_5_a" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="No object or function identifier with static storage duration should be reused" id="MISRA2004-5_5_b" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="No identifier in one name space should have the same spelling as an identifier in another name space, with the exception of structure and union member names" id="MISRA2004-5_6" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="No identifier name should be reused" id="MISRA2004-5_7" sev="4" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="4;" authUrg="2;" cat="MISRA2004" desc="Objects or functions with external linkage shall be declared in a header file" id="MISRA2004-8_10" origId="MISRA-023" sev="4" total="4"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="A 'U' suffix shall be applied to all constants of unsigned type" id="MISRA2004-10_6" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Limited dependence should be placed on C's operator precedence rules in expressions" id="MISRA2004-12_1_b" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="No parentheses are required for the operand of a unary operator" id="MISRA2004-12_1_c" sev="5" total="0"/>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Limited dependence should be placed on C's operator precedence rules in expressions" id="MISRA2004-12_1_f" sev="5" total="0"/>
         </RulesList>
         <SeverityList>
            <Severity authTot="163;" authUrg="48;" id="3" total="163"/>
            <Severity authTot="4;" authUrg="2;" id="4" total="4"/>
         </SeverityList>
      </Rules>
      
  <Supps/>

      
  <StdViols>
    <StdViol msg="&lt;stdio.h> library shall not be used" ln="5" locFile="/VSCodeIntegrate/clock.c" locStartln="5" sev="3" auth="syoung" locRef="1" rule="MISRA2004-20_9" lnHash="1233725276" rule.header="The input/output library stdio.h shall not be used" tool="c++test" lineHash="1233725276" unbViolId="9d4b7f33-5793-383e-a95c-a4e548a33c44" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="700fb53c-0b3b-3d38-bee3-9bba6ef865aa" locEndPos="1" locType="sr" urgent="true" hash="-249486341" locEndLn="5" goals="1,"/>
    <StdViol msg="Prototype of function 'display_time' does not precede function definition" ln="13" locFile="/VSCodeIntegrate/clock.c" locStartln="13" sev="3" auth="syoung" locRef="1" rule="MISRA2004-8_1_a" lnHash="-523314505" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-523314505" unbViolId="c107df80-5da3-31ed-b168-edfde8a44c0e" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="e04343f0-0d10-3ec5-8827-9297e0765d58" locEndPos="6" locType="sr" urgent="true" hash="-249486341" locEndLn="13" goals="1,"/>
    <StdViol msg="Declare function 'display_time' with parameter type void" ln="13" locFile="/VSCodeIntegrate/clock.c" locStartln="13" sev="3" auth="syoung" locRef="1" rule="MISRA2004-16_5" lnHash="-523314505" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="-523314505" unbViolId="d3696558-4265-31ac-afe6-05dfd9ee8a2a" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="7ff00d55-7998-3e76-ba9f-f1bdeee3a422" locEndPos="6" locType="sr" urgent="true" hash="-249486341" locEndLn="13" goals="1,"/>
    <StdViol msg="The 'time_t' identifier should not be used" ln="16" locFile="/VSCodeIntegrate/clock.c" locStartln="16" sev="3" auth="syoung" locRef="1" rule="MISRA2004-20_12_c" lnHash="-1564703446" rule.header="The types defined in the library &lt;time.h> shall not be used" tool="c++test" lineHash="-1564703446" unbViolId="861a92e7-6c53-34fb-9b97-a62d6d1f65a8" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="c875d391-09d1-33cf-866a-5e0af058ec5c" locEndPos="5" locType="sr" urgent="true" hash="-249486341" locEndLn="16" goals="1,"/>
    <StdViol msg="Usage of 'time' function is not allowed" ln="16" locFile="/VSCodeIntegrate/clock.c" locStartln="16" sev="3" auth="syoung" locRef="1" rule="MISRA2004-20_12_b" lnHash="-1564703446" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="-1564703446" unbViolId="db9dcd18-5e92-313d-b7cd-f77ee1ec2862" locStartPos="22" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="f003f24f-f82f-3517-be3d-5367d911adae" locEndPos="23" locType="sr" urgent="true" hash="-249486341" locEndLn="16" goals="1,"/>
    <StdViol msg="Usage of 'ctime' function is not allowed" ln="17" locFile="/VSCodeIntegrate/clock.c" locStartln="17" sev="3" auth="syoung" locRef="1" rule="MISRA2004-20_12_b" lnHash="-237631284" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="-237631284" unbViolId="d882ae4d-2a92-3253-bff1-3480a19ba58d" locStartPos="14" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="8ac862a2-f64f-39c1-b629-1c9a884cce76" locEndPos="15" locType="sr" urgent="true" hash="-249486341" locEndLn="17" goals="1,"/>
    <StdViol msg="Unused function's &quot;sprintf&quot; return value" ln="19" locFile="/VSCodeIntegrate/clock.c" locStartln="19" sev="3" auth="syoung" locRef="1" rule="MISRA2004-16_10" lnHash="369521280" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="369521280" unbViolId="bb3463a3-de48-3887-bdb9-014a3a1a615e" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="02d1f182-2edc-31f3-a00d-4ce03339ad1d" locEndPos="5" locType="sr" urgent="true" hash="-249486341" locEndLn="19" goals="1,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="20" locFile="/VSCodeIntegrate/clock.c" locStartln="20" sev="3" auth="syoung" locRef="1" rule="MISRA2004-16_10" lnHash="-1350296736" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1350296736" unbViolId="8f25588e-5416-3768-b3d2-be97a553872e" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="7b58ec88-a450-395d-bb7b-0eff756411d1" locEndPos="5" locType="sr" urgent="true" hash="-249486341" locEndLn="20" goals="1,"/>
    <StdViol msg="The 'time_t' identifier should not be used" ln="27" locFile="/VSCodeIntegrate/clock.c" locStartln="27" sev="3" auth="syoung" locRef="1" rule="MISRA2004-20_12_c" lnHash="-1989025327" rule.header="The types defined in the library &lt;time.h> shall not be used" tool="c++test" lineHash="-1989025327" unbViolId="1b281400-ec5c-3a8b-8a87-505d0c6701e3" locStartPos="14" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5f73b89a-c53b-3035-980f-83d353d432e5" locEndPos="15" locType="sr" urgent="true" hash="-249486341" locEndLn="27" goals="1,"/>
    <StdViol msg="&lt;stdio.h> library shall not be used" ln="6" locFile="/VSCodeIntegrate/driver.c" locStartln="6" sev="3" auth="syoung" locRef="2" rule="MISRA2004-20_9" lnHash="1233725276" rule.header="The input/output library stdio.h shall not be used" tool="c++test" lineHash="1233725276" unbViolId="81865631-b5d8-3ad8-962e-617e9f5bd6fb" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="05d95d58-0295-358f-88bc-0bb91b0798ed" locEndPos="1" locType="sr" hash="65740504" locEndLn="6" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="13" locFile="/VSCodeIntegrate/driver.c" locStartln="13" sev="3" auth="syoung" locRef="2" rule="MISRA2004-6_3_b" lnHash="-1050535651" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="-1050535651" unbViolId="fbbc5311-3381-3834-aa50-48d11c4dcc70" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="2760e30e-e887-3b50-98b8-9c5c03d6b8cb" locEndPos="1" locType="sr" hash="65740504" locEndLn="13" goals="0,"/>
    <StdViol msg="Function 'print_menu_get_action' has external linkage and is not declared in the header" ln="13" locFile="/VSCodeIntegrate/driver.c" locStartln="13" sev="4" auth="syoung" locRef="2" rule="MISRA2004-8_10" lnHash="-1050535651" rule.header="Objects or functions with external linkage shall be declared in a header file" tool="c++test" lineHash="-1050535651" unbViolId="d1479cd4-78d2-32ee-ae0d-edc6afebaa38" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="24d3eadf-7173-355c-b660-49c947f4df85" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="13" goals="1,"/>
    <StdViol msg="Prototype of function 'print_menu_get_action' does not precede function definition" ln="13" locFile="/VSCodeIntegrate/driver.c" locStartln="13" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="-1050535651" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-1050535651" unbViolId="7a5befe1-21fc-30f9-967a-511ce1fa5f8f" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="e4b9cc4c-0e7b-39fe-a917-99521de153b0" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="13" goals="1,"/>
    <StdViol msg="Declare function 'print_menu_get_action' with parameter type void" ln="13" locFile="/VSCodeIntegrate/driver.c" locStartln="13" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_5" lnHash="-1050535651" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="-1050535651" unbViolId="722905ca-332f-3c31-a3e3-ee9d1e41f79a" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="c686ee57-5f18-3225-9ed5-ef7c97f0d600" locEndPos="5" locType="sr" hash="65740504" locEndLn="13" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="15" locFile="/VSCodeIntegrate/driver.c" locStartln="15" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="923795973" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="923795973" unbViolId="48a1c085-9ae5-30f1-a390-abdd89004901" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="2539cd76-d168-38f8-9d1d-2062055b7f77" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="15" goals="1,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="16" locFile="/VSCodeIntegrate/driver.c" locStartln="16" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="378303775" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="378303775" unbViolId="bd187d52-0edb-3bf3-aedc-200df8cd9acb" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="6f2f969f-91a3-3c64-9dba-5cb113b80bbd" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="16" goals="1,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="17" locFile="/VSCodeIntegrate/driver.c" locStartln="17" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="461595667" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="461595667" unbViolId="7a388cf0-ef8d-325d-bd8c-c08dce05dc62" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5e45b726-0962-3e7f-afe8-c5c053b36f70" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="17" goals="1,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="18" locFile="/VSCodeIntegrate/driver.c" locStartln="18" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="-1874811899" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1874811899" unbViolId="0a5f7faa-15b8-3099-8fdf-a22c23f74bd0" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="c8d31683-57ff-3b44-bf3c-851b6b044205" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="18" goals="1,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="19" locFile="/VSCodeIntegrate/driver.c" locStartln="19" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="1674314502" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="1674314502" unbViolId="312b20ef-981f-3ab1-8920-777732a0986b" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="9c7fc9eb-e64b-3d44-9719-22de22d53bf5" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="19" goals="1,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="20" locFile="/VSCodeIntegrate/driver.c" locStartln="20" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="-94421320" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-94421320" unbViolId="2c206629-618f-3ee8-abb4-01ebf64876cf" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="c87f834b-7f0a-3982-9243-04f67947d4c0" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="20" goals="1,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="21" locFile="/VSCodeIntegrate/driver.c" locStartln="21" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="834318816" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="834318816" unbViolId="fd890c27-77d9-32f5-8de1-4f9766e34edc" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="4379f37f-fdc9-375d-a68f-79a785bfe332" locEndPos="5" locType="sr" hash="65740504" locEndLn="21" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="22" locFile="/VSCodeIntegrate/driver.c" locStartln="22" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="1075694496" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="1075694496" unbViolId="c3833357-2c0a-318f-a48b-90d40610e2db" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="e61a1507-8df6-3bcc-82af-4e683f54b3fc" locEndPos="5" locType="sr" hash="65740504" locEndLn="22" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="23" locFile="/VSCodeIntegrate/driver.c" locStartln="23" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="-1874811899" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1874811899" unbViolId="4150e6e3-2a86-3b2e-a4ee-a0023a86df4d" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="4dc65965-2e9c-3a2b-b6b9-895aa3a324b9" locEndPos="5" locType="sr" hash="65740504" locEndLn="23" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="24" locFile="/VSCodeIntegrate/driver.c" locStartln="24" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="-1018687565" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1018687565" unbViolId="ca0bc698-5b34-3195-9883-75e0ad541c6d" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="39571a79-c254-341d-8c01-13191be38ebb" locEndPos="5" locType="sr" hash="65740504" locEndLn="24" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="25" locFile="/VSCodeIntegrate/driver.c" locStartln="25" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="-1874811899" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1874811899" unbViolId="46fd0409-f157-39d2-a860-b6227b272c25" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="73bf330a-acf0-3f51-89f5-aebf38041fa1" locEndPos="5" locType="sr" hash="65740504" locEndLn="25" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="26" locFile="/VSCodeIntegrate/driver.c" locStartln="26" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="-1234703117" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1234703117" unbViolId="33d3496b-4b01-3e91-aaca-44851741b1fc" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="c55fd65d-c94c-3ff1-9b66-09cb7cc68601" locEndPos="5" locType="sr" hash="65740504" locEndLn="26" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="28" locFile="/VSCodeIntegrate/driver.c" locStartln="28" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="-859906268" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-859906268" unbViolId="af3c6dc0-64ff-3dd7-ba1a-1a9ef89dbe01" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="cfd35da2-90db-3375-9af4-d722c1afabad" locEndPos="5" locType="sr" hash="65740504" locEndLn="28" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="29" locFile="/VSCodeIntegrate/driver.c" locStartln="29" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="-495843510" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-495843510" unbViolId="2daceb2e-1033-36c8-a78e-b860877ef032" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="a48970ed-b863-34ee-80c5-f7728f111e1c" locEndPos="13" locType="sr" urgent="true" hash="65740504" locEndLn="29" goals="1,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="29" locFile="/VSCodeIntegrate/driver.c" locStartln="29" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_b" lnHash="-495843510" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="-495843510" unbViolId="1772a3a1-3be6-3ac2-b5c2-5a6d0623aaad" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="d651b1b1-6f63-30bb-8c5f-86b24842407b" locEndPos="13" locType="sr" urgent="true" hash="65740504" locEndLn="29" goals="1,"/>
    <StdViol msg="Function 'main_loop' has external linkage and is not declared in the header" ln="32" locFile="/VSCodeIntegrate/driver.c" locStartln="32" sev="4" auth="syoung" locRef="2" rule="MISRA2004-8_10" lnHash="2093791071" rule.header="Objects or functions with external linkage shall be declared in a header file" tool="c++test" lineHash="2093791071" unbViolId="34382264-1f31-3213-ab84-52faeb84a84b" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="11c92a8f-8d82-352d-8ebb-8a3bd83d31be" locEndPos="6" locType="sr" urgent="true" hash="65740504" locEndLn="32" goals="1,"/>
    <StdViol msg="Prototype of function 'main_loop' does not precede function definition" ln="32" locFile="/VSCodeIntegrate/driver.c" locStartln="32" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="2093791071" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="2093791071" unbViolId="2a7893d4-b081-3479-8230-d359a569dd88" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="004488f5-1d8b-33e5-99c6-511ff26afda2" locEndPos="6" locType="sr" urgent="true" hash="65740504" locEndLn="32" goals="1,"/>
    <StdViol msg="Declare function 'main_loop' with parameter type void" ln="32" locFile="/VSCodeIntegrate/driver.c" locStartln="32" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_5" lnHash="2093791071" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="2093791071" unbViolId="ceb4d7b4-0bd6-3e3c-bb3b-31ac8d410ab1" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="3e0d6067-d7eb-3909-9843-ca88cf8ee441" locEndPos="6" locType="sr" hash="65740504" locEndLn="32" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="35" locFile="/VSCodeIntegrate/driver.c" locStartln="35" sev="3" auth="syoung" locRef="2" rule="MISRA2004-6_3_b" lnHash="1236489322" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1236489322" unbViolId="96ee06fe-d273-34ec-9a38-15523edd42e1" locStartPos="8" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="8120b950-2416-3fd7-9166-22e0b2ef3194" locEndPos="9" locType="sr" hash="65740504" locEndLn="35" goals="0,"/>
    <StdViol msg="Prototype of function 'print_menu_get_action' does not precede function call" ln="35" locFile="/VSCodeIntegrate/driver.c" locStartln="35" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="1236489322" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="1236489322" unbViolId="a8306d05-c83f-3953-87d3-f0634b944801" locStartPos="21" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="0122d9dc-6d15-30b0-ac12-8458733c178b" locEndPos="22" locType="sr" urgent="true" hash="65740504" locEndLn="35" goals="1,"/>
    <StdViol msg="Prototype of function 'print_menu_get_action' does not precede function call" ln="35" locFile="/VSCodeIntegrate/driver.c" locStartln="35" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_b" lnHash="1236489322" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="1236489322" unbViolId="11fbbad6-68e1-3815-ae22-2ce7e0c44f48" locStartPos="21" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="3aedc4a3-eed0-3729-99a0-373de12a0346" locEndPos="22" locType="sr" urgent="true" hash="65740504" locEndLn="35" goals="1,"/>
    <StdViol msg="Prototype of function 'add_timer' does not precede function call" ln="40" locFile="/VSCodeIntegrate/driver.c" locStartln="40" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="-1326866858" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-1326866858" unbViolId="58c19d73-7c60-34df-9788-5cf1482b0a01" locStartPos="18" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="6c8a3525-a8f5-32aa-a092-cc1b704788a4" locEndPos="19" locType="sr" urgent="true" hash="65740504" locEndLn="40" goals="1,"/>
    <StdViol msg="Prototype of function 'add_timer' does not precede function call" ln="40" locFile="/VSCodeIntegrate/driver.c" locStartln="40" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_b" lnHash="-1326866858" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="-1326866858" unbViolId="93c457ad-3184-3d61-a479-9027eaaadca0" locStartPos="18" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5d50d391-0573-36fc-a6cf-a2b3bae8bd2f" locEndPos="19" locType="sr" urgent="true" hash="65740504" locEndLn="40" goals="1,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="42" locFile="/VSCodeIntegrate/driver.c" locStartln="42" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="420014112" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="420014112" unbViolId="89414e88-f48a-330a-8007-43138065a0fe" locStartPos="16" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="df6d6d47-3c47-314f-8172-42a44fe3be4d" locEndPos="17" locType="sr" hash="65740504" locEndLn="42" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="44" locFile="/VSCodeIntegrate/driver.c" locStartln="44" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="1318983287" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="1318983287" unbViolId="65e9c981-0771-33ac-ac5a-e64fda2a7596" locStartPos="16" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="43b02aa8-bb4f-3d7e-a4e4-9f11ccaec628" locEndPos="17" locType="sr" hash="65740504" locEndLn="44" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="48" locFile="/VSCodeIntegrate/driver.c" locStartln="48" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="482597223" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="482597223" unbViolId="40f4ddd6-7c56-352d-8b73-3637c13c15d6" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="cad79efa-344e-3f42-8173-82ea426e3999" locEndPos="13" locType="sr" hash="65740504" locEndLn="48" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="49" locFile="/VSCodeIntegrate/driver.c" locStartln="49" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="-429052551" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-429052551" unbViolId="8218e8d8-d607-346b-99fb-24d6d2302f42" locStartPos="32" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="35c84e7e-2816-3000-952f-054c75b80ee9" locEndPos="33" locType="sr" urgent="true" hash="65740504" locEndLn="49" goals="1,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="49" locFile="/VSCodeIntegrate/driver.c" locStartln="49" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_b" lnHash="-429052551" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="-429052551" unbViolId="a7e9e7b0-11df-3d20-8262-ea39214b532e" locStartPos="32" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="3d9219cd-2a47-3d11-92ae-364e5ee83bf6" locEndPos="33" locType="sr" urgent="true" hash="65740504" locEndLn="49" goals="1,"/>
    <StdViol msg="Prototype of function 'list_timers' does not precede function call" ln="52" locFile="/VSCodeIntegrate/driver.c" locStartln="52" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="1582224491" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="1582224491" unbViolId="6c375b95-f9da-3ab6-b247-2c1bfe4cc64c" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="07585daa-174b-3796-9d77-bc499c3f674a" locEndPos="13" locType="sr" urgent="true" hash="65740504" locEndLn="52" goals="1,"/>
    <StdViol msg="Prototype of function 'list_timers' does not precede function call" ln="52" locFile="/VSCodeIntegrate/driver.c" locStartln="52" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_b" lnHash="1582224491" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="1582224491" unbViolId="c603a459-f2e3-38fc-ab99-e243b6d02cf0" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="f0fedbd5-bcce-3513-b3a8-a9ed5343586c" locEndPos="13" locType="sr" urgent="true" hash="65740504" locEndLn="52" goals="1,"/>
    <StdViol msg="Prototype of function 'display_time' does not precede function call" ln="55" locFile="/VSCodeIntegrate/driver.c" locStartln="55" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="-1947009296" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-1947009296" unbViolId="49f7ad52-d1b6-36d8-a71b-988bb04f316d" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="9fba7014-77b3-3b48-a366-7fad9d0613d7" locEndPos="13" locType="sr" urgent="true" hash="65740504" locEndLn="55" goals="1,"/>
    <StdViol msg="Prototype of function 'display_time' does not precede function call" ln="55" locFile="/VSCodeIntegrate/driver.c" locStartln="55" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_b" lnHash="-1947009296" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="-1947009296" unbViolId="dfbb693a-5728-3758-987a-6752c1271d05" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="87ba7986-10b5-3943-ac81-d6a0cef2eb8a" locEndPos="13" locType="sr" urgent="true" hash="65740504" locEndLn="55" goals="1,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="59" locFile="/VSCodeIntegrate/driver.c" locStartln="59" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="-1303736882" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1303736882" unbViolId="6174656e-c0ae-390c-9fdf-7926fe62544f" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="710197cc-7dcf-3f33-be58-a672d7bb8ca8" locEndPos="13" locType="sr" hash="65740504" locEndLn="59" goals="0,"/>
    <StdViol msg="'return' statement should be at the end of the 'main_loop' function" ln="60" locFile="/VSCodeIntegrate/driver.c" locStartln="60" sev="3" auth="syoung" locRef="2" rule="MISRA2004-14_7" lnHash="-1196601077" rule.header="A function shall have a single point of exit at the end of the function" tool="c++test" lineHash="-1196601077" unbViolId="a530a77e-6095-3650-97fe-155e97c7557c" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="41108bc0-f77d-315c-838d-790002bb812f" locEndPos="13" locType="sr" hash="65740504" locEndLn="60" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="63" locFile="/VSCodeIntegrate/driver.c" locStartln="63" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_10" lnHash="94038296" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="94038296" unbViolId="cdd0ded3-2b9f-310c-9a55-5f7cbc7595fa" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="9b5e1878-6b98-3071-a139-9d55dfb44707" locEndPos="13" locType="sr" hash="65740504" locEndLn="63" goals="0,"/>
    <StdViol msg="Declare function 'main' with parameter type void" ln="69" locFile="/VSCodeIntegrate/driver.c" locStartln="69" sev="3" auth="syoung" locRef="2" rule="MISRA2004-16_5" lnHash="1440699851" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="1440699851" unbViolId="f67a6a45-bb5d-3e4f-9d78-a2fa945850d7" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="09801a68-c83f-3025-9c65-962ec1932952" locEndPos="5" locType="sr" hash="65740504" locEndLn="69" goals="0,"/>
    <StdViol msg="Prototype of function 'init_timer' does not precede function call" ln="71" locFile="/VSCodeIntegrate/driver.c" locStartln="71" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="932563601" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="932563601" unbViolId="c68fbc47-a8c7-3848-ad72-7e451de25d4b" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="d179827c-7bb1-3c7d-9efc-25c19decd256" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="71" goals="1,"/>
    <StdViol msg="Prototype of function 'init_timer' does not precede function call" ln="71" locFile="/VSCodeIntegrate/driver.c" locStartln="71" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_b" lnHash="932563601" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="932563601" unbViolId="edafdc63-799d-3b7f-8474-7e006061f8f4" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="f700e3a3-ccd8-3a02-845f-2412e89d2ef8" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="71" goals="1,"/>
    <StdViol msg="Prototype of function 'main_loop' does not precede function call" ln="72" locFile="/VSCodeIntegrate/driver.c" locStartln="72" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="-660983347" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-660983347" unbViolId="ba35751b-2e68-3c36-aa91-152c14181be2" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="2061e338-95b0-38d8-a2b5-cb69b1765c14" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="72" goals="1,"/>
    <StdViol msg="Prototype of function 'main_loop' does not precede function call" ln="72" locFile="/VSCodeIntegrate/driver.c" locStartln="72" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_b" lnHash="-660983347" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="-660983347" unbViolId="5b453d91-91a8-3b11-a9fd-f35dbbb2aa93" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="a69f3d0a-049d-3c40-8351-bb3eabe29628" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="72" goals="1,"/>
    <StdViol msg="Prototype of function 'uninit_timer' does not precede function call" ln="73" locFile="/VSCodeIntegrate/driver.c" locStartln="73" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_a" lnHash="699424085" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="699424085" unbViolId="21201f4d-1110-34ae-ba7c-4ab34f20f9ea" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="4db45dd6-6d10-33d8-a617-69266f723e42" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="73" goals="1,"/>
    <StdViol msg="Prototype of function 'uninit_timer' does not precede function call" ln="73" locFile="/VSCodeIntegrate/driver.c" locStartln="73" sev="3" auth="syoung" locRef="2" rule="MISRA2004-8_1_b" lnHash="699424085" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="699424085" unbViolId="df574a45-c6fa-33f8-be9a-f04047629e24" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="363a27aa-3c53-3890-af5f-977d5989dd28" locEndPos="5" locType="sr" urgent="true" hash="65740504" locEndLn="73" goals="1,"/>
    <StdViol msg="&lt;stdio.h> library shall not be used" ln="6" locFile="/VSCodeIntegrate/timer.c" locStartln="6" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_9" lnHash="1233725276" rule.header="The input/output library stdio.h shall not be used" tool="c++test" lineHash="1233725276" unbViolId="e2d4db03-c07f-3713-a203-78bf8e27ac0d" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="0c06810c-8026-3f7d-9d12-73487fa4cf63" locEndPos="1" locType="sr" hash="-275311578" locEndLn="6" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="17" locFile="/VSCodeIntegrate/timer.c" locStartln="17" sev="3" auth="syoung" locRef="3" rule="MISRA2004-6_3_b" lnHash="1227318948" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1227318948" unbViolId="6f55e4d9-5c7f-34dd-8157-7aee98bf48d1" locStartPos="6" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="bb61e3e0-9080-315f-98e0-5998da73b678" locEndPos="7" locType="sr" hash="-275311578" locEndLn="17" goals="0,"/>
    <StdViol msg="Global variable 'max_records' has external linkage and is not declared in the header" ln="17" locFile="/VSCodeIntegrate/timer.c" locStartln="17" sev="4" auth="syoung" locRef="3" rule="MISRA2004-8_10" lnHash="1227318948" rule.header="Objects or functions with external linkage shall be declared in a header file" tool="c++test" lineHash="1227318948" unbViolId="7d987f27-eed3-36c4-8566-6a0a2ec99a8b" locStartPos="10" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="311b43ac-111b-3ed4-91e2-0a3efc79c591" locEndPos="11" locType="sr" hash="-275311578" locEndLn="17" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="18" locFile="/VSCodeIntegrate/timer.c" locStartln="18" sev="3" auth="syoung" locRef="3" rule="MISRA2004-6_3_b" lnHash="1846901926" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1846901926" unbViolId="fe473bce-f7d3-36bd-acfc-665f712cd0ab" locStartPos="7" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="c71a7a30-92fe-39e1-9fb0-e9dfc351811e" locEndPos="8" locType="sr" hash="-275311578" locEndLn="18" goals="0,"/>
    <StdViol msg="Prototype of function 'init_timer' does not precede function definition" ln="20" locFile="/VSCodeIntegrate/timer.c" locStartln="20" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="-1542456861" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-1542456861" unbViolId="933aaeea-4ad2-3de7-bac9-e7a3e54a0cea" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="acf1d78c-916b-37d4-baa6-a94c8ffcf734" locEndPos="6" locType="sr" hash="-275311578" locEndLn="20" goals="0,"/>
    <StdViol msg="Declare function 'init_timer' with parameter type void" ln="20" locFile="/VSCodeIntegrate/timer.c" locStartln="20" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_5" lnHash="-1542456861" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="-1542456861" unbViolId="85328e1a-fe1d-3182-bced-42367cd16de5" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="3be884fe-829d-3413-91c0-3d56b4dbd77f" locEndPos="6" locType="sr" hash="-275311578" locEndLn="20" goals="0,"/>
    <StdViol msg="Implicit conversion between signed and unsigned type shall not be used" ln="22" locFile="/VSCodeIntegrate/timer.c" locStartln="22" sev="3" auth="syoung" locRef="3" rule="MISRA2004-10_1_a" lnHash="-1074791283" rule.header="Avoid implicit conversions between signed and unsigned integer types" tool="c++test" lineHash="-1074791283" unbViolId="98fafd0b-a663-3de6-a6e2-b8de2347fd4b" locStartPos="29" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="7b8f843c-858c-30f0-a25b-86402d9bbbca" locEndPos="30" locType="sr" hash="-275311578" locEndLn="22" goals="0,"/>
    <StdViol msg="Prototype of function 'uninit_timer' does not precede function definition" ln="25" locFile="/VSCodeIntegrate/timer.c" locStartln="25" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="-301312004" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-301312004" unbViolId="6a6bdd70-9928-35ab-a526-4ce2d4d152cf" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5ef814e7-3555-3227-ba89-0462cf97781f" locEndPos="6" locType="sr" hash="-275311578" locEndLn="25" goals="0,"/>
    <StdViol msg="Declare function 'uninit_timer' with parameter type void" ln="25" locFile="/VSCodeIntegrate/timer.c" locStartln="25" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_5" lnHash="-301312004" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="-301312004" unbViolId="ae1e9747-8b88-3492-9c72-5b7891281ce3" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="c35afd7c-fb8d-3289-b031-fb687189fd70" locEndPos="6" locType="sr" hash="-275311578" locEndLn="25" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="28" locFile="/VSCodeIntegrate/timer.c" locStartln="28" sev="3" auth="syoung" locRef="3" rule="MISRA2004-6_3_b" lnHash="1679375043" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1679375043" unbViolId="5db84c1c-3103-3354-b344-180df7dd12b9" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="db871b5b-ecf2-398a-b108-b69a5ddc4550" locEndPos="5" locType="sr" hash="-275311578" locEndLn="28" goals="0,"/>
    <StdViol msg="Function 'query_user' has external linkage and is not declared in the header" ln="38" locFile="/VSCodeIntegrate/timer.c" locStartln="38" sev="4" auth="syoung" locRef="3" rule="MISRA2004-8_10" lnHash="1780718607" rule.header="Objects or functions with external linkage shall be declared in a header file" tool="c++test" lineHash="1780718607" unbViolId="eeab0269-aa9c-3338-a431-c953b234c1b3" locStartPos="21" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="1278bc8a-6ff2-35d5-aa8e-4358ea88ac3d" locEndPos="22" locType="sr" hash="-275311578" locEndLn="38" goals="0,"/>
    <StdViol msg="Prototype of function 'query_user' does not precede function definition" ln="38" locFile="/VSCodeIntegrate/timer.c" locStartln="38" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="1780718607" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="1780718607" unbViolId="e54d2390-5a72-3cfa-882d-423de0fc1306" locStartPos="21" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="0db3955c-0a1e-3c15-93dc-b30792000bfc" locEndPos="22" locType="sr" hash="-275311578" locEndLn="38" goals="0,"/>
    <StdViol msg="Declare function 'query_user' with parameter type void" ln="38" locFile="/VSCodeIntegrate/timer.c" locStartln="38" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_5" lnHash="1780718607" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="1780718607" unbViolId="e1987290-5702-35e5-9351-55f6ad3f45f1" locStartPos="21" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="ed958733-737c-37d4-afa1-94bfb44669db" locEndPos="22" locType="sr" hash="-275311578" locEndLn="38" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="40" locFile="/VSCodeIntegrate/timer.c" locStartln="40" sev="3" auth="syoung" locRef="3" rule="MISRA2004-6_3_b" lnHash="621530644" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="621530644" unbViolId="d7460473-bdf5-3906-a72b-101f4c96a5df" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="1d3eda5f-a6f1-3ec5-841a-0a1b70f532b2" locEndPos="5" locType="sr" hash="-275311578" locEndLn="40" goals="0,"/>
    <StdViol msg="The 'time_t' identifier should not be used" ln="42" locFile="/VSCodeIntegrate/timer.c" locStartln="42" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_c" lnHash="1079331828" rule.header="The types defined in the library &lt;time.h> shall not be used" tool="c++test" lineHash="1079331828" unbViolId="4bb8d344-440c-3fba-b09e-a1099843c834" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="61016197-b75f-3da9-b127-cf144b41037c" locEndPos="5" locType="sr" hash="-275311578" locEndLn="42" goals="0,"/>
    <StdViol msg="The 'tm' identifier should not be used" ln="43" locFile="/VSCodeIntegrate/timer.c" locStartln="43" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_c" lnHash="1350390768" rule.header="The types defined in the library &lt;time.h> shall not be used" tool="c++test" lineHash="1350390768" unbViolId="0784236f-2ef1-3faa-8bfe-8eec22e0bd8e" locStartPos="11" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="382c2b72-7bd5-3291-9821-8b43774c7131" locEndPos="12" locType="sr" hash="-275311578" locEndLn="43" goals="0,"/>
    <StdViol msg="Usage of 'time' function is not allowed" ln="45" locFile="/VSCodeIntegrate/timer.c" locStartln="45" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_b" lnHash="1705568950" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="1705568950" unbViolId="2b1248fc-3aee-31ea-88ae-5f7f9ecacf6e" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="b61350b6-8555-37c5-be19-6a80c4f6ee76" locEndPos="13" locType="sr" hash="-275311578" locEndLn="45" goals="0,"/>
    <StdViol msg="Usage of 'localtime' function is not allowed" ln="46" locFile="/VSCodeIntegrate/timer.c" locStartln="46" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_b" lnHash="-1526808077" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="-1526808077" unbViolId="ee231c87-80cb-37ff-9698-671f2d7c870b" locStartPos="13" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="2081d43a-9850-3626-9519-0548d17ab15c" locEndPos="14" locType="sr" hash="-275311578" locEndLn="46" goals="0,"/>
    <StdViol msg="'malloc' function should not be used" ln="48" locFile="/VSCodeIntegrate/timer.c" locStartln="48" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_4" lnHash="-527707354" rule.header="Dynamic heap memory allocation shall not be used" tool="c++test" lineHash="-527707354" unbViolId="c476ea50-5245-3ff3-a499-d670ce4e6d59" locStartPos="39" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="55f8abd6-c1d5-3a75-947f-27af3092dfbd" locEndPos="40" locType="sr" hash="-275311578" locEndLn="48" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="52" locFile="/VSCodeIntegrate/timer.c" locStartln="52" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="-337297020" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-337297020" unbViolId="5e67a920-d3fa-376c-95d8-27d8e2f1f44a" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="c191ca89-5cf2-3d77-9eb1-94c310e7ec91" locEndPos="5" locType="sr" hash="-275311578" locEndLn="52" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="53" locFile="/VSCodeIntegrate/timer.c" locStartln="53" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="1051372518" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="1051372518" unbViolId="443dbf79-ffe7-35bd-9f86-1a98e5f3070d" locStartPos="22" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="76eef3dd-3ca9-34d0-a73e-a5da48c6ab6e" locEndPos="23" locType="sr" hash="-275311578" locEndLn="53" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="53" locFile="/VSCodeIntegrate/timer.c" locStartln="53" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_b" lnHash="1051372518" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="1051372518" unbViolId="2b45e87c-832e-372a-aebd-047e2835049e" locStartPos="22" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="da13cdb1-c8f2-3e12-8e91-6c63606733d7" locEndPos="23" locType="sr" hash="-275311578" locEndLn="53" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="54" locFile="/VSCodeIntegrate/timer.c" locStartln="54" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="-1456902895" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1456902895" unbViolId="03329e31-12ad-3252-9d1d-ce7be6fac717" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="9e799ca7-afa7-379c-9f6d-2a7f617b2863" locEndPos="5" locType="sr" hash="-275311578" locEndLn="54" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="55" locFile="/VSCodeIntegrate/timer.c" locStartln="55" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="-1585297472" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-1585297472" unbViolId="0de4726e-ba55-3dc4-9d35-ffa6f34044c3" locStartPos="21" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="2b18b1f0-78e1-3ec1-b214-23bca3810e3c" locEndPos="22" locType="sr" hash="-275311578" locEndLn="55" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="55" locFile="/VSCodeIntegrate/timer.c" locStartln="55" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_b" lnHash="-1585297472" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="-1585297472" unbViolId="d896230f-aaaa-387e-8381-3c0ef87f8df1" locStartPos="21" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="1a0f74ff-6eb2-3b95-a594-8b609f097a86" locEndPos="22" locType="sr" hash="-275311578" locEndLn="55" goals="0,"/>
    <StdViol msg="Usage of 'mktime' function is not allowed" ln="57" locFile="/VSCodeIntegrate/timer.c" locStartln="57" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_b" lnHash="-731975428" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="-731975428" unbViolId="f48dac47-3619-3293-9173-b62110cec0b0" locStartPos="28" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="14e61226-f191-361d-92a9-c82f95f05e06" locEndPos="29" locType="sr" hash="-275311578" locEndLn="57" goals="0,"/>
    <StdViol msg="Values &quot;tm_tmp&quot; passed to library function &quot;mktime&quot; without being checked" ln="57" locFile="/VSCodeIntegrate/timer.c" locStartln="57" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_3" lnHash="-731975428" rule.header="The validity of values passed to library functions shall be checked" tool="c++test" lineHash="-731975428" unbViolId="a9eac11f-ad68-3af7-9d52-6cc2fdde0094" locStartPos="28" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="0672df6b-042d-3d78-adcb-e73ae9f4992e" locEndPos="29" locType="sr" hash="-275311578" locEndLn="57" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="60" locFile="/VSCodeIntegrate/timer.c" locStartln="60" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="17156239" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="17156239" unbViolId="afd2948f-8749-3953-9c2a-f25fc412fd88" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="e3f828ad-0549-383a-b1ee-de45629d91a1" locEndPos="5" locType="sr" hash="-275311578" locEndLn="60" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="61" locFile="/VSCodeIntegrate/timer.c" locStartln="61" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="1051372518" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="1051372518" unbViolId="e688bcbf-5ba6-31c2-a568-7a219aaec875" locStartPos="22" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="cc991879-bb5b-339b-9ce2-00bcf6725131" locEndPos="23" locType="sr" hash="-275311578" locEndLn="61" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="61" locFile="/VSCodeIntegrate/timer.c" locStartln="61" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_b" lnHash="1051372518" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="1051372518" unbViolId="4b8f7f5f-1b24-3e4e-86fd-a2355efd74ee" locStartPos="22" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="0bab1f95-2918-3da1-9d95-d3fcbf0a4025" locEndPos="23" locType="sr" hash="-275311578" locEndLn="61" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="62" locFile="/VSCodeIntegrate/timer.c" locStartln="62" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="-129737380" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-129737380" unbViolId="eb8939ad-418b-37d3-94f1-a436be857698" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="6e511721-816c-3f3d-bb24-69da438ea24a" locEndPos="5" locType="sr" hash="-275311578" locEndLn="62" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="63" locFile="/VSCodeIntegrate/timer.c" locStartln="63" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="-1585297472" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-1585297472" unbViolId="83bf2720-2798-3290-91b4-8f0e0d2947f7" locStartPos="21" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="09f41c54-bfd1-31f5-b5ac-07a72858d53d" locEndPos="22" locType="sr" hash="-275311578" locEndLn="63" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="63" locFile="/VSCodeIntegrate/timer.c" locStartln="63" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_b" lnHash="-1585297472" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="-1585297472" unbViolId="55e1d6c6-e52f-3d73-8713-37e8ab87dddd" locStartPos="21" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="ee7386a0-7304-3c7f-8a92-af81860a68d9" locEndPos="22" locType="sr" hash="-275311578" locEndLn="63" goals="0,"/>
    <StdViol msg="Usage of 'mktime' function is not allowed" ln="65" locFile="/VSCodeIntegrate/timer.c" locStartln="65" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_b" lnHash="-1409060683" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="-1409060683" unbViolId="5e7f1e2f-9f74-343c-88c4-1c9790740829" locStartPos="26" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="c7d2bf8e-4189-397c-ae3d-bbb4d45ce2d9" locEndPos="27" locType="sr" hash="-275311578" locEndLn="65" goals="0,"/>
    <StdViol msg="Values &quot;tm_tmp&quot; passed to library function &quot;mktime&quot; without being checked" ln="65" locFile="/VSCodeIntegrate/timer.c" locStartln="65" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_3" lnHash="-1409060683" rule.header="The validity of values passed to library functions shall be checked" tool="c++test" lineHash="-1409060683" unbViolId="6cfcd40b-f9f1-3eaf-88de-98cd61ae38a1" locStartPos="26" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="72295f1a-d517-37ea-b1d6-ae42c06e12c5" locEndPos="27" locType="sr" hash="-275311578" locEndLn="65" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="68" locFile="/VSCodeIntegrate/timer.c" locStartln="68" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="-397800787" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-397800787" unbViolId="778abd56-c590-35db-9176-4c1a68ebb6bf" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5879f6bc-8f73-3451-b155-d3959eb21bd3" locEndPos="5" locType="sr" hash="-275311578" locEndLn="68" goals="0,"/>
    <StdViol msg="Implicit conversion between signed and unsigned type shall not be used" ln="69" locFile="/VSCodeIntegrate/timer.c" locStartln="69" sev="3" auth="syoung" locRef="3" rule="MISRA2004-10_1_a" lnHash="1021803899" rule.header="Avoid implicit conversions between signed and unsigned integer types" tool="c++test" lineHash="1021803899" unbViolId="b08eef66-fdd1-323b-b37a-3083a8b11829" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="e306ceef-2771-39ec-8bfa-f9cb43049ee9" locEndPos="5" locType="sr" hash="-275311578" locEndLn="69" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="69" locFile="/VSCodeIntegrate/timer.c" locStartln="69" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="1021803899" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="1021803899" unbViolId="d741dbf0-39e3-3c5b-abdd-468592ced3d6" locStartPos="26" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="de0f9f64-df31-3164-b53b-dd7c4cedfb97" locEndPos="27" locType="sr" hash="-275311578" locEndLn="69" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function call" ln="69" locFile="/VSCodeIntegrate/timer.c" locStartln="69" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_b" lnHash="1021803899" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="1021803899" unbViolId="cffaa08a-758c-34c2-a133-25c86d36e5bf" locStartPos="26" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="642f44e4-4f26-3d2a-a925-69d1ab445373" locEndPos="27" locType="sr" hash="-275311578" locEndLn="69" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="74" locFile="/VSCodeIntegrate/timer.c" locStartln="74" sev="3" auth="syoung" locRef="3" rule="MISRA2004-6_3_b" lnHash="-231664969" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="-231664969" unbViolId="9efb40ee-f5d3-32e4-9b27-6bacf31c1528" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="62f5891f-a1cf-3477-9d4e-b1af29027a62" locEndPos="1" locType="sr" hash="-275311578" locEndLn="74" goals="0,"/>
    <StdViol msg="Prototype of function 'add_timer' does not precede function definition" ln="74" locFile="/VSCodeIntegrate/timer.c" locStartln="74" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="-231664969" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-231664969" unbViolId="8bd87474-dfd1-32e5-ba5a-74e5c8ca7eaf" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="0e8ac2ac-454a-3952-a01f-3da230ade7a5" locEndPos="5" locType="sr" hash="-275311578" locEndLn="74" goals="0,"/>
    <StdViol msg="Declare function 'add_timer' with parameter type void" ln="74" locFile="/VSCodeIntegrate/timer.c" locStartln="74" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_5" lnHash="-231664969" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="-231664969" unbViolId="661db04e-fa08-378e-a910-1b026c59de98" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="959392a5-b480-3f7d-a3a8-cd8b7ba96d4e" locEndPos="5" locType="sr" hash="-275311578" locEndLn="74" goals="0,"/>
    <StdViol msg="Prototype of function 'query_user' does not precede function call" ln="78" locFile="/VSCodeIntegrate/timer.c" locStartln="78" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="-174357818" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="-174357818" unbViolId="70fb740d-b97e-35ba-9bcc-3cf2378e0497" locStartPos="13" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5f4835d1-a199-372d-be6d-099709183359" locEndPos="14" locType="sr" hash="-275311578" locEndLn="78" goals="0,"/>
    <StdViol msg="Prototype of function 'query_user' does not precede function call" ln="78" locFile="/VSCodeIntegrate/timer.c" locStartln="78" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_b" lnHash="-174357818" rule.header="Functions shall always have visible prototype at the function call" tool="c++test" lineHash="-174357818" unbViolId="90da5b26-7102-382e-9802-f7d0f231ed2f" locStartPos="13" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="0afa5fc9-6758-38c8-9ad3-c4e78ac9bb53" locEndPos="14" locType="sr" hash="-275311578" locEndLn="78" goals="0,"/>
    <StdViol msg="Test of a value against zero should be made explicit" ln="80" locFile="/VSCodeIntegrate/timer.c" locStartln="80" sev="3" auth="syoung" locRef="3" rule="MISRA2004-13_2" lnHash="-1502932978" rule.header="Tests of a value against zero should be made explicit, unless the operand is effectively Boolean" tool="c++test" lineHash="-1502932978" unbViolId="44ebe5d1-d50c-3cd8-a660-3bd85502c590" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="743a1be5-0e8b-366c-9afe-f29223cec27f" locEndPos="5" locType="sr" hash="-275311578" locEndLn="80" goals="0,"/>
    <StdViol msg="Provide only one exit point in 'add_timer' function" ln="83" locFile="/VSCodeIntegrate/timer.c" locStartln="83" sev="3" auth="syoung" locRef="3" rule="MISRA2004-14_7" lnHash="-992348185" rule.header="A function shall have a single point of exit at the end of the function" tool="c++test" lineHash="-992348185" unbViolId="e2832fd9-5091-3f5c-af48-40c5abae8b89" locStartPos="8" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="c2f84300-bd87-3493-9264-a286fe693c0a" locEndPos="9" locType="sr" hash="-275311578" locEndLn="83" goals="0,"/>
    <StdViol msg="Provide only one exit point in 'add_timer' function" ln="85" locFile="/VSCodeIntegrate/timer.c" locStartln="85" sev="3" auth="syoung" locRef="3" rule="MISRA2004-14_7" lnHash="-1256396037" rule.header="A function shall have a single point of exit at the end of the function" tool="c++test" lineHash="-1256396037" unbViolId="258262d2-65a1-339a-b02d-1a58d86d7ba2" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="c5ebd19e-e5b7-37a0-aec6-33d4279bd31c" locEndPos="5" locType="sr" hash="-275311578" locEndLn="85" goals="0,"/>
    <StdViol msg="Do not use the '++' operator with other operators in the expression" ln="98" locFile="/VSCodeIntegrate/timer.c" locStartln="98" sev="3" auth="syoung" locRef="3" rule="MISRA2004-12_13" lnHash="-1933903777" rule.header="The increment (++) and decrement (--) operators should not be mixed with other operators in an expression" tool="c++test" lineHash="-1933903777" unbViolId="4c4b8699-28b5-329a-9219-ebc4f1a3c4fd" locStartPos="22" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="808a687a-3e89-3e05-93ba-7b21e2eaa842" locEndPos="23" locType="sr" hash="-275311578" locEndLn="98" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="100" locFile="/VSCodeIntegrate/timer.c" locStartln="100" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="-1597326853" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-1597326853" unbViolId="45c29555-0471-3fc6-a11d-28a465b67c2c" locStartPos="8" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="05def38b-ce19-3a16-94b1-8d5904e9c7c3" locEndPos="9" locType="sr" hash="-275311578" locEndLn="100" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="108" locFile="/VSCodeIntegrate/timer.c" locStartln="108" sev="3" auth="syoung" locRef="3" rule="MISRA2004-6_3_b" lnHash="997006354" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="997006354" unbViolId="e3949e55-0a15-3c96-be14-1220db327812" locStartPos="25" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="fe5aa12e-1ae1-3fc4-a5a2-0e19808e1d6b" locEndPos="26" locType="sr" hash="-275311578" locEndLn="108" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="111" locFile="/VSCodeIntegrate/timer.c" locStartln="111" sev="3" auth="syoung" locRef="3" rule="MISRA2004-6_3_b" lnHash="1679375043" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1679375043" unbViolId="20a8590f-2311-33b0-916b-f2d70647dc0f" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="4c2b6156-6c2f-3b54-915f-f6cd240a4fbe" locEndPos="5" locType="sr" hash="-275311578" locEndLn="111" goals="0,"/>
    <StdViol msg="'free' function should not be used" ln="123" locFile="/VSCodeIntegrate/timer.c" locStartln="123" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_4" lnHash="-813884052" rule.header="Dynamic heap memory allocation shall not be used" tool="c++test" lineHash="-813884052" unbViolId="2ce1ba09-bb5c-3e2d-8109-5acc74b21bcb" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="135bde7c-6b83-3952-a41b-932e2ba0793d" locEndPos="5" locType="sr" hash="-275311578" locEndLn="123" goals="0,"/>
    <StdViol msg="Values &quot;tr&quot; passed to library function &quot;free&quot; without being checked" ln="123" locFile="/VSCodeIntegrate/timer.c" locStartln="123" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_3" lnHash="-813884052" rule.header="The validity of values passed to library functions shall be checked" tool="c++test" lineHash="-813884052" unbViolId="158ad885-ecda-3ed8-87aa-11df0aa7cb6a" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5bad9796-93a4-3098-8c2a-c1161c4101c5" locEndPos="5" locType="sr" hash="-275311578" locEndLn="123" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="126" locFile="/VSCodeIntegrate/timer.c" locStartln="126" sev="3" auth="syoung" locRef="3" rule="MISRA2004-6_3_b" lnHash="1296456001" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1296456001" unbViolId="e8b98cf2-2cd9-3003-919a-c52a80946123" locStartPos="25" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="1b3f5fea-2e05-3c0a-a1fd-cb06e1167fd1" locEndPos="26" locType="sr" hash="-275311578" locEndLn="126" goals="0,"/>
    <StdViol msg="Usage of 'strftime' function is not allowed" ln="133" locFile="/VSCodeIntegrate/timer.c" locStartln="133" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_b" lnHash="-23883783" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="-23883783" unbViolId="dc5891ec-4382-3ba2-9f85-c3e3d8aff28c" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="468e06d5-8801-3e1b-a4f3-f8d3b0dffb49" locEndPos="5" locType="sr" hash="-275311578" locEndLn="133" goals="0,"/>
    <StdViol msg="Result of &quot;localtime&quot; passed to library function &quot;strftime&quot; without being checked" ln="133" locFile="/VSCodeIntegrate/timer.c" locStartln="133" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_3" lnHash="-23883783" rule.header="The validity of values passed to library functions shall be checked" tool="c++test" lineHash="-23883783" unbViolId="97f191e2-6313-3939-a26a-abd1a6578a5b" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="c6082ca1-86a7-3684-949e-d487199afaf4" locEndPos="5" locType="sr" hash="-275311578" locEndLn="133" goals="0,"/>
    <StdViol msg="Values &quot;start&quot; passed to library function &quot;strftime&quot; without being checked" ln="133" locFile="/VSCodeIntegrate/timer.c" locStartln="133" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_3" lnHash="-23883783" rule.header="The validity of values passed to library functions shall be checked" tool="c++test" lineHash="-23883783" unbViolId="5cbefc86-0734-353c-be87-b291a7fddbe3" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="1754d02b-91b6-34ef-b40a-4f3b212d95d4" locEndPos="5" locType="sr" hash="-275311578" locEndLn="133" goals="0,"/>
    <StdViol msg="Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used" ln="133" locFile="/VSCodeIntegrate/timer.c" locStartln="133" sev="3" auth="syoung" locRef="3" rule="MISRA2004-10_1_a" lnHash="-23883783" rule.header="Avoid implicit conversions between signed and unsigned integer types" tool="c++test" lineHash="-23883783" unbViolId="923d1acd-bcc4-3df1-be4e-514aa1d292c4" locStartPos="20" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="17ed658a-811f-3933-a91c-e17cbca23823" locEndPos="21" locType="sr" hash="-275311578" locEndLn="133" goals="0,"/>
    <StdViol msg="Usage of 'localtime' function is not allowed" ln="133" locFile="/VSCodeIntegrate/timer.c" locStartln="133" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_b" lnHash="-23883783" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="-23883783" unbViolId="54a78163-4428-3b66-8e20-2ed246c9f9eb" locStartPos="37" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="df24cd89-edf8-3d04-9d34-c13c1057a014" locEndPos="38" locType="sr" hash="-275311578" locEndLn="133" goals="0,"/>
    <StdViol msg="Usage of 'strftime' function is not allowed" ln="134" locFile="/VSCodeIntegrate/timer.c" locStartln="134" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_b" lnHash="-1644342585" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="-1644342585" unbViolId="a2831967-76b6-33ca-b129-865eb00edf82" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="f1b938ba-750e-3601-ad5d-d3ee4765241a" locEndPos="5" locType="sr" hash="-275311578" locEndLn="134" goals="0,"/>
    <StdViol msg="Result of &quot;localtime&quot; passed to library function &quot;strftime&quot; without being checked" ln="134" locFile="/VSCodeIntegrate/timer.c" locStartln="134" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_3" lnHash="-1644342585" rule.header="The validity of values passed to library functions shall be checked" tool="c++test" lineHash="-1644342585" unbViolId="25d5bcd9-3185-3399-b72c-39ad894bb7ea" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="38313579-ccb7-3f57-b7d6-0f5f31b95d17" locEndPos="5" locType="sr" hash="-275311578" locEndLn="134" goals="0,"/>
    <StdViol msg="Values &quot;end&quot; passed to library function &quot;strftime&quot; without being checked" ln="134" locFile="/VSCodeIntegrate/timer.c" locStartln="134" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_3" lnHash="-1644342585" rule.header="The validity of values passed to library functions shall be checked" tool="c++test" lineHash="-1644342585" unbViolId="778c926d-630e-3874-ae47-837c186bcb57" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5940c989-3d35-3837-87b7-8689abe5f137" locEndPos="5" locType="sr" hash="-275311578" locEndLn="134" goals="0,"/>
    <StdViol msg="Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used" ln="134" locFile="/VSCodeIntegrate/timer.c" locStartln="134" sev="3" auth="syoung" locRef="3" rule="MISRA2004-10_1_a" lnHash="-1644342585" rule.header="Avoid implicit conversions between signed and unsigned integer types" tool="c++test" lineHash="-1644342585" unbViolId="f23954b7-f485-37a8-a069-45052edccea7" locStartPos="18" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="8b23c69e-88f7-3634-a56d-fad7774949cf" locEndPos="19" locType="sr" hash="-275311578" locEndLn="134" goals="0,"/>
    <StdViol msg="Usage of 'localtime' function is not allowed" ln="134" locFile="/VSCodeIntegrate/timer.c" locStartln="134" sev="3" auth="syoung" locRef="3" rule="MISRA2004-20_12_b" lnHash="-1644342585" rule.header="The time handling functions and macros of the library &lt;time.h> shall not be used" tool="c++test" lineHash="-1644342585" unbViolId="4aee7864-f6db-3a56-aed2-d3ff4ce3360b" locStartPos="35" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="d67640de-7e7d-3ee7-81e9-5a86530b768f" locEndPos="36" locType="sr" hash="-275311578" locEndLn="134" goals="0,"/>
    <StdViol msg="Test of a value against zero should be made explicit" ln="136" locFile="/VSCodeIntegrate/timer.c" locStartln="136" sev="3" auth="syoung" locRef="3" rule="MISRA2004-13_2" lnHash="130267201" rule.header="Tests of a value against zero should be made explicit, unless the operand is effectively Boolean" tool="c++test" lineHash="130267201" unbViolId="1a724b54-7b13-3226-8897-5d2a0bdb90c3" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="fddbd70e-cbea-339a-91bc-c15491077617" locEndPos="5" locType="sr" hash="-275311578" locEndLn="136" goals="0,"/>
    <StdViol msg="Unused function's &quot;sprintf&quot; return value" ln="137" locFile="/VSCodeIntegrate/timer.c" locStartln="137" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="201551585" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="201551585" unbViolId="8ff48f30-27e4-3b2a-836d-6f5df3c5deea" locStartPos="8" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="78f8f402-cee6-3838-8654-2e569704e9ed" locEndPos="9" locType="sr" hash="-275311578" locEndLn="137" goals="0,"/>
    <StdViol msg="Prototype of function 'list_timers' does not precede function definition" ln="142" locFile="/VSCodeIntegrate/timer.c" locStartln="142" sev="3" auth="syoung" locRef="3" rule="MISRA2004-8_1_a" lnHash="1408249924" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="1408249924" unbViolId="a22b1b49-dba3-3741-82c2-ba4420ab48ca" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="0be521b1-3998-3436-bb9b-457f1dd44f79" locEndPos="6" locType="sr" hash="-275311578" locEndLn="142" goals="0,"/>
    <StdViol msg="Declare function 'list_timers' with parameter type void" ln="142" locFile="/VSCodeIntegrate/timer.c" locStartln="142" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_5" lnHash="1408249924" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="1408249924" unbViolId="0cb67ddf-9948-3477-aada-423946c63496" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="737699c9-0b05-3aad-801a-382623b8b4e9" locEndPos="6" locType="sr" hash="-275311578" locEndLn="142" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="145" locFile="/VSCodeIntegrate/timer.c" locStartln="145" sev="3" auth="syoung" locRef="3" rule="MISRA2004-6_3_b" lnHash="1679375043" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1679375043" unbViolId="2bd701ea-4078-3ddc-9509-8061cfe4d13d" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="3f818da2-cad2-3fdd-98cb-0d05c6f095d6" locEndPos="5" locType="sr" hash="-275311578" locEndLn="145" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="146" locFile="/VSCodeIntegrate/timer.c" locStartln="146" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="1628413856" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="1628413856" unbViolId="8f4bb004-cdb3-3b7c-8d50-0e01c1d75bd7" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="2dc6b02a-3bd3-38f5-b13a-63b024207752" locEndPos="5" locType="sr" hash="-275311578" locEndLn="146" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="147" locFile="/VSCodeIntegrate/timer.c" locStartln="147" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="1760988551" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="1760988551" unbViolId="a00888e2-07cb-3747-8d82-f2ceffa0a177" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="f9d7b7ee-2a29-38b0-998f-a3c255972b23" locEndPos="5" locType="sr" hash="-275311578" locEndLn="147" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="151" locFile="/VSCodeIntegrate/timer.c" locStartln="151" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="924656480" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="924656480" unbViolId="fe996149-7340-3903-961b-f42e007a17fc" locStartPos="8" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="24c25e77-527d-3279-ad23-114a325c8b02" locEndPos="9" locType="sr" hash="-275311578" locEndLn="151" goals="0,"/>
    <StdViol msg="Unused function's &quot;print_string&quot; return value" ln="153" locFile="/VSCodeIntegrate/timer.c" locStartln="153" sev="3" auth="syoung" locRef="3" rule="MISRA2004-16_10" lnHash="-332149005" rule.header="If a function returns error information, then that error information shall be tested" tool="c++test" lineHash="-332149005" unbViolId="c961f32f-8bad-3066-8773-73123fc8d764" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="7c11ea5c-4403-3fba-a331-5ee1ac339e73" locEndPos="5" locType="sr" hash="-275311578" locEndLn="153" goals="0,"/>
    <StdViol msg="&lt;stdio.h> library shall not be used" ln="10" locFile="/VSCodeIntegrate/stdinout.c" locStartln="10" sev="3" auth="syoung" locRef="4" rule="MISRA2004-20_9" lnHash="1233725276" rule.header="The input/output library stdio.h shall not be used" tool="c++test" lineHash="1233725276" unbViolId="ebf9e173-5b0f-33e0-ab09-b24e49f09cda" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="86c50dc7-86da-328f-83fd-6556b9958ed6" locEndPos="1" locType="sr" hash="844867668" locEndLn="10" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="16" locFile="/VSCodeIntegrate/stdinout.c" locStartln="16" sev="3" auth="syoung" locRef="4" rule="MISRA2004-6_3_b" lnHash="2073209951" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="2073209951" unbViolId="3d31f156-ace2-3855-91ab-0eb0b17b7a3f" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="96e113e3-4baf-358f-a8b7-98e74bffa04d" locEndPos="1" locType="sr" hash="844867668" locEndLn="16" goals="0,"/>
    <StdViol msg="Prototype of function 'get_input_digit' does not precede function definition" ln="16" locFile="/VSCodeIntegrate/stdinout.c" locStartln="16" sev="3" auth="syoung" locRef="4" rule="MISRA2004-8_1_a" lnHash="2073209951" rule.header="Functions shall have prototype declarations and the prototype shall be visible at both the function definition and call" tool="c++test" lineHash="2073209951" unbViolId="2ac0ff1c-0389-3ef4-8f32-b78159147e8b" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="dba04c3b-0535-388b-8071-2f2957fe4e2f" locEndPos="5" locType="sr" hash="844867668" locEndLn="16" goals="0,"/>
    <StdViol msg="Declare function 'get_input_digit' with parameter type void" ln="16" locFile="/VSCodeIntegrate/stdinout.c" locStartln="16" sev="3" auth="syoung" locRef="4" rule="MISRA2004-16_5" lnHash="2073209951" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="2073209951" unbViolId="13c56e8e-ec23-3d15-bb5d-25c049da1103" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="7443eded-687f-3558-ad8c-321a355eb798" locEndPos="5" locType="sr" hash="844867668" locEndLn="16" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="19" locFile="/VSCodeIntegrate/stdinout.c" locStartln="19" sev="3" auth="syoung" locRef="4" rule="MISRA2004-6_3_b" lnHash="1679375043" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1679375043" unbViolId="8b6498d8-eb84-3379-880c-731d8168b195" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5210cf53-228a-3668-8da4-42085a21cbaf" locEndPos="5" locType="sr" hash="844867668" locEndLn="19" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="35" locFile="/VSCodeIntegrate/stdinout.c" locStartln="35" sev="3" auth="syoung" locRef="4" rule="MISRA2004-6_3_b" lnHash="-1448247265" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="-1448247265" unbViolId="7ae434e0-31ac-33a3-9ee3-e6b153f1b98c" locStartPos="11" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="f43dc2d8-2cfa-32aa-8394-f978e6812fb9" locEndPos="12" locType="sr" hash="844867668" locEndLn="35" goals="0,"/>
    <StdViol msg="Do not use the 'atoi' function" ln="46" locFile="/VSCodeIntegrate/stdinout.c" locStartln="46" sev="3" auth="syoung" locRef="4" rule="MISRA2004-20_10" lnHash="1849933771" rule.header="The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used" tool="c++test" lineHash="1849933771" unbViolId="46aa8331-0045-39f0-92b5-f2d3ee6c7c4c" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="2ddf2150-bb64-37a7-93b4-422e9e20c367" locEndPos="13" locType="sr" hash="844867668" locEndLn="46" goals="0,"/>
    <StdViol msg="Values &quot;buf&quot; passed to library function &quot;atoi&quot; without being checked" ln="46" locFile="/VSCodeIntegrate/stdinout.c" locStartln="46" sev="3" auth="syoung" locRef="4" rule="MISRA2004-20_3" lnHash="1849933771" rule.header="The validity of values passed to library functions shall be checked" tool="c++test" lineHash="1849933771" unbViolId="45d65e93-d69f-3f44-8bfa-91c33103a3ea" locStartPos="12" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="cf97aa98-b5e2-3b7f-acb7-fe946d596f94" locEndPos="13" locType="sr" hash="844867668" locEndLn="46" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="52" locFile="/VSCodeIntegrate/stdinout.c" locStartln="52" sev="3" auth="syoung" locRef="4" rule="MISRA2004-6_3_b" lnHash="-1042560936" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="-1042560936" unbViolId="acdaccee-4fe6-39f9-9c1f-03a2ca89d5ef" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5a7d6c58-558e-3bbb-80a6-1607928e8695" locEndPos="1" locType="sr" hash="844867668" locEndLn="52" goals="0,"/>
    <StdViol msg="Pass parameter &quot;str&quot; with const specifier" ln="52" locFile="/VSCodeIntegrate/stdinout.c" locStartln="52" sev="3" auth="syoung" locRef="4" rule="MISRA2004-16_7" lnHash="-1042560936" rule.header="A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object" tool="c++test" lineHash="-1042560936" unbViolId="fce2573f-abae-305b-9cc1-b641df6687d4" locStartPos="23" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="0c26a799-3c98-391b-b01a-6cbb1029db98" locEndPos="24" locType="sr" hash="844867668" locEndLn="52" goals="0,"/>
    <StdViol msg="Do not use reserved identifiers : _consts_h_" ln="3" locFile="/VSCodeIntegrate/consts.h" locStartln="3" sev="3" auth="syoung" locRef="5" rule="MISRA2004-20_1_a" lnHash="-2108418455" rule.header="Do not #define or #undef identifiers with names which start with underscore" tool="c++test" lineHash="-2108418455" unbViolId="93f35aad-6695-3e84-ac1d-4f7ce395c81f" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="34b62b00-75aa-3a88-9e07-dfeda7e8f5f1" locEndPos="1" locType="sr" urgent="true" hash="1651539479" locEndLn="3" goals="1,"/>
    <StdViol msg="Do not use reserved identifiers : _input_h_" ln="3" locFile="/VSCodeIntegrate/inout.h" locStartln="3" sev="3" auth="syoung" locRef="6" rule="MISRA2004-20_1_a" lnHash="554854633" rule.header="Do not #define or #undef identifiers with names which start with underscore" tool="c++test" lineHash="554854633" unbViolId="73155b69-ecf0-3f04-a99f-1a770752bb3b" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="eab6fa92-4204-3acd-bb32-1a0382bc39c0" locEndPos="1" locType="sr" urgent="true" hash="-311681184" locEndLn="3" goals="1,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="6" locFile="/VSCodeIntegrate/inout.h" locStartln="6" sev="3" auth="syoung" locRef="6" rule="MISRA2004-6_3_b" lnHash="-155000900" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="-155000900" unbViolId="3abc3395-8926-381a-af21-c2e0d4c97f4e" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="872ac136-66bf-37bb-aad6-47b40581d01a" locEndPos="1" locType="sr" urgent="true" hash="-311681184" locEndLn="6" goals="1,"/>
    <StdViol msg="Declare function 'get_input_digit' with parameter type void" ln="6" locFile="/VSCodeIntegrate/inout.h" locStartln="6" sev="3" auth="syoung" locRef="6" rule="MISRA2004-16_5" lnHash="-155000900" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="-155000900" unbViolId="01a22fcf-14c3-3e8f-94d8-41e3e2fbd69e" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="48e62051-0d08-3e95-9daf-d62b085f9023" locEndPos="5" locType="sr" urgent="true" hash="-311681184" locEndLn="6" goals="1,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="9" locFile="/VSCodeIntegrate/inout.h" locStartln="9" sev="3" auth="syoung" locRef="6" rule="MISRA2004-6_3_b" lnHash="-1729353454" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="-1729353454" unbViolId="938a8d43-a0d6-311b-a093-a5bf7e9858bb" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="633c6d43-59d7-34fa-9ddc-c4ad207bb634" locEndPos="1" locType="sr" urgent="true" hash="-311681184" locEndLn="9" goals="1,"/>
    <StdViol msg="Names shall be given for all the parameters in function 'print_string'" ln="9" locFile="/VSCodeIntegrate/inout.h" locStartln="9" sev="3" auth="syoung" locRef="6" rule="MISRA2004-16_3" lnHash="-1729353454" rule.header="Identifiers shall be given for all of the parameters in a function prototype declaration" tool="c++test" lineHash="-1729353454" unbViolId="d751ae7a-074e-37f8-a909-5bdc8219cea1" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="569c6f78-43c7-3b58-b276-01a668229c3f" locEndPos="5" locType="sr" urgent="true" hash="-311681184" locEndLn="9" goals="1,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="12" locFile="/VSCodeIntegrate/inout.h" locStartln="12" sev="3" auth="syoung" locRef="6" rule="MISRA2004-6_3_b" lnHash="-1128300596" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="-1128300596" unbViolId="174e0ffb-0429-38b9-8f1d-3fa545530079" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="a647fb0b-1628-33cb-9b27-b0d7c1a5efbc" locEndPos="1" locType="sr" urgent="true" hash="-311681184" locEndLn="12" goals="1,"/>
    <StdViol msg="Declare function 'print_string_array' with parameter type void" ln="12" locFile="/VSCodeIntegrate/inout.h" locStartln="12" sev="3" auth="syoung" locRef="6" rule="MISRA2004-16_5" lnHash="-1128300596" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="-1128300596" unbViolId="b198b0d9-26b5-33d8-ad4e-95cbefc06e7f" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="a8e9e77d-51eb-31f6-a013-29382710a165" locEndPos="5" locType="sr" urgent="true" hash="-311681184" locEndLn="12" goals="1,"/>
    <StdViol msg="Do not use reserved identifiers : _clock_h_" ln="3" locFile="/VSCodeIntegrate/clock.h" locStartln="3" sev="3" auth="syoung" locRef="7" rule="MISRA2004-20_1_a" lnHash="1162366501" rule.header="Do not #define or #undef identifiers with names which start with underscore" tool="c++test" lineHash="1162366501" unbViolId="0dfcb6e2-37b6-3397-b4bd-d132acea5b8b" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5abb5ddb-ff67-3399-a49f-cece3387fefb" locEndPos="1" locType="sr" urgent="true" hash="-1204881763" locEndLn="3" goals="1,"/>
    <StdViol msg="Do not include the &lt;time.h> header file" ln="5" locFile="/VSCodeIntegrate/clock.h" locStartln="5" sev="3" auth="syoung" locRef="7" rule="MISRA2004-20_12" lnHash="-1042055562" rule.header="The standard header files &lt;time.h> or &lt;ctime> shall not be used" tool="c++test" lineHash="-1042055562" unbViolId="7d2b60f8-8b74-35da-a29b-47f86fc83d5f" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="794293f8-dcd7-381e-9ed4-4248a257b963" locEndPos="1" locType="sr" urgent="true" hash="-1204881763" locEndLn="5" goals="1,"/>
    <StdViol msg="Declare function 'display_time' with parameter type void" ln="8" locFile="/VSCodeIntegrate/clock.h" locStartln="8" sev="3" auth="syoung" locRef="7" rule="MISRA2004-16_5" lnHash="957119588" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="957119588" unbViolId="cec25450-bb17-30cf-a6de-2a864c5922c3" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="74b78587-8504-3412-9a91-7fbf975461ad" locEndPos="6" locType="sr" urgent="true" hash="-1204881763" locEndLn="8" goals="1,"/>
    <StdViol msg="Names shall be given for all the parameters in function 'set_time'" ln="11" locFile="/VSCodeIntegrate/clock.h" locStartln="11" sev="3" auth="syoung" locRef="7" rule="MISRA2004-16_3" lnHash="-701432954" rule.header="Identifiers shall be given for all of the parameters in a function prototype declaration" tool="c++test" lineHash="-701432954" unbViolId="e32429c9-4be5-37aa-972a-3cdcf4507cda" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="7d76899f-7889-3756-a894-d43edd48965d" locEndPos="6" locType="sr" urgent="true" hash="-1204881763" locEndLn="11" goals="1,"/>
    <StdViol msg="The 'time_t' identifier should not be used" ln="11" locFile="/VSCodeIntegrate/clock.h" locStartln="11" sev="3" auth="syoung" locRef="7" rule="MISRA2004-20_12_c" lnHash="-701432954" rule.header="The types defined in the library &lt;time.h> shall not be used" tool="c++test" lineHash="-701432954" unbViolId="8e1ad6f0-f1c7-30a0-9fcf-15775e2f287b" locStartPos="14" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="e10c15f1-c834-379b-b61f-ff3dfb4ff100" locEndPos="15" locType="sr" urgent="true" hash="-1204881763" locEndLn="11" goals="1,"/>
    <StdViol msg="Do not use reserved identifiers : _timer_h_" ln="3" locFile="/VSCodeIntegrate/timer.h" locStartln="3" sev="3" auth="syoung" locRef="8" rule="MISRA2004-20_1_a" lnHash="-1992342642" rule.header="Do not #define or #undef identifiers with names which start with underscore" tool="c++test" lineHash="-1992342642" unbViolId="c7ddac7c-2eda-39cf-a240-553720759963" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="b9570112-9589-34c9-982a-7ba9e62506f1" locEndPos="1" locType="sr" hash="-311568100" locEndLn="3" goals="0,"/>
    <StdViol msg="Do not include the &lt;time.h> header file" ln="5" locFile="/VSCodeIntegrate/timer.h" locStartln="5" sev="3" auth="syoung" locRef="8" rule="MISRA2004-20_12" lnHash="-1042055562" rule.header="The standard header files &lt;time.h> or &lt;ctime> shall not be used" tool="c++test" lineHash="-1042055562" unbViolId="972b3f27-3ae8-360c-8439-6029ba54550f" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="94cca6eb-9f0b-3987-a23d-7bcb6fd3a3a2" locEndPos="1" locType="sr" hash="-311568100" locEndLn="5" goals="0,"/>
    <StdViol msg="The 'time_t' identifier should not be used" ln="11" locFile="/VSCodeIntegrate/timer.h" locStartln="11" sev="3" auth="syoung" locRef="8" rule="MISRA2004-20_12_c" lnHash="2125380426" rule.header="The types defined in the library &lt;time.h> shall not be used" tool="c++test" lineHash="2125380426" unbViolId="4510bd53-e977-355a-91b8-59c8088ea29f" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="28604f14-3032-3e25-b805-063edae9e0b1" locEndPos="5" locType="sr" hash="-311568100" locEndLn="11" goals="0,"/>
    <StdViol msg="The 'time_t' identifier should not be used" ln="12" locFile="/VSCodeIntegrate/timer.h" locStartln="12" sev="3" auth="syoung" locRef="8" rule="MISRA2004-20_12_c" lnHash="1676941809" rule.header="The types defined in the library &lt;time.h> shall not be used" tool="c++test" lineHash="1676941809" unbViolId="3e6dad4e-4cd9-3190-aee6-993d026ea5df" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="22dd33ea-d7dd-3cd2-894f-e791973b8a44" locEndPos="5" locType="sr" hash="-311568100" locEndLn="12" goals="0,"/>
    <StdViol msg="The basic numerical type 'unsigned' should not be used" ln="13" locFile="/VSCodeIntegrate/timer.h" locStartln="13" sev="3" auth="syoung" locRef="8" rule="MISRA2004-6_3_b" lnHash="-391931805" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="-391931805" unbViolId="d12dacb9-1d5d-3e49-8ad4-89e83f86b604" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="38aef3c8-f666-32f9-8a79-690662f93f19" locEndPos="5" locType="sr" hash="-311568100" locEndLn="13" goals="0,"/>
    <StdViol msg="Declare function 'init_timer' with parameter type void" ln="17" locFile="/VSCodeIntegrate/timer.h" locStartln="17" sev="3" auth="syoung" locRef="8" rule="MISRA2004-16_5" lnHash="-571522376" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="-571522376" unbViolId="3e84585b-1b18-364f-8c92-706c159736fd" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="cf079e4a-b08b-3867-83e8-3781e8d64476" locEndPos="6" locType="sr" hash="-311568100" locEndLn="17" goals="0,"/>
    <StdViol msg="Declare function 'uninit_timer' with parameter type void" ln="18" locFile="/VSCodeIntegrate/timer.h" locStartln="18" sev="3" auth="syoung" locRef="8" rule="MISRA2004-16_5" lnHash="-750737473" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="-750737473" unbViolId="84bf10c6-241c-3a28-b362-e23d1699b480" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="696e797b-7819-3262-809e-69d678f72f7f" locEndPos="6" locType="sr" hash="-311568100" locEndLn="18" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="21" locFile="/VSCodeIntegrate/timer.h" locStartln="21" sev="3" auth="syoung" locRef="8" rule="MISRA2004-6_3_b" lnHash="1408320612" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1408320612" unbViolId="66a2c5fd-9dee-3ae3-902d-db2b25565684" locStartPos="0" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="49d271fb-05b5-3446-a6f4-a9a19ff60669" locEndPos="1" locType="sr" hash="-311568100" locEndLn="21" goals="0,"/>
    <StdViol msg="Declare function 'add_timer' with parameter type void" ln="21" locFile="/VSCodeIntegrate/timer.h" locStartln="21" sev="3" auth="syoung" locRef="8" rule="MISRA2004-16_5" lnHash="1408320612" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="1408320612" unbViolId="a1151536-c3b3-33a6-a334-330531333b8e" locStartPos="4" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="4b04f766-8cc9-34b5-9c8d-5511971248eb" locEndPos="5" locType="sr" hash="-311568100" locEndLn="21" goals="0,"/>
    <StdViol msg="Names shall be given for all the parameters in function 'add_timer_record'" ln="24" locFile="/VSCodeIntegrate/timer.h" locStartln="24" sev="3" auth="syoung" locRef="8" rule="MISRA2004-16_3" lnHash="431182393" rule.header="Identifiers shall be given for all of the parameters in a function prototype declaration" tool="c++test" lineHash="431182393" unbViolId="8a86f9ac-52db-3a64-a6f9-7b5070b57a8f" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="14160061-d8e1-3d22-88bf-b9369e72bb97" locEndPos="6" locType="sr" hash="-311568100" locEndLn="24" goals="0,"/>
    <StdViol msg="Names shall be given for all the parameters in function 'delete_timer_record'" ln="27" locFile="/VSCodeIntegrate/timer.h" locStartln="27" sev="3" auth="syoung" locRef="8" rule="MISRA2004-16_3" lnHash="1493922828" rule.header="Identifiers shall be given for all of the parameters in a function prototype declaration" tool="c++test" lineHash="1493922828" unbViolId="6ecf81b3-0b0a-3e9e-9eeb-b0c2ac11af66" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="d818f208-92e9-3f13-ab55-a98a46ef0ffb" locEndPos="6" locType="sr" hash="-311568100" locEndLn="27" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="27" locFile="/VSCodeIntegrate/timer.h" locStartln="27" sev="3" auth="syoung" locRef="8" rule="MISRA2004-6_3_b" lnHash="1493922828" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="1493922828" unbViolId="74dcb7ec-9ce6-37b8-aed2-cd0a6f6aa4a0" locStartPos="25" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="5b98bed3-b8fa-347a-8c71-693f9886a535" locEndPos="26" locType="sr" hash="-311568100" locEndLn="27" goals="0,"/>
    <StdViol msg="Names shall be given for all the parameters in function 'format_timer_record'" ln="30" locFile="/VSCodeIntegrate/timer.h" locStartln="30" sev="3" auth="syoung" locRef="8" rule="MISRA2004-16_3" lnHash="-70128892" rule.header="Identifiers shall be given for all of the parameters in a function prototype declaration" tool="c++test" lineHash="-70128892" unbViolId="5450218b-bb27-33ef-b041-531bee742601" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="ac4682b5-3591-38da-b63c-0156be177469" locEndPos="6" locType="sr" hash="-311568100" locEndLn="30" goals="0,"/>
    <StdViol msg="The basic numerical type 'int' should not be used" ln="30" locFile="/VSCodeIntegrate/timer.h" locStartln="30" sev="3" auth="syoung" locRef="8" rule="MISRA2004-6_3_b" lnHash="-70128892" rule.header="typedefs should be used in place of the basic types" tool="c++test" lineHash="-70128892" unbViolId="07748994-34d0-3065-a3ef-e3863dbbde30" locStartPos="25" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="025014a1-d296-36cc-ad54-278d3a9874ba" locEndPos="26" locType="sr" hash="-311568100" locEndLn="30" goals="0,"/>
    <StdViol msg="Declare function 'list_timers' with parameter type void" ln="33" locFile="/VSCodeIntegrate/timer.h" locStartln="33" sev="3" auth="syoung" locRef="8" rule="MISRA2004-16_5" lnHash="706074743" rule.header="Functions with no parameters shall be declared with parameter type void" tool="c++test" lineHash="706074743" unbViolId="945d3e90-cc9e-339d-8f68-a87b4975fd0f" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="fabb8bee-c550-345f-a6d1-51800c4de957" locEndPos="6" locType="sr" hash="-311568100" locEndLn="33" goals="0,"/>
  </StdViols>

      <TestedFilesDetails>
         <Total name="Total (Suppressed)" supp="0" total="167">
            <Project id="VSCodeIntegrate" name="VSCodeIntegrate" supp="0" total="167">
               <Res loc="/VSCodeIntegrate/clock.c" locRef="1" locType="sr" name="clock.c" supp="0" total="9"/>
               <Res loc="/VSCodeIntegrate/driver.c" locRef="2" locType="sr" name="driver.c" supp="0" total="47"/>
               <Res loc="/VSCodeIntegrate/timer.c" locRef="3" locType="sr" name="timer.c" supp="0" total="73"/>
               <Res loc="/VSCodeIntegrate/stdinout.c" locRef="4" locType="sr" name="stdinout.c" supp="0" total="10"/>
               <Res loc="/VSCodeIntegrate/consts.h" locRef="5" locType="sr" name="consts.h" supp="0" total="1"/>
               <Res loc="/VSCodeIntegrate/inout.h" locRef="6" locType="sr" name="inout.h" supp="0" total="7"/>
               <Res loc="/VSCodeIntegrate/clock.h" locRef="7" locType="sr" name="clock.h" supp="0" total="5"/>
               <Res loc="/VSCodeIntegrate/timer.h" locRef="8" locType="sr" name="timer.h" supp="0" total="15"/>
            </Project>
         </Total>
      </TestedFilesDetails>
   </CodingStandards>
   <Statistics>
      
   </Statistics>
</ResultsSession>